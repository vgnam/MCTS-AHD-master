def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    best_node = None
    best_score = float('inf')
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        remaining_nodes = unvisited_nodes - {node}
        if remaining_nodes:
            min_neighbor_dist = min(distance_matrix[node][n] for n in remaining_nodes)
        else:
            min_neighbor_dist = distance_matrix[node][destination_node]
        penalty = 1.0 if current_dist < min_neighbor_dist * 0.7 else 0.0
        score = current_dist + min_neighbor_dist + penalty
        if score < best_score:
            best_score = score
            best_node = node
    return next_node
