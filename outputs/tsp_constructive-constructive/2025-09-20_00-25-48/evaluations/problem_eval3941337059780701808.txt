def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    radius = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else float('inf')
    candidates = [node for node in unvisited_nodes if distance_matrix[current_node][node] <= radius]

    if not candidates:
        candidates = unvisited_nodes

    max_ratio = -float('inf')
    next_node = None
    for node in candidates:
        distance_reduction = distance_matrix[current_node][node] - (distance_matrix[node][destination_node] if len(unvisited_nodes) == 1 else min(distance_matrix[node][other] for other in unvisited_nodes - {node}))
        ratio = distance_reduction / len(unvisited_nodes)
        if ratio > max_ratio:
            max_ratio = ratio
            next_node = node

    return next_node
