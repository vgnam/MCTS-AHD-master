def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_total_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        current_cost = distance_matrix[current_node][node]
        if unvisited_nodes - {node}:
            next_candidate = min(unvisited_nodes - {node}, key=lambda x: distance_matrix[node][x])
            next_cost = distance_matrix[node][next_candidate]
        else:
            next_cost = distance_matrix[node][destination_node]
        total_cost = current_cost + next_cost
        if total_cost < min_total_cost:
            min_total_cost = total_cost
            next_node = node
    return next_node
