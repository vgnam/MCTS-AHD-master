def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    # Calculate added distance for each unvisited node
    added_distances = {node: distance_matrix[current_node][node] + distance_matrix[node][destination_node] for node in unvisited_nodes}

    # Select the node with the minimum added distance
    next_node = min(added_distances, key=added_distances.get)

    return next_node
