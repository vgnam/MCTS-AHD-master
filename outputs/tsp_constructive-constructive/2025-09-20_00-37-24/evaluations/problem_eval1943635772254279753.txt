import random
import numpy as np

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)

    if min_dist == max_dist:
        weights = [1.0 / len(unvisited_nodes)] * len(unvisited_nodes)
    else:
        normalized = [(max_dist - d) / (max_dist - min_dist) for d in distances]
        weights = [w / sum(normalized) for w in normalized]

    if random.random() < 0.8:
        next_node = random.choices(unvisited_nodes, weights=weights, k=1)[0]
    else:
        next_node = random.choice(unvisited_nodes)

    return next_node
