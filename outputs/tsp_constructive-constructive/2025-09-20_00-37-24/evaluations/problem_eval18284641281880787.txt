import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0, iteration=0):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    nearest_neighbors = sorted(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    # Decay temperature over iterations
    temp_decay = max(0.1, 1.0 - 0.01 * iteration)
    current_temp = temperature * temp_decay

    # Probability of random selection based on temperature
    random_prob = math.exp(-current_temp) / (1 + math.exp(-current_temp))

    if random.random() < random_prob:
        next_node = random.choice(nearest_neighbors)
    else:
        candidates = nearest_neighbors[:min(3, len(nearest_neighbors))]
        next_node = random.choice(candidates)

    return next_node
