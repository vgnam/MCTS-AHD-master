import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    nearest_neighbors = sorted(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    # Dynamic probability: higher chance to pick from fewer candidates when fewer nodes remain
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes <= 3:
        candidates = nearest_neighbors[:1]  # Only consider the absolute nearest
    else:
        # 70% chance to pick from top 2, 20% from top 3, 10% random
        if random.random() < 0.7:
            candidates = nearest_neighbors[:2]
        elif random.random() < 0.9:
            candidates = nearest_neighbors[:3]
        else:
            candidates = nearest_neighbors

    next_node = random.choice(candidates)
    return next_node
