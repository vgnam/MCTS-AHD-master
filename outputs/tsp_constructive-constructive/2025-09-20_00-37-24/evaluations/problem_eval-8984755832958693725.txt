import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    distances = [(node, distance_matrix[current_node][node]) for node in unvisited_nodes]
    distances.sort(key=lambda x: x[1])

    # Calculate probabilities using softmax with temperature
    weights = [math.exp(-d / temperature) for (_, d) in distances]
    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]

    # Select node based on probabilities
    next_node = random.choices([node for (node, _) in distances], weights=probabilities, k=1)[0]

    return next_node
