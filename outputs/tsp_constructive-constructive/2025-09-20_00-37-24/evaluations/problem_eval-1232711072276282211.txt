import random
import numpy as np

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    weights = [1.0 / (dist + 1e-6) for dist in distances]  # Avoid division by zero

    # Normalize weights
    total_weight = sum(weights)
    normalized_weights = [w / total_weight for w in weights]

    # 90% chance to pick from weighted distribution, 10% chance to pick random
    if random.random() < 0.9:
        next_node = np.random.choice(unvisited_nodes, p=normalized_weights)
    else:
        next_node = random.choice(unvisited_nodes)

    return next_node
