import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    nearest_neighbors = sorted(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    q = random.random()
    q0 = 0.9

    if q < q0:
        candidates = nearest_neighbors[:min(3, len(nearest_neighbors))]
        weights = [1.0 / distance_matrix[current_node][node] for node in candidates]
        next_node = random.choices(candidates, weights=weights, k=1)[0]
    else:
        next_node = random.choice(nearest_neighbors)

    return next_node
