import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    total_nodes = len(distance_matrix)
    remaining_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0
    threshold = 0.7 * remaining_ratio + 0.3  # Higher threshold as more nodes remain

    nearest_neighbors = sorted(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    if random.random() < threshold:
        candidates = nearest_neighbors[:min(2, len(nearest_neighbors))]
        next_node = random.choice(candidates)
    else:
        next_node = random.choice(nearest_neighbors)

    return next_node
