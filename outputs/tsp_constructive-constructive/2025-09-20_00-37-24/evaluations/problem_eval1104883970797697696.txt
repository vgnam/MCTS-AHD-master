import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    # Calculate selection probabilities based on inverse distance and learning factor
    learning_factor = 0.3
    total_weight = 0.0
    weights = []

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance == 0:
            weight = float('inf')
        else:
            weight = math.exp(-learning_factor * distance)
        weights.append(weight)
        total_weight += weight

    # Normalize probabilities
    probabilities = [w / total_weight for w in weights]

    # Select node based on probabilities
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
