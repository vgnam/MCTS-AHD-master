import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    nearest_neighbors = sorted(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    if random.random() < 0.7:  # 70% chance to pick from top 5 nearest
        candidates = nearest_neighbors[:min(5, len(nearest_neighbors))]
        next_node = random.choice(candidates)
    else:  # 30% chance to pick from middle range (next 5 after top 5)
        middle_start = min(5, len(nearest_neighbors))
        middle_end = min(10, len(nearest_neighbors))
        if middle_start < middle_end:
            candidates = nearest_neighbors[middle_start:middle_end]
            next_node = random.choice(candidates)
        else:
            next_node = random.choice(nearest_neighbors)
    return next_node
