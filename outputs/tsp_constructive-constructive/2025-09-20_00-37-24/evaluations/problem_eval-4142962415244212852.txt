import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temp=1.0, decay=0.99):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    # Calculate probabilities inversely proportional to distance, weighted by temperature
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    weights = [math.exp(-d / temp) for d in distances]
    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]

    # Select node based on weighted probabilities
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]

    # Decay temperature for next iteration
    temp *= decay

    return next_node
