import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    if not unvisited_nodes:
        return None

    nearest_neighbors = sorted(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    if random.random() < 0.8:  # 80% chance to pick from top 5 nearest
        candidates = nearest_neighbors[:min(5, len(nearest_neighbors))]
        next_node = random.choice(candidates)
    else:  # 20% chance to pick a random node from top 10
        candidates = nearest_neighbors[:min(10, len(nearest_neighbors))]
        next_node = random.choice(candidates)

    return next_node
