def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    exploration_pressure = (total_nodes - remaining_nodes) / (remaining_nodes + 1e-6)

    local_weight = 0.5 + 0.3 * (1.0 / (1.0 + exploration_pressure))
    global_weight = 0.3 + 0.2 * exploration_pressure

    next_node = min(unvisited_nodes, key=lambda node:
        (local_weight * distance_matrix[current_node][node] +
         global_weight * distance_matrix[node][destination_node] +
         0.2 * (distance_matrix[current_node][node] * exploration_pressure)))

    return next_node
