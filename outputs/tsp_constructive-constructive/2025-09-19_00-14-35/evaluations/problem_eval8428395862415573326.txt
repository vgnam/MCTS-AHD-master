def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if len(unvisited_nodes) == 1:
        return next(iter(unvisited_nodes))

    temperature = 1.0 / (len(unvisited_nodes) + 1)
    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        avg_remaining_dist = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0
        weight = 0.7 if len(unvisited_nodes) > 2 else 0.9
        score = (1 - weight) * current_dist + weight * avg_remaining_dist
        return score * temperature

    scores = [evaluate_node(node) for node in unvisited_nodes]
    probabilities = [math.exp(-s) for s in scores]
    total = sum(probabilities)
    probabilities = [p / total for p in probabilities]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
