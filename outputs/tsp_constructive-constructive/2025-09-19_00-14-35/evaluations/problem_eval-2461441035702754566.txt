def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_distance = distance_matrix[current_node][destination_node]
    total_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    if total_distance == 0:
        total_distance = 1e-6
    weight_current = 0.7 * (1 - remaining_distance / total_distance)
    weight_destination = 0.3 * (remaining_distance / total_distance)
    next_node = max(unvisited_nodes, key=lambda node: (weight_current * (1 / (distance_matrix[current_node][node] + 1e-6))) + (weight_destination * (1 / (distance_matrix[node][destination_node] + 1e-6))))
    return next_node
