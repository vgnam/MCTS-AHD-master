def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_distance = distance_matrix[current_node][destination_node]
    alpha = 0.4 if remaining_distance > 0.5 * max(distance_matrix[current_node][n] for n in unvisited_nodes) else 0.6
    beta = 0.3 if remaining_distance > 0.5 * max(distance_matrix[current_node][n] for n in unvisited_nodes) else 0.2
    next_node = max(unvisited_nodes, key=lambda node: (alpha * distance_matrix[node][destination_node] / distance_matrix[current_node][node]) + (beta * distance_matrix[node][destination_node] / distance_matrix[current_node][node]) - (0.3 * distance_matrix[node][destination_node]))
    return next_node
