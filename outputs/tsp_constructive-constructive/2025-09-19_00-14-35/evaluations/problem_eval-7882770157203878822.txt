def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    threshold = avg_distance * (1 + 0.5 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1)))

    def score(node):
        local_cost = distance_matrix[current_node][node]
        global_cost = distance_matrix[node][destination_node]
        return (global_cost - threshold) / (local_cost * (1 + 0.1 * len(unvisited_nodes)))

    next_node = max(unvisited_nodes, key=score)
    return next_node
