def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    candidate_scores = []
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        score = current_dist + (1.0 / (dest_dist + 1e-6)) * 10  # Avoid division by zero
        candidate_scores.append((node, score))
    next_node = min(candidate_scores, key=lambda x: x[1])[0]
    return next_node
