def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # +1 for the current node
    exploration_factor = 0.5 * (1 + math.sin((remaining_nodes / total_nodes) * math.pi - math.pi/2))  # Oscillates between 0 and 1
    local_weight = 0.3 + 0.7 * exploration_factor
    global_weight = 1 - local_weight
    next_node = min(unvisited_nodes, key=lambda node: local_weight * distance_matrix[current_node][node] + global_weight * distance_matrix[node][destination_node] + 0.1 * (1 if node in unvisited_nodes else 0))
    return next_node
