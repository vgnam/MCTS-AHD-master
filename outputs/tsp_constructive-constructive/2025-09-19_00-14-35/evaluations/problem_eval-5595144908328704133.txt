import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = max(0.1, 2.0 / (1.0 + 0.2 * remaining_nodes))

    def score(node):
        local_dist = distance_matrix[current_node][node]
        global_dist = distance_matrix[node][destination_node]
        return local_dist + global_dist

    scores = [score(node) for node in unvisited_nodes]
    min_score = min(scores)
    max_score = max(scores)

    if min_score == max_score:
        probabilities = [1.0 / len(unvisited_nodes) for _ in unvisited_nodes]
    else:
        probabilities = [(max_score - s) / (max_score - min_score) for s in scores]
        probabilities = [math.exp(p / temperature) for p in probabilities]
        sum_probs = sum(probabilities)
        probabilities = [p / sum_probs for p in probabilities]

    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
