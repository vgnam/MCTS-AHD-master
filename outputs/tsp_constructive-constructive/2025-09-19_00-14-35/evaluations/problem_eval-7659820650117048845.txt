def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_steps = len(unvisited_nodes) + 1
    remaining_steps = len(unvisited_nodes)

    def node_score(node):
        local_dist = distance_matrix[current_node][node]
        global_dist = distance_matrix[node][destination_node]
        dynamic_weight = remaining_steps / total_steps
        penalty = 1.0 if node in unvisited_nodes else 1.5
        return local_dist + dynamic_weight * global_dist * penalty

    next_node = min(unvisited_nodes, key=node_score)
    return next_node
