def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    local_weight = 0.6 + 0.2 * (remaining_nodes / (remaining_nodes + 1))  # Increase local weight as nodes are visited
    global_weight = 0.4 - 0.2 * (remaining_nodes / (remaining_nodes + 1))   # Decrease global weight as nodes are visited
    next_node = min(unvisited_nodes, key=lambda node: local_weight * distance_matrix[current_node][node] + global_weight * distance_matrix[node][destination_node])
    return next_node
