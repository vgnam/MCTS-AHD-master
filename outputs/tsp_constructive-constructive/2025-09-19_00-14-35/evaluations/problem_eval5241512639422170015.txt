def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    current_to_dest = distance_matrix[current_node][destination_node]
    if len(unvisited_nodes) == 1:
        return next(iter(unvisited_nodes))
    avg_remaining_dist = sum(distance_matrix[node][n] for node in unvisited_nodes for n in unvisited_nodes if n != node) / (len(unvisited_nodes) * (len(unvisited_nodes) - 1))
    weight = 1.0 / (len(unvisited_nodes) + 1) ** 2
    next_node = min(unvisited_nodes, key=lambda node: (distance_matrix[current_node][node] * distance_matrix[node][destination_node] + weight * avg_remaining_dist) / (1 + current_to_dest))
    return next_node
