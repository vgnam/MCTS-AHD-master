def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes and len(unvisited_nodes) == 1:
        return destination_node

    candidates = []
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        future_dist = distance_matrix[node][destination_node]
        candidates.append((node, current_dist, future_dist))

    def score(node, current_dist, future_dist):
        return 0.6 * current_dist + 0.4 * future_dist + 0.1 * np.random.rand()

    next_node, _, _ = min(candidates, key=lambda x: score(*x))
    return next_node
