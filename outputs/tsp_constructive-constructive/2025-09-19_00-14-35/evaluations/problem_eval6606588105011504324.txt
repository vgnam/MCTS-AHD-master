def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        min_distance = min(distance_matrix[current_node][node] for node in unvisited_nodes if node != destination_node)
        prob_dest = 1 / (1 + dest_distance)
        prob_nearest = min_distance / (min_distance + dest_distance)
        if np.random.rand() < prob_dest:
            return destination_node
        else:
            next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
            return next_node if np.random.rand() < prob_nearest else destination_node
    return next_node
