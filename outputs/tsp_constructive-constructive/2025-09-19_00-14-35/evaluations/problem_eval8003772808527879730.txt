def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if len(unvisited_nodes) == 1:
        return next(iter(unvisited_nodes))

    next_node = min(unvisited_nodes, key=lambda node: 0.6 * distance_matrix[current_node][node] + 0.4 * distance_matrix[node][destination_node])
    threshold_factor = 0.8 - (0.1 * (len(unvisited_nodes) / len(distance_matrix)))
    threshold = threshold_factor * (0.6 * distance_matrix[current_node][next_node] + 0.4 * distance_matrix[next_node][destination_node])

    if destination_node in unvisited_nodes:
        dest_score = 0.6 * distance_matrix[current_node][destination_node] + 0.4 * distance_matrix[destination_node][destination_node]
        if dest_score < threshold:
            return destination_node
    return next_node
