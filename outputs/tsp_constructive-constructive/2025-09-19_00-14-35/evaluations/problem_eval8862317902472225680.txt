def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    alpha = 2.0 ** (-remaining_nodes)  # Exponential decay factor

    next_node = max(unvisited_nodes, key=lambda node: (
        alpha * (distance_matrix[node][destination_node] / distance_matrix[current_node][node]) +
        (1 / distance_matrix[current_node][node]) *
        (1 - alpha * (1 / (1 + distance_matrix[node][destination_node])))
    ))
    return next_node
