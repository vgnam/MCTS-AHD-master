def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 1:
        local_weight = 0.9
        global_weight = 0.1
    else:
        local_weight = 0.5 + (0.4 * (remaining_nodes / len(distance_matrix)))
        global_weight = 0.5 - (0.4 * (remaining_nodes / len(distance_matrix)))

    avg_local_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes
    next_node = min(unvisited_nodes, key=lambda node: (local_weight * (distance_matrix[current_node][node] / avg_local_distance) + global_weight * distance_matrix[node][destination_node]))
    return next_node
