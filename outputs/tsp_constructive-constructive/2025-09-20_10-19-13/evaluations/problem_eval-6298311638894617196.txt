def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)

    def weighted_distance(node):
        proximity = distance_matrix[current_node][node]
        destination_bias = (total_nodes - remaining_nodes) / total_nodes
        destination_weight = distance_matrix[node][destination_node] * destination_bias
        return proximity + destination_weight

    next_node = min(unvisited_nodes, key=weighted_distance)
    return next_node
