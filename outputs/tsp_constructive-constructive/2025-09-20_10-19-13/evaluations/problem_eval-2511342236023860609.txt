def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)

    if min_dist == max_dist:
        weights = [1.0 / len(unvisited_nodes)] * len(unvisited_nodes)
    else:
        normalized_distances = [(max_dist - d) / (max_dist - min_dist) for d in distances]
        weights = [np.exp(w / temperature) for w in normalized_distances]
        sum_weights = sum(weights)
        weights = [w / sum_weights for w in weights]

    next_node = np.random.choice(unvisited_nodes, p=weights)
    return next_node
