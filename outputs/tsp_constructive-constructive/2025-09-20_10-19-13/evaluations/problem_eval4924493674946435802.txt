def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def dynamic_weight(node):
        base_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        return base_distance * (1 + 0.1 * (1 - dest_distance / max(distance_matrix[node])))
    next_node = min(unvisited_nodes, key=dynamic_weight)
    return next_node
