importance, using a fallback to the destination node if no unvisited nodes remain, while leveraging a weighted scoring function to balance proximity and node significance.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    next_node = max(unvisited_nodes, key=lambda node: (1 / distance_matrix[current_node][node]) * (node + 1))
    return next_node
