def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    # Calculate weighted scores for each unvisited node
    scores = {}
    for node in unvisited_nodes:
        neighbor_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        # Weighted score: 70% neighbor distance, 30% destination distance
        scores[node] = 0.7 * neighbor_dist + 0.3 * dest_dist

    # Select the node with the lowest weighted score
    next_node = min(scores, key=scores.get)
    return next_node
