def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    probabilities = [(min_dist / dist) ** 2 for dist in distances]  # Inverse square law for selection
    total_prob = sum(probabilities)
    normalized_probs = [p / total_prob for p in probabilities]
    selected_index = np.random.choice(len(unvisited_nodes), p=normalized_probs)
    return next_node
