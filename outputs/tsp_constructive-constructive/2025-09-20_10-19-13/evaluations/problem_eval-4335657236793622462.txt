import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0, decay_rate=0.99):
    if not unvisited_nodes:
        return destination_node

    # Calculate probabilities based on inverse distance and temperature
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)
    normalized = [(max_dist - d + 1e-10) / (max_dist - min_dist + 1e-10) for d in distances]  # Avoid division by zero
    probabilities = [math.exp(n / temperature) for n in normalized]
    total = sum(probabilities)
    probabilities = [p / total for p in probabilities]

    # Select node based on probabilities
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]

    # Decay temperature for the next iteration
    temperature *= decay_rate

    return next_node
