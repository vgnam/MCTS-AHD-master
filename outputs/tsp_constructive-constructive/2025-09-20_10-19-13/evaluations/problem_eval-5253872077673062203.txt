def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_score(node):
        current_dist = distance_matrix[current_node][node]
        if len(unvisited_nodes) == 1:
            return current_dist
        remaining_unvisited = unvisited_nodes - {node}
        avg_future_dist = sum(distance_matrix[node][n] for n in remaining_unvisited) / len(remaining_unvisited)
        return current_dist + 0.5 * avg_future_dist

    next_node = min(unvisited_nodes, key=lambda node: calculate_score(node))
    return next_node
