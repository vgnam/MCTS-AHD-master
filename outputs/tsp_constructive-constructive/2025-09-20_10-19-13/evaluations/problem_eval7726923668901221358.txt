defaulting to the destination node if no unvisited nodes remain.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def heuristic_factor(node):
        immediate_distance = distance_matrix[current_node][node]
        potential_path = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0
        return immediate_distance + 0.3 * potential_path

    next_node = min(unvisited_nodes, key=lambda node: heuristic_factor(node))
    return next_node
