def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def weighted_distance(node):
        local_dist = distance_matrix[current_node][node]
        global_dist = distance_matrix[node][destination_node]
        weight = 0.3  # Adjustable weight for balancing local and global factors
        return (1 - weight) * local_dist + weight * global_dist

    next_node = min(unvisited_nodes, key=weighted_distance)
    return next_node
