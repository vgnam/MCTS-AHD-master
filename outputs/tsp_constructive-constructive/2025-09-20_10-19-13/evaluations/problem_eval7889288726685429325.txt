import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    # Calculate weights based on inverse distances
    weights = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        weights.append(1.0 / distance if distance != 0 else float('inf'))

    # Normalize weights to form a probability distribution
    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]

    # Select next node based on weighted probabilities
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
