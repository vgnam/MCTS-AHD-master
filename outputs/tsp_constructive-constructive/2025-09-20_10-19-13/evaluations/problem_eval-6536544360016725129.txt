defaulting to the destination node if no unvisited nodes remain.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    temperature = 0.5
    exp_distances = [math.exp(-d / temperature) for d in distances]
    probabilities = [ed / sum(exp_distances) for ed in exp_distances]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
