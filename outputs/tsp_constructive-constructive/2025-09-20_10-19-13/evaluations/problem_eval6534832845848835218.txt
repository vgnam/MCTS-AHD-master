import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=0.1):
    if not unvisited_nodes:
        return destination_node

    # Calculate probabilities for each unvisited node using softmax with temperature
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)
    normalized_distances = [(max_dist - d) / (max_dist - min_dist + 1e-10) for d in distances]  # Normalize to [0, 1]

    # Apply softmax with temperature
    exp_distances = [math.exp(normalized_dist / temperature) for normalized_dist in normalized_distances]
    sum_exp = sum(exp_distances)
    probabilities = [exp / sum_exp for exp in exp_distances]

    # Select next node based on probabilities
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
