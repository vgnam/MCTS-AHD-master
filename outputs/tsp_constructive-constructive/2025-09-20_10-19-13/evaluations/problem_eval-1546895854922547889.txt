importance) over simply minimizing distance, while still ensuring the path returns to the destination node if no unvisited nodes remain.}

```python
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    next_node = max(unvisited_nodes, key=lambda node: (distance_matrix[current_node][node] * 0.7 + 100 / (distance_matrix[node][destination_node] + 1)))
    return next_node
