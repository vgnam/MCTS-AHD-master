def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    weighted_scores = {
        node: distance_matrix[current_node][node] * (1 - (distance_matrix[current_node][node] / (avg_distance + 1e-6)))
        for node in unvisited_nodes
    }

    next_node = min(unvisited_nodes, key=lambda node: weighted_scores[node])
    return next_node
