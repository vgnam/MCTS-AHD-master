def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [(node, distance_matrix[current_node][node]) for node in unvisited_nodes]
    min_distance = min(distances, key=lambda x: x[1])[1]
    weighted_nodes = [(node, (min_distance / (dist + 1e-6)) if dist != 0 else 1.0) for node, dist in distances]

    total_weight = sum(weight for _, weight in weighted_nodes)
    rand_val = random.random() * total_weight
    cumulative_weight = 0

    for node, weight in weighted_nodes:
        cumulative_weight += weight
        if rand_val <= cumulative_weight:
            return node

    return next_node
