def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    # Calculate dynamic weight factor based on remaining nodes
    weight_factor = 1.0 / (1.0 + len(unvisited_nodes) * 0.1)

    # Compute weighted scores for each candidate node
    def weighted_score(node):
        base_distance = distance_matrix[current_node][node]
        random_factor = 0.1 * base_distance * (1.0 - weight_factor)
        return base_distance + random_factor

    # Select node with the lowest weighted score
    next_node = min(unvisited_nodes, key=weighted_score)
    return next_node
