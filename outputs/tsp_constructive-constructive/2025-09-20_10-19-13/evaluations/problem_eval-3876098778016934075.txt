def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    node_degrees = {node: sum(1 for n in distance_matrix[node] if n > 0) for node in unvisited_nodes}
    weighted_scores = {
        node: (distance_matrix[current_node][node] * 0.7) + (1 / node_degrees[node] * 0.3)
        for node in unvisited_nodes
    }
    next_node = min(unvisited_nodes, key=lambda node: weighted_scores[node])
    return next_node
