def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_distance = min(distances)
    max_distance = max(distances)
    if min_distance == max_distance:
        probabilities = [1.0 / len(unvisited_nodes)] * len(unvisited_nodes)
    else:
        normalized_distances = [(max_distance - d) / (max_distance - min_distance) for d in distances]
        sum_normalized = sum(normalized_distances)
        probabilities = [d / sum_normalized for d in normalized_distances]
    next_node = np.random.choice(unvisited_nodes, p=probabilities)
    return next_node
