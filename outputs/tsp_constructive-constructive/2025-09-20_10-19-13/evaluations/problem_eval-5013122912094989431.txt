def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    destination_distance = distance_matrix[current_node][destination_node]
    probabilities = []
    total_weight = 0.0
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weight = (1 / (distance_to_node + 1e-6)) * (1 + 0.5 * (destination_distance / (distance_to_dest + 1e-6)))
        probabilities.append(weight)
        total_weight += weight
    probabilities = [p / total_weight for p in probabilities]
    next_node = np.random.choice(unvisited_nodes, p=probabilities)
    return next_node
