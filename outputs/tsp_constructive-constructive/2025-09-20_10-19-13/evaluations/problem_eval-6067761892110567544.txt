def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)
    if min_dist == max_dist:
        probabilities = [1.0 / len(unvisited_nodes)] * len(unvisited_nodes)
    else:
        probabilities = [(max_dist - dist + 1) / sum(max_dist - d + 1 for d in distances) for dist in distances]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
