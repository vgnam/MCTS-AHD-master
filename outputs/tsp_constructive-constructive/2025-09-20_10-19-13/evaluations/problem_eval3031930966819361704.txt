def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    alpha = 0.7  # Weight for current distance, (1 - alpha) for future cost
    next_node = min(
        unvisited_nodes,
        key=lambda node: (
            alpha * distance_matrix[current_node][node] +
            (1 - alpha) * distance_matrix[node][destination_node]
        )
    )
    return next_node
