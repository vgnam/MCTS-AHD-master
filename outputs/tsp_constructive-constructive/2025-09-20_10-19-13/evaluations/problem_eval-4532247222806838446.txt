def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    total_distance = sum(distances)
    if total_distance == 0:
        return min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    probabilities = [(total_distance - dist) / total_distance for dist in distances]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
