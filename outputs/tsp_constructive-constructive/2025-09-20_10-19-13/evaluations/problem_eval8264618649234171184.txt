def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)
    if min_dist == max_dist:
        return unvisited_nodes[0]
    probabilities = [(max_dist - dist + 1) / (max_dist - min_dist + 1) for dist in distances]
    total_prob = sum(probabilities)
    normalized_probs = [p / total_prob for p in probabilities]
    selected_index = np.random.choice(len(unvisited_nodes), p=normalized_probs)
    return next_node
