def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    # Calculate weights based on distance and remaining path length
    weights = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        weight = distance * (1 + 0.1 * remaining_distance)  # Adjustable factor
        weights.append(weight)

    # Select node with lowest weighted distance
    next_node = unvisited_nodes[weights.index(min(weights))]
    return next_node
