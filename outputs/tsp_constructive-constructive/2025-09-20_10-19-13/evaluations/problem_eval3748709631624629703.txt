def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def weighted_distance(node):
        base_distance = distance_matrix[current_node][node]
        if node == destination_node:
            return base_distance
        remaining_nodes = len(unvisited_nodes) - 1
        if remaining_nodes == 0:
            return base_distance + distance_matrix[node][destination_node]
        return base_distance + (distance_matrix[node][destination_node] / remaining_nodes)
    next_node = min(unvisited_nodes, key=weighted_distance)
    return next_node
