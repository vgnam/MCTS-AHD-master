def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def node_weight(node):
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        distance = distance_matrix[current_node][node]
        return distance / (degree + 1e-6)  # Avoid division by zero

    next_node = min(unvisited_nodes, key=lambda node: node_weight(node))
    return next_node
