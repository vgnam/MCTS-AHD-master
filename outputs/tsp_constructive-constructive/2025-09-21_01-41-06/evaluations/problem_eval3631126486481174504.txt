import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    # Calculate weights inversely proportional to distance
    weights = [1.0 / (distance_matrix[current_node][node] + 1e-10) for node in unvisited_nodes]

    # Normalize weights to form a probability distribution
    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]

    # Select next node based on the probability distribution
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
