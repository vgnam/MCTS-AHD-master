def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def path_weight(node):
        immediate = distance_matrix[current_node][node]
        future = distance_matrix[node][destination_node]
        penalty = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
        return immediate + 0.6 * future + 0.4 * penalty

    next_node = min(unvisited_nodes, key=path_weight)
    return next_node
