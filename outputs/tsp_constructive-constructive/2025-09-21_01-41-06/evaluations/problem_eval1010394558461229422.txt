import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0, decay_rate=0.99):
    if not unvisited_nodes:
        return destination_node

    # Calculate weights based on inverse distance and temperature
    weights = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        weight = math.exp(-distance / temperature)
        weights.append(weight)

    # Normalize weights to form a probability distribution
    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]

    # Select node based on probabilities
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]

    # Decay temperature for the next iteration
    temperature *= decay_rate

    return next_node
