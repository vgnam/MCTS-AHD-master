def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=0.1):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)

    # Normalize distances and compute probabilities
    probabilities = []
    for dist in distances:
        # Inverse distance with temperature scaling
        prob = (max_dist - dist + 1e-6) ** (1 / temperature)
        probabilities.append(prob)

    # Normalize probabilities
    total_prob = sum(probabilities)
    probabilities = [p / total_prob for p in probabilities]

    # Select node based on probabilities
    next_node = np.random.choice(unvisited_nodes, p=probabilities)
    return next_node
