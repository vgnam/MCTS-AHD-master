def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + 0.1 * total_unvisited)  # Dynamic weight based on remaining nodes

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        score = weight_factor * current_to_node + (1 - weight_factor) * node_to_dest

        if score < min_score:
            min_score = score
            next_node = node

    if next_node is None:
        return destination_node

    return next_node
