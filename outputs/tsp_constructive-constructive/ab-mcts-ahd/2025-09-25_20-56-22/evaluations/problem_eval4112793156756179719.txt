def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def node_score(node):
        current_distance = distance_matrix[current_node][node]
        remaining_unvisited = unvisited_nodes - {node}
        if not remaining_unvisited:
            return current_distance
        next_two = sorted(remaining_unvisited, key=lambda n: distance_matrix[node][n])[:2]
        sum_next_two = sum(distance_matrix[node][n] for n in next_two)
        return current_distance + sum_next_two

    next_node = min(unvisited_nodes, key=node_score)
    return next_node
