def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def node_score(node):
        current_distance = distance_matrix[current_node][node]
        remaining_nodes = unvisited_nodes - {node}
        if not remaining_nodes:
            return current_distance

        avg_future_distance = sum(distance_matrix[node][other] for other in remaining_nodes) / len(remaining_nodes)
        weight_factor = 0.6 if len(remaining_nodes) > 4 else 0.4

        return (weight_factor * current_distance) + ((1 - weight_factor) * avg_future_distance)

    next_node = min(unvisited_nodes, key=node_score)
    return next_node
