def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def combined_score(node):
        local_distance = distance_matrix[current_node][node]
        global_factor = 0
        max_distance = 0
        remaining_nodes = len(unvisited_nodes)

        if remaining_nodes > 1:
            for other_node in unvisited_nodes:
                if other_node != node:
                    dist = distance_matrix[node][other_node]
                    global_factor += dist
                    if dist > max_distance:
                        max_distance = dist
            global_factor /= (remaining_nodes - 1)

        dynamic_weight = 0.5 / (1 + remaining_nodes)
        return local_distance + dynamic_weight * global_factor + 0.2 * max_distance

    next_node = min(unvisited_nodes, key=lambda node: combined_score(node))
    return next_node
