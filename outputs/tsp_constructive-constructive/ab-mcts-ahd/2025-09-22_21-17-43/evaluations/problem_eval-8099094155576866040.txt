def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_distance = distance_matrix[current_node][destination_node]
    local_weight = 0.1 + 0.4 * (remaining_distance / sum(sum(distance_matrix) for distance_matrix in distance_matrix))
    destination_weight = 1.0 - local_weight

    def weighted_score(node):
        local_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        return local_weight * local_distance + destination_weight * destination_distance

    next_node = min(unvisited_nodes, key=lambda node: weighted_score(node))
    return next_node
