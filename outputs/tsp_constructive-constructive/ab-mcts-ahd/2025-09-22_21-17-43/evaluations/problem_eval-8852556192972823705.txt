def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def weighted_score(node):
        local_weight = 0.5
        destination_weight = 0.3
        proximity_bonus = 0.2
        local_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node] ** 1.5
        return local_weight * local_distance + destination_weight * destination_distance - proximity_bonus * (1 / (1 + local_distance))
    next_node = min(unvisited_nodes, key=lambda node: weighted_score(node))
    return next_node
