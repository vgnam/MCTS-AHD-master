def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def adjusted_score(node):
        total = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                total += distance_matrix[node][other_node]
        avg_distance = total / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0
        penalty = 0.5 * distance_matrix[node][destination_node]
        return avg_distance + penalty
    next_node = min(unvisited_nodes, key=lambda node: adjusted_score(node))
    return next_node
