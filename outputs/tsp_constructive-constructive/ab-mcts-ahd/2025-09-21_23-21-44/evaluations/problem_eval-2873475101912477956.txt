def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_cost = distance_matrix[current_node][node]
        hub_potential = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
        total_score = immediate_cost + 0.5 * hub_potential  # Balanced weighting
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
