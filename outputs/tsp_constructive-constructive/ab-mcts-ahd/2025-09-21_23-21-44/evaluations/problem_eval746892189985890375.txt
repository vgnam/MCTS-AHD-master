def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_combined_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_cost = distance_matrix[current_node][node]
        avg_cost = 0
        distance_variance = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                dist = distance_matrix[node][other_node]
                avg_cost += dist
                distance_variance += dist ** 2
        avg_cost /= len(unvisited_nodes) if len(unvisited_nodes) > 1 else 1
        variance = (distance_variance / (len(unvisited_nodes) - 1)) - (avg_cost ** 2) if len(unvisited_nodes) > 1 else 0
        weight = 0.9 - (0.2 * (1 - (remaining_nodes / len(unvisited_nodes)))) if remaining_nodes > 2 else 0.6
        combined_cost = weight * immediate_cost + (1 - weight) * avg_cost + 0.1 * variance
        if combined_cost < min_combined_cost:
            min_combined_cost = combined_cost
            next_node = node
    return next_node
