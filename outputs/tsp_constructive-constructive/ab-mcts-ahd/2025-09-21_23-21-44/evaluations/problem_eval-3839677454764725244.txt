def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    immediate_weight = 1.8
    connectivity_weight = 0.4
    destination_weight = 0.2
    if num_unvisited > 2:
        immediate_weight = 2.0
        connectivity_weight = 0.3
        destination_weight = 0.1
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        connectivity_score = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                connectivity_score += distance_matrix[node][other_node]
        connectivity_score /= num_unvisited - 1 if num_unvisited > 1 else 1
        destination_distance = distance_matrix[node][destination_node]
        combined_score = immediate_weight * immediate_distance + connectivity_weight * connectivity_score + destination_weight * destination_distance
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
