def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    weight_factor = 0.7
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]

        # Additional term: average distance to remaining unvisited nodes
        avg_remaining_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / max(1, len(unvisited_nodes) - 1)

        score = (weight_factor * immediate_distance) + ((1 - weight_factor) * (0.5 * potential_distance + 0.5 * avg_remaining_distance))

        if score < min_score:
            min_score = min_score
            next_node = node

    return next_node
