def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    if len(unvisited_nodes) > 1:
        unvisited_distances = [distance_matrix[node][destination_node] for node in unvisited_nodes]
        min_unvisited_distance = min(unvisited_distances)
        avg_unvisited_distance = sum(unvisited_distances) / len(unvisited_distances)
        max_unvisited_distance = max(unvisited_distances)
    else:
        min_unvisited_distance = avg_unvisited_distance = max_unvisited_distance = distance_matrix[unvisited_nodes[0]][destination_node]

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        balance_factor = 0.4 * (immediate_distance / min_unvisited_distance) + \
                         0.3 * (future_distance / avg_unvisited_distance) + \
                         0.3 * (future_distance / max_unvisited_distance)

        total_score = immediate_distance + future_distance * balance_factor

        if total_score < min_score:
            min_score = total_score
            next_node = node

    return next_node
