def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, alpha=0.5):
    if not unvisited_nodes:
        return destination_node
    min_weighted_sum = float('inf')
    next_node = None
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
    for node in unvisited_nodes:
        weighted_sum = alpha * distance_matrix[current_node][node] + (1 - alpha) * distance_matrix[node][destination_node]
        weighted_sum += 0.2 * (distance_matrix[current_node][node] - avg_distance)  # Centrality adjustment
        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node
    return next_node
