def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_weighted_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        heuristic_factor = (current_to_node + node_to_dest) / (1 + sum(distance_matrix[node][n] for n in unvisited_nodes if n != node))
        weighted_score = current_to_node * node_to_dest * heuristic_factor
        if weighted_score < min_weighted_score:
            min_weighted_score = weighted_score
            next_node = node
    return next_node
