def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = (remaining_nodes / (remaining_nodes + 1)) * (distance_matrix[current_node][destination_node] / sum(distance_matrix[current_node][node] for node in unvisited_nodes + [destination_node]))

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        distance_ratio = immediate_distance / potential_distance if potential_distance != 0 else 1.0

        score = (weight_factor * immediate_distance) + ((1 - weight_factor) * potential_distance) + (0.5 * distance_ratio)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
