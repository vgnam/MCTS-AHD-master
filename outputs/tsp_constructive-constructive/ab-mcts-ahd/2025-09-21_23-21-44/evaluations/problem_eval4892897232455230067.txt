import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic weight adjustment based on remaining nodes
        weight_factor = math.log(remaining_nodes + 1) / math.log(10)
        combined_score = (1.5 * weight_factor) * immediate_distance + (0.3 / weight_factor) * destination_distance

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
