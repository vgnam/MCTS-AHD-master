def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        weight_immediate = remaining_nodes / (remaining_nodes + 1)
        weight_destination = 1 / (remaining_nodes + 1)
        normalized_score = (weight_immediate * immediate_distance) + (weight_destination * destination_distance)
        if normalized_score < min_score:
            min_score = normalized_score
            next_node = node
        elif normalized_score == min_score:
            if len([n for n in unvisited_nodes if distance_matrix[node][n] > 0]) < len([n for n in unvisited_nodes if distance_matrix[next_node][n] > 0]):
                next_node = node
    return next_node
