def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    centrality_factor = 1 - (total_unvisited / (total_unvisited + 1))
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        centrality_score = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        weighted_score = 0.7 * immediate_distance + 0.2 * (centrality_factor * centrality_score) + 0.1 * destination_distance

        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node

    return next_node
