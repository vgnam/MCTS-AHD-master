def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_cost = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        if dest_dist == 0:
            score = immediate_cost
        else:
            projected_path_length = immediate_cost + dest_dist
            penalty = 1 + (immediate_cost / (projected_path_length + 1e-10))
            avg_cost = 0
            for other_node in unvisited_nodes:
                if other_node != node:
                    avg_cost += distance_matrix[node][other_node]
            avg_cost /= len(unvisited_nodes) if len(unvisited_nodes) > 1 else 1
            weight = 0.9 if remaining_nodes > 2 else 0.7
            score = weight * immediate_cost + (1 - weight) * avg_cost
            score *= penalty
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
