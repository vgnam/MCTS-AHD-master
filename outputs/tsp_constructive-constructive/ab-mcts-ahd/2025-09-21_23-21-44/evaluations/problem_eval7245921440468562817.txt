def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    max_immediate = max(distance_matrix[current_node][node] for node in unvisited_nodes)
    max_destination = max(distance_matrix[node][destination_node] for node in unvisited_nodes)
    max_score = max_immediate + 0.5 * max_destination
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = 0.5 + (remaining_nodes / (remaining_nodes + 1)) * 0.5
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        combined_score = immediate_distance + weight * destination_distance
        normalized_score = combined_score / max_score
        if normalized_score < min_score:
            min_score = normalized_score
            next_node = node
    return next_node
