def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_weighted_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        combined_score = immediate_distance - 0.5 * destination_distance
        additive = immediate_distance + destination_distance
        multiplicative = immediate_distance * destination_distance
        normalized_additive = additive / (immediate_distance + destination_distance + 1e-10)
        normalized_multiplicative = multiplicative / (immediate_distance * destination_distance + 1e-10)
        weighted_score = 0.6 * normalized_additive + 0.4 * normalized_multiplicative + combined_score
        if weighted_score < min_weighted_score:
            min_weighted_score = weighted_score
            next_node = node
    return next_node
