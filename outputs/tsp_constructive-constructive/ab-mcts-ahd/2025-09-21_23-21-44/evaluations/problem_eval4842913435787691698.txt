def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    weight_factor = num_unvisited / (num_unvisited + 1)
    proximity_penalty = 1.0 / (num_unvisited + 1)

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        normalized_distance = immediate_distance + potential_distance

        score = (weight_factor * immediate_distance) + ((1 - weight_factor) * potential_distance)
        score += proximity_penalty * (normalized_distance / (distance_matrix[current_node][destination_node] + 1e-6))

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
