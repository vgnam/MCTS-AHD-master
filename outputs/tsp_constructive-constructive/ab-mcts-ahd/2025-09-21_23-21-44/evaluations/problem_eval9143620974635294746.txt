def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_total_score = float('inf')
    next_node = None
    max_distance = max(max(row) for row in distance_matrix)
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        normalized_sum = (distance_to_node + distance_to_dest) / max_distance
        normalized_product = (distance_to_node * distance_to_dest) / (max_distance ** 2)
        total_score = 0.5 * normalized_sum + 0.5 * normalized_product
        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node
    return next_node
