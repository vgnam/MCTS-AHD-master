def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_unvisited = len(unvisited_nodes)
    if total_unvisited == 1:
        return unvisited_nodes[0]
    weight_immediate = 1.0 + (0.5 * (total_unvisited / len(distance_matrix)))
    weight_destination = 1.0 - (0.5 * (total_unvisited / len(distance_matrix)))
    min_score = float('inf')
    next_node = None
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / total_unvisited
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        avg_normalized = immediate_distance / avg_distance if avg_distance > 0 else 0
        combined_score = (weight_immediate * immediate_distance) + (weight_destination * destination_distance) + (0.2 * avg_normalized)
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
