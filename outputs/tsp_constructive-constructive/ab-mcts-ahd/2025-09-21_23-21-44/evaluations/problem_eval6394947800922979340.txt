def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    avg_dest_dist = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / remaining_nodes if remaining_nodes > 0 else 1
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        if dest_dist == 0:
            ratio = current_dist
        else:
            ratio = current_dist / dest_dist
        weight = 0.5 + 0.5 * (remaining_nodes / (remaining_nodes + 1))
        penalty = max(0, (current_dist - avg_dest_dist) / avg_dest_dist) if avg_dest_dist > 0 else 0
        score = weight * current_dist + (1 - weight) * ratio + penalty
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
