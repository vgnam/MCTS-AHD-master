import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    max_nodes = len(distance_matrix)
    exploration_factor = 1 - (1 / (1 + math.exp(-(remaining_nodes - max_nodes/2) / (max_nodes/4))))

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        weight_immediate = 1.5 + 0.5 * exploration_factor
        weight_destination = 0.3 + 0.2 * (1 - exploration_factor)

        combined_score = (weight_immediate * immediate_distance +
                          weight_destination * destination_distance)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
