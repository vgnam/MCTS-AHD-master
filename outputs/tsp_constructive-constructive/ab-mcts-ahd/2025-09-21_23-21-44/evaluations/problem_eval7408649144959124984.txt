def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        dynamic_weight = 1.0 / (1.0 + remaining_nodes)  # Weight adjusts based on remaining nodes
        score = (current_to_node + dynamic_weight * node_to_dest) / (1.0 + dynamic_weight)
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
