def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(unvisited_nodes) + 1
    min_score = float('inf')
    next_node = None
    threshold = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = 0.3 + 0.5 * (1 - len(unvisited_nodes) / total_nodes)
        penalty = 0.1 * (distance_to_current > threshold) * distance_to_current
        score = distance_to_current + dynamic_weight * distance_to_destination + penalty
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
