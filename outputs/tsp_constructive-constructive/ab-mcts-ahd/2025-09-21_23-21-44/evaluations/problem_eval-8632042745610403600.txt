def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_proximity = 0.7 if remaining_nodes > 1 else 0.9
    weight_efficiency = 0.3 if remaining_nodes > 1 else 0.1

    min_score = float('inf')
    next_node = None
    node_history = {}

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]

        if dest_dist == 0:
            score = current_dist
        else:
            score = weight_proximity * (current_dist / dest_dist) + weight_efficiency * (current_dist + dest_dist)

        if node in node_history:
            score += 0.1 * node_history[node]

        if score < min_score:
            min_score = score
            next_node = node

    if next_node in node_history:
        node_history[next_node] += 1
    else:
        node_history[next_node] = 1

    return next_node
