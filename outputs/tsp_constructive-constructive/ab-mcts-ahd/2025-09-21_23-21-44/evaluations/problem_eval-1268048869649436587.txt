def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    num_total = len(distance_matrix)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_from_node = distance_matrix[node][destination_node]
        straight_line_distance = distance_matrix[current_node][destination_node]
        deviation = abs(distance_to_node + distance_from_node - straight_line_distance)

        dynamic_weight = 0.5 + 0.5 * (num_unvisited / num_total)
        score = (dynamic_weight * (distance_to_node + distance_from_node)) + (0.2 * deviation)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
