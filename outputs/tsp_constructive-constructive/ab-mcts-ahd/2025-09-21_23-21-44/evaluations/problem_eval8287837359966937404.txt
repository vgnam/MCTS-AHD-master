def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    next_node = None
    best_score = float('-inf')
    num_nodes = len(distance_matrix)
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        centrality_heuristic = sum(distance_matrix[node]) / (num_nodes - 1)
        score = (0.6 * -distance) + (0.3 * (1 / (degree + 1))) + (0.1 * centrality_heuristic)
        if score > best_score:
            best_score = score
            next_node = node
    return next_node
