def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    next_node = None
    best_score = float('-inf')
    num_nodes = len(distance_matrix)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        centrality_heuristic = sum(distance_matrix[node]) / (num_nodes - 1)
        score = -immediate_distance - 0.3 * destination_distance + 0.2 * centrality_heuristic + 0.5 * (1 / (degree + 1))
        if score > best_score:
            best_score = score
            next_node = node
    return next_node
