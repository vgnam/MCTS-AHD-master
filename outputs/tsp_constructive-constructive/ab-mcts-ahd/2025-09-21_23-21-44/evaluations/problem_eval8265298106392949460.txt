def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    avg_unvisited_distance = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes)
    current_node_distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    avg_current_distance = sum(current_node_distances) / len(current_node_distances) if current_node_distances else 0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        distance_ratio = immediate_distance / future_distance if future_distance != 0 else 1.0
        penalty = 1.0 + 0.5 * abs(distance_ratio - 1.0)

        dynamic_weight = 0.7 if immediate_distance <= avg_current_distance else 0.3
        total_score = (dynamic_weight * immediate_distance + (1 - dynamic_weight) * future_distance) * penalty

        if total_score < min_score:
            min_score = total_score
            next_node = node

    return next_node
