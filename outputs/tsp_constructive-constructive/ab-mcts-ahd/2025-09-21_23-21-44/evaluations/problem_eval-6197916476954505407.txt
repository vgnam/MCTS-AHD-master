def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    scores = []
    current_path_length = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    max_degree = max(sum(1 for d in distance_matrix[node] if d > 0) for node in unvisited_nodes) if unvisited_nodes else 1
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        normalized_distance = distance / (current_path_length + 1e-6)
        temperature = 1.0 / (1.0 + 0.1 * current_path_length)
        score = (1 - normalized_distance) + (1 - degree / max_degree) * temperature
        scores.append((score, node))
    scores.sort(reverse=True, key=lambda x: x[0])
    return next_node
