def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    weight_factor = (total_unvisited / (total_unvisited + 1)) * (1 - (distance_matrix[current_node][destination_node] / sum(distance_matrix[current_node][node] for node in unvisited_nodes)))

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        normalization = 1 + (immediate_distance / (potential_distance + 1e-6))
        score = (weight_factor * immediate_distance) + ((1 - weight_factor) * potential_distance) / normalization

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
