def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    next_node = None
    best_score = float('-inf')
    total_nodes = len(distance_matrix)
    remaining_nodes = len(unvisited_nodes)
    tour_progress = (total_nodes - remaining_nodes) / total_nodes
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        weight = 1 / (1 + math.exp(-10 * (tour_progress - 0.5)))
        score = -distance * (1 - weight) + 0.5 * (1 / (degree + 1)) * weight
        if score > best_score:
            best_score = score
            next_node = node
    return next_node
