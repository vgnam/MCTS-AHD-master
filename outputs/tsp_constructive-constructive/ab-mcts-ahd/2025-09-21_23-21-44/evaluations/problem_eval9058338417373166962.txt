def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(distance_matrix)
    progress = (total_nodes - len(unvisited_nodes)) / total_nodes
    distance_weight = 1.0 - progress
    degree_weight = 0.5 + progress * 0.5

    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        degree_penalty = (degree / total_nodes) ** 2
        score = -distance_weight * distance + degree_weight * (1 / (degree + 1)) - degree_penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
