def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    weight_factor = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
    avg_distance_to_unvisited = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        centroid_distance = abs(immediate_distance - avg_distance_to_unvisited)
        score = (weight_factor * immediate_distance) + (0.5 * (1 - weight_factor) * potential_distance) + (0.5 * centroid_distance)

        if score < min_score:
            min_score = min_score
            next_node = node

    return next_node
