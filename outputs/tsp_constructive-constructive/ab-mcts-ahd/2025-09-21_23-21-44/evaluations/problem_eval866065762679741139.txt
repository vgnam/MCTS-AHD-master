def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        # Dynamic weight for destination distance
        weight = 0.5 + (1.0 / (remaining_nodes + 1))
        # Penalty for nodes too close to current node
        penalty = 0.1 * immediate_distance if immediate_distance < 10 else 0
        combined_score = immediate_distance + weight * destination_distance + penalty
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
