def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    total_unvisited_dist = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    avg_unvisited_dist = total_unvisited_dist / len(unvisited_nodes) if unvisited_nodes else 0
    current_path_length = distance_matrix[current_node][destination_node]
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        if dest_dist == 0:
            score = current_dist * (1 + (current_path_length / (total_unvisited_dist + 1e-10)))
        else:
            penalty = 1 + (current_dist / (avg_unvisited_dist + 1e-10)) * (current_path_length / (dest_dist + 1e-10))
            score = (current_dist + dest_dist) * penalty
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
