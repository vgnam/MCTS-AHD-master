def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        dist_current_to_node = distance_matrix[current_node][node]
        dist_node_to_dest = distance_matrix[node][destination_node]
        if dist_current_to_node == 0 or dist_node_to_dest == 0:
            score = 0
        else:
            harmonic_mean = 2 * (dist_current_to_node * dist_node_to_dest) / (dist_current_to_node + dist_node_to_dest)
            normalized_score = harmonic_mean / (dist_current_to_node + dist_node_to_dest)
            score = normalized_score
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
