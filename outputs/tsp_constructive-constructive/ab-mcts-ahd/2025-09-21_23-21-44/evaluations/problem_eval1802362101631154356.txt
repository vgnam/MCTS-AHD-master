import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (1 + remaining_nodes)
    candidates = []
    total_weight = 0.0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        revisit_penalty = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (remaining_nodes - 1) if remaining_nodes > 1 else 0
        score = immediate_distance + 0.5 * future_distance + 0.3 * revisit_penalty
        weight = math.exp(-score / temperature)
        candidates.append((node, weight))
        total_weight += weight

    if total_weight == 0:
        return random.choice(unvisited_nodes)

    rand_val = random.uniform(0, total_weight)
    cumulative_weight = 0.0
    for node, weight in candidates:
        cumulative_weight += weight
        if rand_val <= cumulative_weight:
            return node
    return next_node
