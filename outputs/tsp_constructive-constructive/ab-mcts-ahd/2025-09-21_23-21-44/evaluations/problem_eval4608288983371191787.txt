import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
    scores = []
    total_score = 0.0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Calculate angle between current->node and node->destination vectors
        angle = math.atan2(destination_distance, immediate_distance)

        # Combine distance and angle with temperature-based weighting
        combined_score = (temperature * immediate_distance) + ((1 - temperature) * angle)
        scores.append((node, combined_score))
        total_score += combined_score

    # Normalize scores and select probabilistically
    probabilities = [score / total_score for _, score in scores]
    next_node = random.choices([node for node, _ in scores], weights=probabilities, k=1)[0]

    return next_node
