def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    dynamic_factor = 1 / (1 + remaining_nodes)

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]

        if dest_dist == 0:
            score = current_dist
        else:
            ratio = current_dist / dest_dist
            path_savings = current_dist - dest_dist
            product = current_dist * dest_dist
            penalty = 1 + (current_dist / (dest_dist + 1e-10))

            weighted_score = (0.4 * ratio + 0.3 * path_savings + 0.3 * product) * (0.7 - dynamic_factor) + penalty * (0.3 + dynamic_factor)

        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node

    return next_node
