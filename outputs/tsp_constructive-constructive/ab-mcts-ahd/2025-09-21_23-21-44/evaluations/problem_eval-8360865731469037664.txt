def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_combined_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_cost = distance_matrix[current_node][node]
        future_cost = distance_matrix[node][destination_node]
        avg_cost = sum(distance_matrix[node][other_node] for other_node in unvisited_nodes if other_node != node) / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0
        variance_cost = sum((distance_matrix[node][other_node] - avg_cost) ** 2 for other_node in unvisited_nodes if other_node != node) / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0
        weight = 0.5 + 0.4 * (1 - remaining_nodes / (remaining_nodes + 1)) if remaining_nodes > 1 else 0.9
        combined_cost = weight * immediate_cost + (1 - weight) * (0.6 * future_cost + 0.4 * variance_cost)
        if combined_cost < min_combined_cost:
            min_combined_cost = combined_cost
            next_node = node
    return next_node
