def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    weight_factor = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        avg_cost = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                avg_cost += distance_matrix[node][other_node]
        avg_cost /= len(unvisited_nodes) if len(unvisited_nodes) > 1 else 1
        combined_score = (weight_factor * immediate_distance) + (0.5 * (1 - weight_factor) * destination_distance) + (0.3 * avg_cost)
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
