def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    dynamic_weight = 1.0 - (remaining_nodes / total_nodes) * 0.5
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        combined_score = immediate_distance * dynamic_weight + destination_distance * (1 - dynamic_weight)
        combined_score += 0.1 * (random.random() - 0.5) * combined_score
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
