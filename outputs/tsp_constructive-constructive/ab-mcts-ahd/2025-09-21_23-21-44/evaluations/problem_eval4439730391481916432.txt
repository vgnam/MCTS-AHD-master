def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    weight_factor = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
    min_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        connectivity_score = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                connectivity_score += distance_matrix[node][other_node]
        connectivity_score /= num_unvisited - 1 if num_unvisited > 1 else 1
        destination_distance = distance_matrix[node][destination_node]
        combined_score = (1.5 * weight_factor * immediate_distance) + (0.5 * weight_factor * connectivity_score) + (0.2 * (1 - weight_factor) * destination_distance)
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
