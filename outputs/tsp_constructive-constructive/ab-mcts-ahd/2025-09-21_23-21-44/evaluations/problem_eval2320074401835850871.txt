def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    avg_dist = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / num_unvisited if num_unvisited > 0 else 0
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        if dest_dist == 0:
            score = current_dist
        else:
            dynamic_weight = 1 / (1 + num_unvisited)
            score = (dynamic_weight * (current_dist / dest_dist) + (1 - dynamic_weight) * (current_dist + dest_dist)) * (1 + (current_dist / avg_dist))
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
