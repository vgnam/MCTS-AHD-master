def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_weighted_score = float('inf')
    next_node = None
    avg_unvisited_dist = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        if dest_dist == 0:
            weighted_score = current_dist
        else:
            projected_path_length = current_dist + dest_dist
            penalty = 1 + (current_dist / (avg_unvisited_dist + 1e-10))
            weighted_score = 0.7 * current_dist + 0.3 * dest_dist * penalty
        if weighted_score < min_weighted_score:
            min_weighted_score = weighted_score
            next_node = node
    return next_node
