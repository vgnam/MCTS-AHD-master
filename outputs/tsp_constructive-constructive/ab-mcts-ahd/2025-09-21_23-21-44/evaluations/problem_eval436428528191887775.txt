def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = remaining_nodes / (remaining_nodes + 1)
    penalty_factor = 1.0 / (1.0 + distance_matrix[current_node][destination_node])

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        revisit_penalty = 1.0 if node in unvisited_nodes else 0.0

        score = (weight_factor * immediate_distance) + ((1 - weight_factor) * potential_distance) + (penalty_factor * revisit_penalty)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
