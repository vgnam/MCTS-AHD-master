def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    base_weight = 1.0 / (1.0 + 0.1 * remaining_nodes)
    immediate_weight = 1.5 * base_weight
    connectivity_weight = 0.5 * base_weight
    destination_weight = 0.2 * base_weight
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        connectivity_score = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                connectivity_score += distance_matrix[node][other_node]
        connectivity_score /= (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 1
        destination_distance = distance_matrix[node][destination_node]
        if len(unvisited_nodes) == 1:
            combined_score = immediate_distance + destination_distance
        else:
            combined_score = (immediate_weight * immediate_distance +
                             connectivity_weight * connectivity_score +
                             destination_weight * destination_distance)
            if node == unvisited_nodes[-1] and remaining_nodes > 2:
                combined_score += 0.2 * immediate_distance
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
