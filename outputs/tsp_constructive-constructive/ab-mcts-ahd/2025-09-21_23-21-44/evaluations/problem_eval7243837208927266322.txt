def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_combined_score = float('inf')
    next_node = None
    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes)
    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        additive_score = current_to_node + node_to_dest
        multiplicative_score = current_to_node * node_to_dest
        normalized_additive = additive_score / (current_to_node + avg_distance_to_dest)
        normalized_multiplicative = multiplicative_score / (current_to_node * avg_distance_to_dest)
        combined_score = 0.6 * normalized_additive + 0.4 * normalized_multiplicative
        if combined_score < min_combined_score:
            min_combined_score = combined_score
            next_node = node
    return next_node
