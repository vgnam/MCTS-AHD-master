def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    centrality_factor = 1 - (total_unvisited / (total_unvisited + 1))
    min_combined_cost = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_cost = distance_matrix[current_node][node]
        centrality_cost = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        destination_cost = distance_matrix[node][destination_node]
        combined_cost = (centrality_factor * centrality_cost) + ((1 - centrality_factor) * immediate_cost) - (0.3 * destination_cost)

        if combined_cost < min_combined_cost:
            min_combined_cost = combined_cost
            next_node = node

    return next_node
