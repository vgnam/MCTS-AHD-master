defaults to the destination node if no unvisited nodes remain.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)
    probabilities = [(max_dist - d + 1) / (max_dist - min_dist + 1) for d in distances]
    probabilities = [p / sum(probabilities) for p in probabilities]
    next_node = np.random.choice(unvisited_nodes, p=probabilities)
    return next_node
