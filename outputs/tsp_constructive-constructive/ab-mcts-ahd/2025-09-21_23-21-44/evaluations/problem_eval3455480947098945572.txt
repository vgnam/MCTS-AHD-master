def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    current_to_dest = distance_matrix[current_node][destination_node]
    weight_factor = min(0.9, 0.1 + (current_to_dest / max(1, sum(distance_matrix[current_node][node] for node in unvisited_nodes))))
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        detour_factor = (immediate_distance + potential_distance) / (current_to_dest + 1e-6)
        score = (weight_factor * immediate_distance) + ((1 - weight_factor) * potential_distance * detour_factor)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
