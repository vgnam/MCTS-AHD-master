def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    progress_ratio = (1 - num_unvisited / len(distance_matrix)) if distance_matrix else 0.5
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        connectivity_score = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                connectivity_score += distance_matrix[node][other_node]
        connectivity_score /= num_unvisited - 1 if num_unvisited > 1 else 1
        destination_distance = distance_matrix[node][destination_node]
        penalty = sum(distance_matrix[node][n] for n in unvisited_nodes) / num_unvisited
        combined_score = (2.0 - progress_ratio) * immediate_distance + 1.0 * connectivity_score + 0.5 * destination_distance + 0.3 * penalty
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
