def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes
    weight_factor = 1 / (1 + math.exp(-10 * (remaining_ratio - 0.5)))

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]

        centrality = sum(distance_matrix[node]) / (total_nodes - 1)
        score = (weight_factor * immediate_distance) + ((1 - weight_factor) * potential_distance) + (0.2 * centrality)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
