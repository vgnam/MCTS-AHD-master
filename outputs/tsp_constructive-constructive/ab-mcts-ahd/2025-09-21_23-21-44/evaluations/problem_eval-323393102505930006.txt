def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    n = len(distance_matrix)
    for node in unvisited_nodes:
        # Calculate centrality score (average distance to all other nodes)
        centrality = sum(distance_matrix[node][other] for other in range(n)) / n
        # Combine product of distances with centrality score
        score = (distance_matrix[current_node][node] * distance_matrix[node][destination_node]) + (0.5 * centrality)
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
