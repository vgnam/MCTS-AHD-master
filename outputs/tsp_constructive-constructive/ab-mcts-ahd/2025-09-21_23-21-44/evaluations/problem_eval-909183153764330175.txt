def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    dynamic_weight = 1.0 if remaining_nodes > total_nodes / 2 else 0.5 + (remaining_nodes / total_nodes) * 0.5

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        combined_score = dynamic_weight * immediate_distance + (1 - dynamic_weight) * destination_distance
        combined_score += 0.3 * abs(immediate_distance - avg_distance)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
