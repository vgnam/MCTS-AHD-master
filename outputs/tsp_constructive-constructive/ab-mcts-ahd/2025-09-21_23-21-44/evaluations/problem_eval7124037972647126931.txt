defaulting to the destination node when no unvisited nodes remain.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        estimated_global_contribution = distance_matrix[node][destination_node] * 0.3
        score = current_distance + estimated_global_contribution
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
