def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    avg_unvisited_dist = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]

        if dest_dist == 0:
            score = current_dist
        else:
            # Dynamic penalty based on distance ratio to average
            dist_ratio = current_dist / avg_unvisited_dist if avg_unvisited_dist > 0 else 1.0
            penalty = 1 + (dist_ratio ** 2)  # Non-linear penalty for high ratios
            score = (current_dist / dest_dist) * penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
