defaulting to the destination when no unvisited nodes remain.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        avg_future_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0
        score = current_distance + 0.5 * avg_future_distance
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
