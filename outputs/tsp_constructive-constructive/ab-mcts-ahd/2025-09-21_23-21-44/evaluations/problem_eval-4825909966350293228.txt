def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    avg_unvisited_distance = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes)
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        balance_factor = 0.5 * (immediate_distance / avg_unvisited_distance) + 0.5 * (future_distance / avg_unvisited_distance)
        dynamic_factor = 1 / (1 + remaining_nodes) if remaining_nodes > 0 else 1
        total_score = immediate_distance + future_distance * balance_factor * dynamic_factor

        if total_score < min_score:
            min_score = total_score
            next_node = node

    return next_node
