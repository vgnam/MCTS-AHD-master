def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    decay_factor = 0.7  # Adjusts the balance between immediate and long-term distances
    min_weighted_sum = float('inf')
    next_node = None
    for node in unvisited_nodes:
        weighted_sum = (distance_matrix[current_node][node] * decay_factor +
                       distance_matrix[node][destination_node] * (1 - decay_factor))
        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node
    return next_node
