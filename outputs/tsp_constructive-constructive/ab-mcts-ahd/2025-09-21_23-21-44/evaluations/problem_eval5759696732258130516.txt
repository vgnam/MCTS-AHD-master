def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)
    ratio = remaining_nodes / total_nodes
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        angle_weight = 0.5 * (1 - ratio)
        if distance_to_current > 0 and distance_to_destination > 0:
            angle_correction = (distance_to_current - distance_to_destination) / (distance_to_current + distance_to_destination)
        else:
            angle_correction = 0
        score = distance_to_current + (1 - angle_weight) * distance_to_destination + angle_weight * angle_correction
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
