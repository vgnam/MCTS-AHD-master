def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_weighted_sum = float('inf')
    next_node = None
    total_remaining = sum(distance_matrix[node][destination_node] for node in unvisited_nodes)
    heuristic_factor = 0.5 if total_remaining < 100 else 0.3  # Adjust based on remaining distance
    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        weighted_sum = (1 - heuristic_factor) * current_to_node + heuristic_factor * node_to_dest
        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node
    return next_node
