"def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):\n    if not unvisited_nodes:\n        return destination_node\n    min_score = float('inf')\n    next_node = None\n    for node in unvisited_nodes:\n        current_dist = distance_matrix[current_node][node]\n        dest_dist = distance_matrix[node][destination_node]\n        if dest_dist == 0:\n            score = current_dist\n        else:\n            # Aggressive optimization: prioritize nodes that save the most path length\n            path_savings = current_dist - dest_dist\n            penalty = 1 + (current_dist / (dest_dist + 1e-10))  # Stronger penalty for distant nodes\n            score = (current_dist / dest_dist) * penalty + path_savings\n        if score < min_score:\n            min_score = score\n            next_node = node\n    return next_node"