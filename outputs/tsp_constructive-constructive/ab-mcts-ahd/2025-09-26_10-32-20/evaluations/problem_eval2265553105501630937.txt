def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    path_length = distance_matrix[current_node][destination_node]
    if path_length < sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes):
        weight_nn = 0.6
        weight_fi = 0.4
    else:
        weight_nn = 0.4
        weight_fi = 0.6
    hybrid_score = lambda node: weight_nn * distance_matrix[current_node][node] + weight_fi * distance_matrix[node][destination_node]
    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
