import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (1.0 + remaining_nodes)

    def probabilistic_score(node):
        local_dist = distance_matrix[current_node][node]
        global_dist = distance_matrix[node][destination_node]
        combined_score = (1 - temperature) * local_dist + temperature * global_dist
        return math.exp(-combined_score / temperature)

    scores = [probabilistic_score(node) for node in unvisited_nodes]
    total_score = sum(scores)
    probabilities = [score / total_score for score in scores]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]

    return next_node
