def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    weights = {node: distance_matrix[current_node][node] for node in unvisited_nodes}
    weighted_probabilities = {node: (1 / (weights[node] + 1e-6)) * (0.9 ** (len(unvisited_nodes) - 1)) for node in unvisited_nodes}
    next_node = max(weighted_probabilities.items(), key=lambda x: x[1])[0]
    return next_node
