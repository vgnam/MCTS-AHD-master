def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    max_distances = {node: distance_matrix[current_node][node] for node in unvisited_nodes}
    min_distance = min(max_distances.values())
    max_distance = max(max_distances.values())
    normalized_distances = {node: (max_distances[node] - min_distance) / (max_distance - min_distance) for node in unvisited_nodes}
    next_node = max(unvisited_nodes, key=lambda node: normalized_distances[node] * distance_matrix[current_node][node])
    return next_node
