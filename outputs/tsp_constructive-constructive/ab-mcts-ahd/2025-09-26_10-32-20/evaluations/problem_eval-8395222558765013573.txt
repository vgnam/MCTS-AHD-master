def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def calculate_score(node):
        local_distance = distance_matrix[current_node][node]
        global_centrality = 1 / (sum(distance_matrix[node][n] for n in range(len(distance_matrix))) + 1e-10)
        global_future = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
        global_measure = 0.7 * global_centrality + 0.3 * global_future
        return 0.7 * local_distance + 0.3 * global_measure
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
