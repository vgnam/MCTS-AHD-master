def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, k=2):
    if not unvisited_nodes:
        return destination_node
    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    closest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    if distance_matrix[current_node][closest_node] * k < distance_matrix[current_node][farthest_node]:
        next_node = farthest_node
    else:
        next_node = closest_node
    return next_node
