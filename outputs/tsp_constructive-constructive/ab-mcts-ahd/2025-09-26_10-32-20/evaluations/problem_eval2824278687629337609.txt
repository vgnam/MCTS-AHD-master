def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    def calculate_score(node):
        if not unvisited_nodes:
            return distance_matrix[current_node][node]
        avg_distance_current = sum(distance_matrix[current_node][n] for n in range(total_nodes)) / total_nodes
        centrality_weight = 1.0 / (avg_distance_current + 1)
        avg_distance_next = sum(distance_matrix[node][n] for n in unvisited_nodes) / remaining_nodes
        return distance_matrix[current_node][node] + centrality_weight * avg_distance_next
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
