def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    local_weight = max(0.2, 0.8 - (0.6 * (remaining_nodes / (remaining_nodes + 1))))
    global_weight = 1 - local_weight

    def hybrid_score(node):
        local_cost = distance_matrix[current_node][node]
        global_cost = distance_matrix[node][destination_node]
        distance_penalty = (local_cost + global_cost) ** 1.5
        return local_weight * local_cost + global_weight * global_cost + 0.1 * distance_penalty

    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
