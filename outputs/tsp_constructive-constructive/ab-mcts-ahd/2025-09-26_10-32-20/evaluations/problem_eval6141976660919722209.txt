def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    weight_proximity = remaining_nodes / (remaining_nodes + 1)
    total_nodes = len(distance_matrix)
    centrality = lambda node: 1 / (sum(distance_matrix[node][n] for n in range(total_nodes)) + 1e-10)
    next_node = min(unvisited_nodes, key=lambda node: weight_proximity * distance_matrix[current_node][node] + (1 - weight_proximity) * (0.5 * distance_matrix[node][destination_node] + 0.5 * centrality(node)))
    return next_node
