def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    dynamic_weight = 1.0 / (1.0 + remaining_nodes)
    local_weight = 0.9 ** (1.0 / (1.0 + remaining_nodes))
    max_distance = max(max(row) for row in distance_matrix)
    hybrid_score = lambda node: (local_weight * distance_matrix[current_node][node] + (1 - local_weight) * distance_matrix[node][destination_node]) / max_distance * (1 - dynamic_weight)
    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
