def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_fraction = len(unvisited_nodes) / (len(unvisited_nodes) + 1)  # Avoid division by zero
    alpha = 1.5 - remaining_fraction  # Higher alpha for early stages, lower for later
    beta = 1.0 + remaining_fraction   # Higher beta for later stages, lower for early

    next_node = max(
        unvisited_nodes,
        key=lambda node: (-alpha * distance_matrix[current_node][node] + beta * distance_matrix[node][destination_node])
    )
    return next_node
