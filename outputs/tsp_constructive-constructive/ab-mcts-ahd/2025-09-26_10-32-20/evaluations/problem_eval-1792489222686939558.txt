def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_score(node):
        farthest_distance = distance_matrix[current_node][node]
        centrality = 1 / (sum(distance_matrix[node][n] for n in range(len(distance_matrix))) + 1e-10)
        global_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        return -farthest_distance + 0.2 * centrality + 0.1 * global_distance

    candidates = sorted(unvisited_nodes, key=calculate_score)[:3]
    next_node = min(candidates, key=lambda node: distance_matrix[current_node][node])
    return next_node
