def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    if total_unvisited == 0:
        return destination_node

    def score(node):
        dist = distance_matrix[current_node][node]
        connectivity_weight = 1.0 / total_unvisited
        degree = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < dist)
        connectivity_score = degree * connectivity_weight
        penalty = 1.0 if node in unvisited_nodes else 1.5  # Penalize revisits
        return (1.0 / dist) * (1.0 + connectivity_score) / penalty

    next_node = max(unvisited_nodes, key=score)
    return next_node
