def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(unvisited_nodes) + 1
    unvisited_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0
    weight_proximity = 1.0
    weight_min_distance = 0.5 + 0.5 * (1 - unvisited_ratio)
    def calculate_score(node):
        if not unvisited_nodes:
            return distance_matrix[current_node][node]
        min_distance = min(distance_matrix[node][n] for n in unvisited_nodes)
        return weight_proximity * distance_matrix[current_node][node] + weight_min_distance * min_distance
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
