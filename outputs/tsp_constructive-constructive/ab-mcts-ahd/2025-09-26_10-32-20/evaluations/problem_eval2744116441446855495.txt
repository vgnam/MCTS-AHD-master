def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def weighted_score(node):
        direct_distance = distance_matrix[current_node][node]
        avg_remaining_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        exploration_weight = 0.5 if len(unvisited_nodes) > len(distance_matrix) // 2 else 0.3
        return direct_distance * (1 - exploration_weight) + avg_remaining_distance * exploration_weight
    next_node = min(unvisited_nodes, key=weighted_score)
    return next_node
