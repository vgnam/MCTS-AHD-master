def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)
    normalized_dists = [(max_dist - d) / (max_dist - min_dist + 1e-10) for d in distances]

    temperature = 1.0 / (1.0 + len(unvisited_nodes) / len(distance_matrix))
    probs = [np.exp(normalized_dist / temperature) for normalized_dist in normalized_dists]
    probs = [p / sum(probs) for p in probs]

    next_node = np.random.choice(unvisited_nodes, p=probs)
    return next_node
