def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0
    def calculate_score(node):
        local_dist = distance_matrix[current_node][node]
        if not unvisited_nodes:
            return local_dist
        max_detour = max(distance_matrix[node][n] for n in unvisited_nodes)
        detour_weight = 1 - remaining_ratio
        return local_dist + detour_weight * (max_detour / (1 + math.log(1 + max_detour)))
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
