def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes
    local_weight = 0.7 * remaining_ratio + 0.3
    global_weight = 0.3 * (1 - remaining_ratio) + 0.7
    hybrid_score = lambda node: local_weight * distance_matrix[current_node][node] + global_weight * distance_matrix[node][destination_node] + (1 - remaining_ratio) * (distance_matrix[current_node][node] ** 3)
    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
