def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes > 1:
        weight_local = 0.4 + 0.2 * (remaining_nodes / len(distance_matrix))
        weight_global = 1 - weight_local
    else:
        weight_local = 0.5
        weight_global = 0.5
    hybrid_score = lambda node: weight_local * distance_matrix[current_node][node] + weight_global * distance_matrix[node][destination_node]
    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
