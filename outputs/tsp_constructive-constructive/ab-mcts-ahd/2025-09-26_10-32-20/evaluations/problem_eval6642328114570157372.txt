def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_weighted_score(node):
        immediate_distance = distance_matrix[current_node][node]
        future_savings = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
        return immediate_distance + 0.5 * future_savings

    next_node = min(unvisited_nodes, key=calculate_weighted_score)
    return next_node
