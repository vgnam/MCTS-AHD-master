def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes)
    penalty_factor = max(0.1, 0.5 / (total_nodes + 1))  # Dynamic penalty based on remaining nodes

    next_node = max(
        unvisited_nodes,
        key=lambda node: (
            -0.6 * distance_matrix[node][destination_node]
            - 0.3 * distance_matrix[current_node][node]
            + penalty_factor * (distance_matrix[node][destination_node] - distance_matrix[current_node][node])
        )
    )
    return next_node
