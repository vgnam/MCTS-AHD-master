def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def weighted_score(node):
        current_dist = distance_matrix[current_node][node]
        estimated_benefit = distance_matrix[node][destination_node] if node != destination_node else 0
        return 0.7 * current_dist + 0.3 * estimated_benefit
    next_node = min(unvisited_nodes, key=weighted_score)
    return next_node
