def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_weight(node):
        current_dist = distance_matrix[current_node][node]
        future_dist = distance_matrix[node][destination_node]
        return current_dist + 0.3 * future_dist  # Weighted balance between current and future distance

    next_node = max(unvisited_nodes, key=lambda node: calculate_weight(node))
    return next_node
