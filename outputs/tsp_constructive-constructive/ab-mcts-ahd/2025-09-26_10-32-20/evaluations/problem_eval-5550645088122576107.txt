def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(distance_matrix)
    remaining_ratio = len(unvisited_nodes) / total_nodes
    local_weight = 0.6 + 0.4 * (1 - remaining_ratio)
    global_weight = 1 - local_weight
    def calculate_score(node):
        local_distance = distance_matrix[current_node][node]
        max_distance = max(distance_matrix[node][n] for n in unvisited_nodes)
        return local_weight * 2 * local_distance + global_weight * max_distance
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
