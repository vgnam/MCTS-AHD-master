def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def calculate_score(node):
        if not unvisited_nodes:
            return distance_matrix[current_node][node]
        remaining_nodes = len(unvisited_nodes)
        local_weight = 2 / (1 + remaining_nodes)
        max_distance = max(distance_matrix[node][n] for n in unvisited_nodes)
        return local_weight * distance_matrix[current_node][node] + (1 - local_weight) * max_distance
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
