def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_destination = 0.7 + 0.05 * (remaining_nodes / 10)  # Increase destination weight as fewer nodes remain
    weight_current = 0.3 - 0.05 * (remaining_nodes / 10)       # Decrease current weight as fewer nodes remain

    # Normalize weights to sum to 1
    total_weight = weight_destination + weight_current
    weight_destination /= total_weight
    weight_current /= total_weight

    next_node = max(unvisited_nodes, key=lambda node: -weight_destination * distance_matrix[node][destination_node] - weight_current * distance_matrix[current_node][node])
    return next_node
