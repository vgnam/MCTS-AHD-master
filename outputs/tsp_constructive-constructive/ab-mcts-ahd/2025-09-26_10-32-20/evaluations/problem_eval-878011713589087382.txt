def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    novelty_factor = 1.0 / (1.0 + remaining_nodes)
    sigmoid_weight = 1.0 / (1.0 + math.exp(-novelty_factor * 10))

    hybrid_score = lambda node: (
        (1 - sigmoid_weight) * distance_matrix[current_node][node] +
        sigmoid_weight * distance_matrix[node][destination_node] -
        0.1 * (1 if node in unvisited_nodes else 0) +
        0.2 * (1 if distance_matrix[node][destination_node] < distance_matrix[current_node][destination_node] else 0)
    )

    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
