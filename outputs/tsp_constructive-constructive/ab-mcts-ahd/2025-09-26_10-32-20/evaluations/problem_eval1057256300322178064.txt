def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1 / (1 + math.exp(-(remaining_nodes - 5)))  # Sigmoid transition around 5 nodes left
    weighted_immediate = 0.9 * weight_factor
    weighted_long_term = 0.1 * (1 - weight_factor)

    hybrid_score = lambda node: (weighted_immediate * distance_matrix[current_node][node] +
                                weighted_long_term * distance_matrix[node][destination_node])
    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
