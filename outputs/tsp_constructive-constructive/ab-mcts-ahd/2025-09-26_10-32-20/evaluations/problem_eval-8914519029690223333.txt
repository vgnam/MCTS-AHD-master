def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    nearest_neighbor = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_insertion = max(unvisited_nodes, key=lambda node: distance_matrix[node][destination_node])
    hybrid_score = lambda node: 0.7 * distance_matrix[current_node][node] + 0.3 * distance_matrix[node][destination_node]
    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
