def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def weighted_cost(node):
        immediate_cost = distance_matrix[current_node][node]
        future_cost = distance_matrix[node][destination_node] if destination_node in unvisited_nodes else 0
        return immediate_cost + 0.3 * future_cost
    next_node = min(unvisited_nodes, key=lambda node: weighted_cost(node))
    return next_node
