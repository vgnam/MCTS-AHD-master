def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_weight(node):
        normalized_distance = distance_matrix[current_node][node] / max(distance_matrix[current_node])
        node_degree = sum(1 for d in distance_matrix[node] if d > 0)
        return 0.6 * normalized_distance + 0.4 * (1 / (1 + node_degree))

    next_node = min(unvisited_nodes, key=calculate_weight)
    return next_node
