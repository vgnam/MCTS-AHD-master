def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    local_weight = 0.9 - 0.2 * (remaining_nodes / len(distance_matrix))  # Adjusts between 0.7 and 0.9
    global_weight = 1 - local_weight
    next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node] * local_weight + distance_matrix[node][destination_node] * global_weight)
    return next_node
