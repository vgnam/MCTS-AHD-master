def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    remaining_ratio = remaining_nodes / total_nodes
    weight_immediate = 0.8 - 0.6 * (1 - remaining_ratio)
    weight_max = 0.2 + 0.4 * (1 - remaining_ratio)
    weight_avg = 0.1 + 0.4 * (1 - remaining_ratio)

    def calculate_score(node):
        immediate_distance = distance_matrix[current_node][node]
        max_distance = max(distance_matrix[node][n] for n in unvisited_nodes)
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        return (weight_immediate * immediate_distance) + (weight_max * max_distance) + (weight_avg * avg_distance)

    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
