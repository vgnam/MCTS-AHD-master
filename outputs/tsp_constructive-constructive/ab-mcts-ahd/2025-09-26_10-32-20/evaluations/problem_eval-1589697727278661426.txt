def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    progress = 1 - (remaining_nodes / total_nodes)

    weight_local = 0.7 - 0.4 * progress
    weight_global = 0.3 + 0.4 * progress

    def calculate_score(node):
        local_distance = distance_matrix[current_node][node]
        global_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        return (weight_local * local_distance) + (weight_global * global_distance)

    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
