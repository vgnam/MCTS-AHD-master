def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    sigmoid = lambda x: 1 / (1 + math.exp(-x))
    dynamic_weight = sigmoid((remaining_nodes - 5) / 2)
    hybrid_score = lambda node: (dynamic_weight * 0.7 + (1 - dynamic_weight) * 0.3) * distance_matrix[current_node][node] + \
                              (1 - (dynamic_weight * 0.7 + (1 - dynamic_weight) * 0.3)) * distance_matrix[node][destination_node]
    next_node = min(unvisited_nodes, key=hybrid_score)
    return next_node
