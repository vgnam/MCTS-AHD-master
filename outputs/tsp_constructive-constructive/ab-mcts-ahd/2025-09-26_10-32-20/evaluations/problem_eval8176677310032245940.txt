def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_distance = distance_matrix[current_node][destination_node]
    weight_factor = 0.7 if remaining_distance > sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) else 0.3

    next_node = min(unvisited_nodes, key=lambda node: (
        weight_factor * distance_matrix[current_node][node] +
        (1 - weight_factor) * distance_matrix[node][destination_node] +
        (0.1 * sum(1 for n in unvisited_nodes if n == node))  # Penalty for revisiting
    ))

    return next_node
