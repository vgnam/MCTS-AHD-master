def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    def calculate_score(node):
        if not unvisited_nodes:
            return distance_matrix[current_node][node]
        max_distance = max(distance_matrix[node][n] for n in unvisited_nodes)
        local_factor = distance_matrix[current_node][node]
        detour_factor = max_distance / (remaining_nodes + 1)
        weight = 1 + (remaining_nodes / (remaining_nodes + 10))
        score = weight * local_factor + (1 - weight) * detour_factor
        return score
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
