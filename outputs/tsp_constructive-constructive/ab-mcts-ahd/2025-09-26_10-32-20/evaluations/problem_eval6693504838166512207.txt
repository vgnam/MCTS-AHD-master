def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def cost_function(node):
        immediate_cost = distance_matrix[current_node][node]
        global_cost = distance_matrix[node][destination_node]
        dynamic_weight = 0.7 if len(unvisited_nodes) > 2 else 1.0
        return dynamic_weight * immediate_cost + (1 - dynamic_weight) * global_cost

    next_node = min(unvisited_nodes, key=cost_function)
    return next_node
