def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    remaining_ratio = remaining_nodes / total_nodes
    exploration_factor = 0.1 + 0.9 * (1 - remaining_ratio)
    def calculate_score(node):
        if not unvisited_nodes:
            return distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        exploration_bonus = (1 - distance_matrix[node][current_node] / max(max(row) for row in distance_matrix)) * exploration_factor
        return 0.7 * distance_matrix[current_node][node] + 0.2 * avg_distance + 0.1 * exploration_bonus
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
