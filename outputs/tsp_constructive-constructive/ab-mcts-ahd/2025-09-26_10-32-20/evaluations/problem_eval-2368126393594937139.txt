def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    closest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    temperature = 1.0 / (1.0 + len(unvisited_nodes))
    penalty = 0.1 * sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)

    if np.random.rand() < temperature:
        next_node = farthest_node
    else:
        next_node = closest_node

    if distance_matrix[current_node][next_node] < penalty:
        next_node = closest_node

    return next_node
