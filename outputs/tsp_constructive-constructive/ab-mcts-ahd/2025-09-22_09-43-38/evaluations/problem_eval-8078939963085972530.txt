def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def evaluate_node(node):
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        if node_to_dest == 0:
            return float('inf')
        return (current_to_node / node_to_dest) ** 0.5

    next_node = min(unvisited_nodes, key=lambda node: evaluate_node(node))
    return next_node
