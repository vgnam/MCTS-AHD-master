def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def evaluate_node(node):
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        potential = min(distance_matrix[node][other] for other in unvisited_nodes if other != node) if len(unvisited_nodes) > 1 else 0
        return current_to_node + node_to_dest + 0.1 * potential

    next_node = min(unvisited_nodes, key=lambda node: evaluate_node(node))
    return next_node
