def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        local_weight = 0.5 + 0.5 * (remaining_nodes / (remaining_nodes + 1))
        global_weight = 1 - local_weight
        total_score = (local_weight / (distance_to_current + 1e-6)) + (global_weight / (distance_to_destination + 1e-6))
        total_score *= (1 + 0.2 * (1 - distance_to_destination / max(distance_matrix[node])))
        total_score += 0.3 * (1 / (distance_to_destination + 1e-6))
        if total_score > best_score:
            best_score = total_score
            next_node = node
    return next_node
