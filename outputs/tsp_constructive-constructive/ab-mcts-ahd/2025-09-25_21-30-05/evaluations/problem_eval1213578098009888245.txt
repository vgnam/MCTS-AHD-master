def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        local_weight = 1 / (1 + remaining_nodes)
        global_weight = 1 - local_weight
        score_component = (distance_to_current ** local_weight) * (distance_to_destination ** global_weight)
        novelty_factor = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (remaining_nodes - 1)
        total_score = (score_component ** (1 + 0.1 * (novelty_factor / distance_to_destination)))
        if total_score > best_score:
            best_score = total_score
            next_node = node
    return next_node
