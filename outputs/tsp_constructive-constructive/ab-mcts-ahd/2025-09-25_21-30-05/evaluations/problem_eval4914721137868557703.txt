def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        local_factor = 1 / (distance_to_current + 1e-6)
        global_factor = 1 / (distance_to_destination + 1e-6)
        dynamic_weight = 1 / (1 + (remaining_nodes / (len(distance_matrix) - remaining_nodes)))
        combined_score = (dynamic_weight * local_factor) + ((1 - dynamic_weight) * global_factor)
        combined_score *= (1 + 0.2 * (1 - distance_to_destination / (max(distance_matrix[node]) + 1e-6)))
        if combined_score > best_score:
            best_score = combined_score
            next_node = node
    return next_node
