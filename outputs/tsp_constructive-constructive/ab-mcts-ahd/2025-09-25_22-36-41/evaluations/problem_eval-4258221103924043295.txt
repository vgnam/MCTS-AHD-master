def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    max_score = -float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        dynamic_weight = 1.0 / (1.0 + remaining_nodes)  # Adjusts based on remaining nodes
        score = (direct_distance * (1 - dynamic_weight)) - (distance_to_dest * dynamic_weight)
        if score > max_score:
            max_score = score
            next_node = node
    if next_node is None:
        return destination_node
    return next_node
