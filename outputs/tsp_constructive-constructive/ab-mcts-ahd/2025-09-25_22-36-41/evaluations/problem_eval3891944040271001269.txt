def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    max_score = -float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][node]
        savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]
        weight = 1.0 / (1.0 + remaining_nodes)  # Dynamic weight based on remaining nodes
        score = (1 - weight) * direct_distance + weight * savings
        if score > max_score:
            max_score = score
            next_node = node
    return next_node
