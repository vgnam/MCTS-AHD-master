def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if not unvisited_nodes - {node}:
            future_distance = distance_matrix[node][destination_node]
        else:
            future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes - {node}) / len(unvisited_nodes - {node})

        product = immediate_distance * future_distance
        total_increment = immediate_distance + future_distance
        if total_increment == 0:
            ratio = float('inf')
        else:
            ratio = immediate_distance / total_increment

        score = product * (1 / ratio) if ratio != 0 else float('inf')

        if score < min_score:
            min_score = score
            next_node = node

    if next_node is None:
        return destination_node

    return next_node
