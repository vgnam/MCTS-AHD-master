def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_distance = min(distances)
    if min_distance == 0:
        probabilities = [1.0 / (1 + 1e-6) for _ in distances]  # Avoid division by zero
    else:
        probabilities = [1.0 / (d + 1e-6) for d in distances]  # Small epsilon to avoid division by zero
    probabilities = [p / sum(probabilities) for p in probabilities]
    next_node = np.random.choice(unvisited_nodes, p=probabilities)
    return next_node
