def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        min_distance_to_unvisited = min(distance_matrix[node][n] for n in unvisited_nodes if n != node) if len(unvisited_nodes) > 1 else 0
        score = distance_to_current + min_distance_to_unvisited

        if score < min_score:
            min_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][destination_node]
        min_distance_to_unvisited = min(distance_matrix[destination_node][n] for n in unvisited_nodes if n != destination_node) if len(unvisited_nodes) > 1 else 0
        threshold = 0.7 * min(distance_matrix[current_node][n] for n in unvisited_nodes if n != destination_node) if unvisited_nodes else 0
        if distance_to_current + min_distance_to_unvisited <= threshold:
            next_node = destination_node

    return next_node
