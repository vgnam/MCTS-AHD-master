def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        local_distance = distance_matrix[current_node][node]
        global_distance = distance_matrix[node][destination_node]
        weight = 1 / (1 + remaining_nodes)
        avg_remaining_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, remaining_nodes - 1)
        penalty = 0.3 * avg_remaining_distance
        score = (1 - weight) * local_distance + weight * global_distance + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
