def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining_nodes = [n for n in unvisited_nodes if n != node]
            min_remaining_distance = min(distance_matrix[node][n] for n in remaining_nodes)
            max_remaining_distance = max(distance_matrix[node][n] for n in remaining_nodes)
            penalty = max(0, (current_distance - 2 * min_remaining_distance) / max_remaining_distance) if max_remaining_distance != 0 else 0
            score = current_distance + 0.5 * min_remaining_distance + 0.2 * penalty
        else:
            score = current_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
