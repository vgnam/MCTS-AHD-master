def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining_nodes = [n for n in unvisited_nodes if n != node]
            avg_remaining_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes)
            dynamic_penalty_weight = 0.3 / len(unvisited_nodes)
            score = current_distance + 0.3 * avg_remaining_distance + dynamic_penalty_weight * (current_distance - avg_remaining_distance)
        else:
            score = current_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
