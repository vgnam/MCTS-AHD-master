def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_weight = 0.0
    weights = {}

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance == 0:
            weights[node] = 0.0
        else:
            weights[node] = 1.0 / distance
        total_weight += weights[node]

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance <= max(distance_matrix[current_node][node] for node in unvisited_nodes) * 0.5:
            weights[destination_node] *= 1.5

    selected_value = random.uniform(0, total_weight)
    cumulative_weight = 0.0

    for node, weight in weights.items():
        cumulative_weight += weight
        if selected_value <= cumulative_weight:
            return node

    return next_node
