def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + remaining_nodes)  # Higher weight for direct distance as nodes decrease

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_distance_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (remaining_nodes - 1) if remaining_nodes > 1 else 0
        score = (1 - weight_factor) * distance_to_node + weight_factor * avg_distance_to_unvisited

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
