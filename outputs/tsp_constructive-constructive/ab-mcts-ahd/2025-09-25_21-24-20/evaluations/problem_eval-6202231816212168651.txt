def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        potential_to_destination = distance_matrix[node][destination_node]
        balance_factor = remaining_nodes / (remaining_nodes + 2)  # Different adaptation strategy
        score = (balance_factor * potential_to_destination) + ((1 - balance_factor) * distance_to_node)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
