def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = 0.5 * (remaining_nodes / (remaining_nodes + 1))  # Dynamic weight

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        combined_score = current_distance + weight * dest_distance + 0.1 * (current_distance ** 2)  # Penalize large detours

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
