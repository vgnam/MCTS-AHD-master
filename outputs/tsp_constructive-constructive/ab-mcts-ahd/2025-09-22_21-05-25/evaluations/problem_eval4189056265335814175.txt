defaults to the nearest, balancing exploration and proximity with a threshold of 0.7Ã— the nearest distance.}

```python
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    next_node = farthest_node if distance_matrix[current_node][farthest_node] < 0.7 * distance_matrix[current_node][nearest_node] else nearest_node
    return next_node
