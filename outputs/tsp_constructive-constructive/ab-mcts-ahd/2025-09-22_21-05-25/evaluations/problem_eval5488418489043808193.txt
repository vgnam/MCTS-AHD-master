def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    nearest_dist = distance_matrix[current_node][nearest_node]
    farthest_dist = distance_matrix[current_node][farthest_node]
    threshold_ratio = (farthest_dist / nearest_dist) if nearest_dist != 0 else float('inf')
    dynamic_multiplier = max(1.2, min(1.8, threshold_ratio * 0.3 + 1.0))
    next_node = farthest_node if farthest_dist > dynamic_multiplier * nearest_dist else nearest_node
    return next_node
