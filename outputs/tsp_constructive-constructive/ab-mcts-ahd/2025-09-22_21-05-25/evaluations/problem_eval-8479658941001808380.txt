def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist, max_dist = min(distances), max(distances)
    threshold = max_dist * (len(unvisited_nodes) / len(distance_matrix)) ** 0.5
    weights = [1 / (dist + 1e-6) if dist <= threshold else 0.1 for dist in distances]
    total_weight = sum(weights)
    normalized_weights = [w / total_weight for w in weights]
    next_node = np.random.choice(unvisited_nodes, p=normalized_weights)
    return next_node
