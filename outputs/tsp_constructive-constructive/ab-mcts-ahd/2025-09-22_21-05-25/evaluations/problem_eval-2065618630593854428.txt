def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    nearest_dist = distance_matrix[current_node][nearest_node]
    farthest_dist = distance_matrix[current_node][farthest_node]
    if len(unvisited_nodes) <= 2:
        return nearest_node
    distance_ratio = farthest_dist / nearest_dist
    prob_nearest = 1 / (1 + np.exp(-(distance_ratio - 1.5)))
    if random.random() < prob_nearest:
        return nearest_node
    else:
        return next_node
