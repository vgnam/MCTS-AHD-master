import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=0.5):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)

    if max_dist == min_dist:
        return random.choice(unvisited_nodes)

    normalized_distances = [(max_dist - dist) / (max_dist - min_dist) for dist in distances]
    boltzmann_probs = [math.exp(dist / temperature) for dist in normalized_distances]
    total_prob = sum(boltzmann_probs)
    normalized_probs = [prob / total_prob for prob in boltzmann_probs]

    next_node = random.choices(unvisited_nodes, weights=normalized_probs, k=1)[0]
    return next_node
