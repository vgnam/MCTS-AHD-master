def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0):
    if not unvisited_nodes:
        return destination_node

    # Calculate probabilities for each candidate node
    candidates = list(unvisited_nodes)
    distances = [distance_matrix[current_node][node] for node in candidates]

    # Apply softmax with temperature to get probabilities
    exp_distances = [math.exp(-d / temperature) for d in distances]
    total = sum(exp_distances)
    probabilities = [e / total for e in exp_distances]

    # Select next node based on probabilities
    next_node = random.choices(candidates, weights=probabilities, k=1)[0]

    return next_node
