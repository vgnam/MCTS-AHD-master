def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    threshold = 1.2 * (distance_matrix[current_node][nearest_node] + avg_distance) / 2
    if len(unvisited_nodes) > 3:
        if distance_matrix[current_node][farthest_node] > threshold:
            next_node = farthest_node if np.random.rand() < 0.3 else nearest_node
        else:
            next_node = nearest_node
    else:
        next_node = nearest_node
    return next_node
