import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    nearest_dist = distance_matrix[current_node][nearest_node]
    farthest_dist = distance_matrix[current_node][farthest_node]

    avg_dist = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    novelty_factor = 1 + math.exp(-(farthest_dist - avg_dist) / 10)

    temperature = 1 / (1 + math.exp(-(avg_dist - nearest_dist) / 10))
    prob_farthest = 1 / (1 + math.exp(-(farthest_dist - nearest_dist) / temperature))

    if random.random() < prob_farthest * novelty_factor:
        next_node = farthest_node
    else:
        next_node = nearest_node

    return next_node
