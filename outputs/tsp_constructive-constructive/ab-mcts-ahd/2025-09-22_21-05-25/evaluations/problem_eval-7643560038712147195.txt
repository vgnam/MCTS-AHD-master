import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][nearest_node])

    if len(unvisited_nodes) <= 2:
        return nearest_node

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    threshold = 1.2 * avg_distance

    if distance_matrix[current_node][farthest_node] > threshold:
        if random.random() < 0.3:  # 30% chance to select farthest node
            return farthest_node
        else:
            return nearest_node
    else:
        return next_node
