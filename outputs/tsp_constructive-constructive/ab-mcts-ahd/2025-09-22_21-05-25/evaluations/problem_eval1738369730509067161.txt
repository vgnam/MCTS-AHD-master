import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    if len(unvisited_nodes) <= 2:
        return nearest_node

    distance_to_nearest = distance_matrix[current_node][nearest_node]
    distance_to_farthest = distance_matrix[current_node][farthest_node]
    distance_ratio = distance_to_farthest / distance_to_nearest if distance_to_nearest > 0 else 1.0

    # Calculate selection probability using sigmoid function
    exploration_factor = 1.0 / (1.0 + math.exp(-(distance_ratio - 1.0)))
    if random.random() < exploration_factor:
        return farthest_node
    else:
        return next_node
