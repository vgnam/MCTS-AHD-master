def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    exploration_factor = len(unvisited_nodes) / (len(unvisited_nodes) + sum(distance_matrix[current_node][node] for node in unvisited_nodes))
    threshold = 1.5 + exploration_factor * 0.5

    next_node = farthest_node if distance_matrix[current_node][farthest_node] > threshold * distance_matrix[current_node][nearest_node] else nearest_node
    return next_node
