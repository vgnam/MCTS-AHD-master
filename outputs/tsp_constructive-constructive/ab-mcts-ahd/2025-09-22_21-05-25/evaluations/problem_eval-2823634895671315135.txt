def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    nearest_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    farthest_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    if len(unvisited_nodes) > 2:
        nearest_dist = distance_matrix[current_node][nearest_node]
        farthest_dist = distance_matrix[current_node][farthest_node]
        ratio = farthest_dist / nearest_dist if nearest_dist != 0 else float('inf')
        if ratio > 1.0:
            prob_farthest = 1.0 / ratio
            if random.random() < prob_farthest:
                return farthest_node
    return next_node
