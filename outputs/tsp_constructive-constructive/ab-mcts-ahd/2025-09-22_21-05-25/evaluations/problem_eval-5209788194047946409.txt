def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    avg_distance = sum(distances) / len(distances)
    threshold = 1.2 * avg_distance if len(unvisited_nodes) > 3 else 1.5 * avg_distance
    candidates = [node for node in unvisited_nodes if threshold * 0.8 <= distance_matrix[current_node][node] <= threshold * 1.2]
    if not candidates:
        candidates = unvisited_nodes
    next_node = min(candidates, key=lambda node: distance_matrix[current_node][node])
    if len(unvisited_nodes) > 4 and random.random() < 0.2:
        next_node = random.choice(unvisited_nodes)
    return next_node
