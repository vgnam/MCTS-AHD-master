def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)

        proximity_penalty = 0.1 * distance_to_current if remaining_nodes > 2 else 0.0
        destination_weight = 0.5 if remaining_nodes > 1 else 0.3
        novelty_score = hub_score / (distance_to_current + 1e-6)

        total_score = (distance_to_current + proximity_penalty +
                      destination_weight * distance_to_destination +
                      0.2 * novelty_score)

        if total_score < best_score:
            best_score = total_score
            next_node = node

    return next_node
