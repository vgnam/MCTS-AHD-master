def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        average_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / remaining_nodes if remaining_nodes else 0

        # Dynamic weight adjustment based on remaining nodes
        weight_immediate = max(0.3, 0.7 - (0.4 * (remaining_nodes / (remaining_nodes + 1))))
        weight_future = 1 - weight_immediate

        weighted_score = weight_immediate * distance_to_current + weight_future * average_future_distance

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
