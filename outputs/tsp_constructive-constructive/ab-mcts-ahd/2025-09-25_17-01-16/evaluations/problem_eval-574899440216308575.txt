def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight based on proximity to destination
        weight = 0.5 + 0.5 * (estimated_distance_to_destination / max(distance_matrix[node][node] for node in unvisited_nodes))

        # Weighted score combining distance and progress
        total_score = weight * distance_to_current + (1 - weight) * estimated_distance_to_destination

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
