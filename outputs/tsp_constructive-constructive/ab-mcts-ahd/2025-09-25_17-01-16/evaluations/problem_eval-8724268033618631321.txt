def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic weighting based on progress (sigmoid function)
        progress = 1 - (total_unvisited / len(distance_matrix))
        weight = 1 / (1 + math.exp(-10 * (progress - 0.5)))

        # Hybrid score with dynamic weight
        score = -current_distance + (1 - weight) * destination_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
