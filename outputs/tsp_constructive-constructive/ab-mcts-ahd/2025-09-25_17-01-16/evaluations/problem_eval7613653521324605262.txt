def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight with more aggressive increase
        weight = 0.3 + (1.0 - 0.3) * (1.0 - remaining_nodes / len(unvisited_nodes)) ** 2
        score = -distance_to_current + weight * distance_to_destination

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
