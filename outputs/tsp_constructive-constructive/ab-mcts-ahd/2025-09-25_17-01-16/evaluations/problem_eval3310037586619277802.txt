import math

    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (1 + remaining_nodes)  # Decreasing temperature over time

    scores = []
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        score = (distance_to_current + estimated_distance_to_destination) / (1 + temperature)
        scores.append(score)

    # Softmax to convert scores to probabilities
    exp_scores = [math.exp(score) for score in scores]
    sum_exp_scores = sum(exp_scores)
    probabilities = [exp_score / sum_exp_scores for exp_score in exp_scores]

    # Select node based on probabilities
    import random
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]

    return next_node
