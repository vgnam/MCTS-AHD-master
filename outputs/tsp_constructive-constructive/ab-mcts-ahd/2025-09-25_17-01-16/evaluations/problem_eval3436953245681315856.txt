def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    unvisited_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (unvisited_count - 1) if unvisited_count > 1 else 0
        revisit_penalty = 1.0 if node in unvisited_nodes else 0.0

        dynamic_weight_current = 1.0 / (1.0 + 0.1 * unvisited_count)
        dynamic_weight_destination = 0.5 + 0.2 * (unvisited_count / len(distance_matrix))
        dynamic_weight_hub = 0.3 * (1.0 - 0.05 * unvisited_count)

        total_score = (dynamic_weight_current * distance_to_current +
                       dynamic_weight_destination * distance_to_destination +
                       dynamic_weight_hub * hub_score +
                       revisit_penalty)

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
