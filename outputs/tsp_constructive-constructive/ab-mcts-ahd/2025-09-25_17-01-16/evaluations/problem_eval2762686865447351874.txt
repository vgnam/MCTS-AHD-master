def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_distance = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic bias: reduce emphasis on destination when far, increase when close
        bias_factor = 0.1 + 0.4 * (1 - remaining_distance / max(distance_matrix[current_node][destination_node] for dest in unvisited_nodes if dest != current_node))

        score = -current_distance + bias_factor * destination_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
