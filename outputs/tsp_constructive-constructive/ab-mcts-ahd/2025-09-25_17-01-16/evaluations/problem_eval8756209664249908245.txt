def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weighting factor based on remaining nodes
        remaining_nodes = len(unvisited_nodes) - 1
        weight_factor = (remaining_nodes / (remaining_nodes + 1)) if remaining_nodes > 0 else 1.0

        # Modified score equation: prioritize nodes that are close to current and far from destination
        total_score = (distance_to_current * weight_factor) - (distance_to_destination * (1 - weight_factor))

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
