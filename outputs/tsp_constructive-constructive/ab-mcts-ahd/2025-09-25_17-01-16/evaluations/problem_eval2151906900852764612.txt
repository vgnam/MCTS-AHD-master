def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = 0.5 ** (1.0 / (1.0 + remaining_nodes))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (remaining_nodes - 1) if remaining_nodes > 1 else 0

        score = (distance_to_node * exploration_factor) + (centrality * (1 - exploration_factor)) + (distance_to_destination * 2)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
