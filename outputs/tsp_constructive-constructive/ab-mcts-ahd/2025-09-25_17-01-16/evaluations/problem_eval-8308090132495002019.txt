def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    if remaining_nodes == 0:
        return destination_node

    # Calculate centroid of unvisited nodes
    centroid = sum(unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        distance_to_centroid = abs(node - centroid)

        # Dynamic weighting factor
        weight = 0.5 + 0.5 * (remaining_nodes / len(unvisited_nodes))

        # Combined score with centroid influence
        score = (1 - weight) * distance_to_current + weight * distance_to_destination + 0.2 * distance_to_centroid

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
