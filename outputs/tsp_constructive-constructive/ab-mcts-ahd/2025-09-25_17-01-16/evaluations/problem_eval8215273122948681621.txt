def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = 1.0 / (1.0 + 0.2 * remaining_nodes)
    exploitation_factor = 1.0 - exploration_factor

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)

        normalized_distance = distance_to_current / max(distance_matrix[current_node])
        normalized_hub = hub_score / max(hub_score, 1)

        score = (exploration_factor * (1 / (1 + normalized_distance))) + \
                (exploitation_factor * (1 / (1 + normalized_hub))) + \
                (0.3 * (1 / (1 + distance_to_destination ** (1.5 / (1 + remaining_nodes)))))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
