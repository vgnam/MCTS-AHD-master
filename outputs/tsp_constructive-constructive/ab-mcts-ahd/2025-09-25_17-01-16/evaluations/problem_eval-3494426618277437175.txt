def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(unvisited_nodes) + 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_unvisited = sum(distance_matrix[node][other] for other in unvisited_nodes) / len(unvisited_nodes)
        distance_to_destination = distance_matrix[node][destination_node]

        weight_current = 0.6
        weight_avg = 0.5
        weight_centrality = min(0.2 + (0.2 * (1 - remaining_nodes / total_nodes)), 0.4)
        weight_dest = min(0.1 + (0.2 * (1 - remaining_nodes / total_nodes)), 0.3)

        total_score = (distance_to_current * weight_current) + (avg_distance_to_unvisited * weight_avg) + (distance_to_destination * weight_dest) + (sum(distance_matrix[node][other] for other in unvisited_nodes) * weight_centrality)

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
