def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    if remaining_nodes > total_nodes / 2:
        weight_factor = 2.0  # Early focus on global optimization
    else:
        weight_factor = 1.5  # Balanced approach later

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        score = -1.5 * current_distance + weight_factor * destination_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
