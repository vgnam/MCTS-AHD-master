def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_distance = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_distance_to_destination = sum(distance_matrix[node][destination_node] for node in unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]

        if remaining_nodes > 0:
            weight = (remaining_nodes / (remaining_nodes + 1)) * (1 + 0.5 * (estimated_distance_to_destination / (total_distance_to_destination / remaining_nodes)))
        else:
            weight = 1.0

        penalty = 0.0
        if estimated_distance_to_destination > 1.5 * (total_distance_to_destination / remaining_nodes):
            penalty = 0.3 * estimated_distance_to_destination

        total_distance = distance_to_current + weight * estimated_distance_to_destination + penalty

        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node

    return next_node
