def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_weighted_distance = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]

        # Weight adjustment: prioritize long-term progress as remaining nodes decrease
        weight_current = 1.0 if remaining_nodes > 1 else 0.2
        weight_destination = 1.0 if remaining_nodes > 1 else 0.8

        total_weighted_distance = (weight_current * distance_to_current) + (weight_destination * estimated_distance_to_destination)

        if total_weighted_distance < min_total_weighted_distance:
            min_total_weighted_distance = total_weighted_distance
            next_node = node

    return next_node
