def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_cost = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + remaining_nodes)

    for node in unvisited_nodes:
        immediate_cost = distance_matrix[current_node][node]
        long_term_cost = distance_matrix[node][destination_node]
        exploration_bonus = 0.2 * sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (remaining_nodes - 1 if remaining_nodes > 1 else 1)
        penalty = 0.15 * (immediate_cost / (distance_matrix[current_node][destination_node] + 1e-6))

        total_cost = (1 - weight_factor) * immediate_cost + weight_factor * long_term_cost - exploration_bonus + penalty

        if total_cost < min_total_cost:
            min_total_cost = total_cost
            next_node = node

    return next_node
