def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_distance = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.5  # Fixed weight for immediate distance
    penalty_factor = 2.0 - (1.0 / (1.0 + remaining_nodes))  # Increases penalty as more nodes are visited

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        penalty = penalty_factor * (distance_matrix[current_node][node] / (distance_matrix[current_node][destination_node] + 1e-6))

        total_distance = weight_factor * distance_to_current + (1 - weight_factor) * estimated_distance_to_destination + penalty

        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node

    return next_node
