def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, revisit_counts=None):
    if revisit_counts is None:
        revisit_counts = {node: 0 for node in unvisited_nodes}

    next_node = None
    min_score = float('inf')
    remaining_ratio = len(unvisited_nodes) / (len(unvisited_nodes) + 1)  # Avoid division by zero

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        penalty = revisit_counts.get(node, 0) * 0.5  # Penalize revisited nodes
        score = current_distance + (1 - remaining_ratio) * destination_distance + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
