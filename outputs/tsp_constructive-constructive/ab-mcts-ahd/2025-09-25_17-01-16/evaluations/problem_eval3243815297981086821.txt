def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + 0.1 * remaining_nodes)

    if remaining_nodes == 0:
        return destination_node

    # Calculate centroid of unvisited nodes
    centroid = [0.0, 0.0]
    for node in unvisited_nodes:
        centroid[0] += distance_matrix[node][destination_node]
        centroid[1] += distance_matrix[node][current_node]
    centroid = [x / remaining_nodes for x in centroid]

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        novelty_factor = (distance_matrix[node][destination_node] - centroid[0]) ** 2 + \
                         (distance_matrix[node][current_node] - centroid[1]) ** 2

        score = distance_to_current + (distance_to_destination ** weight_factor) + \
                (0.5 * novelty_factor / (remaining_nodes + 1))

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
