def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_distance = float('inf')
    weight_current = 0.7  # Higher weight for immediate proximity
    weight_destination = 0.3  # Lower weight for long-term efficiency

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        if distance_to_destination == 0:
            inverse_distance = float('inf')
        else:
            inverse_distance = 1 / distance_to_destination
        total_distance = (weight_current * distance_to_current) + (weight_destination * inverse_distance)

        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node

    return next_node
