def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    progress_factor = 1.0 - (remaining_nodes / len(distance_matrix))
    weight_factor = 1.0 / (1.0 + 0.2 * remaining_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        connectivity = sum(1 / (1 + distance_matrix[node][other]) for other in unvisited_nodes if other != node)
        progress_penalty = progress_factor * distance_matrix[node][destination_node]

        score = -0.6 * distance_to_current + 0.3 * (distance_to_destination ** weight_factor) + 0.1 * connectivity - progress_penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
