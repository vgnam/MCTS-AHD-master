def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_unvisited = sum(distance_matrix[node][other] for other in unvisited_nodes) / num_unvisited
        distance_to_destination = distance_matrix[node][destination_node]

        weight = 0.5 + 0.5 * (1 - num_unvisited / len(distance_matrix))  # Dynamic weight
        total_score = weight * (distance_to_current + avg_distance_to_unvisited) + (1 - weight) * distance_to_destination

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
