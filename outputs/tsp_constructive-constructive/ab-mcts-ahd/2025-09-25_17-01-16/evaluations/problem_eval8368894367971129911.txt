def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # +1 for the current node

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 + 0.5 * (remaining_nodes / total_nodes)  # Adjust weight based on remaining nodes
        score = distance_to_node + dynamic_weight * distance_to_destination
        score += 0.01 * random.random()  # Small random perturbation

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
