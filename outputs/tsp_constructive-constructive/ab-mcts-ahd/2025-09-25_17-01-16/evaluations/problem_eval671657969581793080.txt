def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    alpha = len(unvisited_nodes) / (len(unvisited_nodes) + 1)  # Dynamic alpha based on unvisited nodes

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        total_score = alpha * distance_to_current + (1 - alpha) * estimated_distance_to_destination

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
