def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
        normalized_hub_score = hub_score / (remaining_nodes - 1) if remaining_nodes > 1 else 0

        dynamic_weight = min(0.5, 0.1 * (1 + (10 - remaining_nodes) / 10))
        total_score = (0.6 - dynamic_weight) * distance_to_current + 0.3 * distance_to_destination + dynamic_weight * normalized_hub_score

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
