import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)
    remaining_ratio = len(unvisited_nodes) / total_unvisited

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]

        if estimated_distance_to_destination == 0:
            ratio = float('inf')
        else:
            ratio = distance_to_current / estimated_distance_to_destination

        # Dynamic weighting factor using hyperbolic tangent
        progress_factor = (math.tanh(remaining_ratio * 5 - 2.5) + 1) / 2
        score = (1 - progress_factor) * distance_to_current + progress_factor * (distance_to_current + estimated_distance_to_destination)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
