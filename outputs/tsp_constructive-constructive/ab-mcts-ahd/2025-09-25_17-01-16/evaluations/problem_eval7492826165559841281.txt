def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_weighted_sum = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        weight = remaining_nodes / (1 + remaining_nodes)  # Dynamic weight increases as remaining nodes decrease
        weighted_sum = weight * distance_to_current + (1 - weight) * estimated_distance_to_destination

        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node

    return next_node
