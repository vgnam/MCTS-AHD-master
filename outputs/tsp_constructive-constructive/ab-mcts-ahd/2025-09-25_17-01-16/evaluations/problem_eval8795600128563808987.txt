importance throughout.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    dynamic_weight = 1.0 if remaining_nodes <= 2 else 0.5 + (0.2 * (remaining_nodes / len(distance_matrix)))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = distance_to_current + (dynamic_weight * distance_to_destination)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
