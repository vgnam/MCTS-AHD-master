def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight based on remaining unvisited nodes
        weight = 1.0 - 0.5 * (total_unvisited / (total_unvisited + 1))

        # Penalty for nodes already visited (if applicable)
        penalty = 0.0
        if node in unvisited_nodes and distance_to_current == 0:
            penalty = 1000.0  # Large penalty to avoid revisiting

        combined_score = (1 - weight) * distance_to_current + weight * distance_to_destination + penalty

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
