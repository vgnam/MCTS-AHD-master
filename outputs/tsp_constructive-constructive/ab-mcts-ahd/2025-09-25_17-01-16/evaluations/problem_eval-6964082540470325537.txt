def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        # Dynamic weighting based on remaining nodes
        weight = 0.5 if remaining_nodes > 2 else 0.2

        # Penalty for nodes that were previously considered but skipped
        penalty = 0.1 if node in unvisited_nodes and node != current_node else 0

        total_score = immediate_distance + weight * future_distance + penalty

        if total_score < min_score:
            min_score = total_score
            next_node = node

    return next_node
