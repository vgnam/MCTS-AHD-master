def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    novelty_factor = 1.0 - (remaining_nodes / (remaining_nodes + 1))
    recent_visits = {}

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]

        penalty = recent_visits.get(node, 0) * 0.5

        total_score = (1 - novelty_factor) * distance_to_current + novelty_factor * estimated_distance_to_destination + penalty

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    if next_node is not None:
        recent_visits[next_node] = recent_visits.get(next_node, 0) + 1

    return next_node
