def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_weighted_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic weighting based on remaining nodes
        weight = 0.5 if remaining_nodes > 1 else 0.2
        weighted_score = (current_distance * destination_distance) / (remaining_nodes ** 0.5)

        # Adjust score based on dynamic weight
        weighted_score *= (1 - weight)

        if weighted_score < min_weighted_score:
            min_weighted_score = weighted_score
            next_node = node

    return next_node
