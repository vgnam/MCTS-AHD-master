def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
        dynamic_weight_proximity = 0.6 - 0.2 * (remaining_nodes / len(unvisited_nodes))
        dynamic_weight_destination = 0.5 + 0.2 * (remaining_nodes / len(unvisited_nodes))
        dynamic_weight_hub = 0.1 + 0.2 * (remaining_nodes / len(unvisited_nodes))

        score = (dynamic_weight_proximity * (-current_distance) +
                 dynamic_weight_destination * destination_distance +
                 dynamic_weight_hub * hub_score)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
