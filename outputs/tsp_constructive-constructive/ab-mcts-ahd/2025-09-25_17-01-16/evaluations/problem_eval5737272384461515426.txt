def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    current_distance_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_from_node_to_dest = distance_matrix[node][destination_node]

        # Dynamic weight based on current proximity to destination (linear interpolation)
        min_weight = 0.1
        max_weight = 0.9
        weight = min_weight + (max_weight - min_weight) * (1 - (current_distance_to_dest / (sum(distance_matrix[current_node]) / len(distance_matrix))))

        combined_score = distance_to_node + weight * distance_from_node_to_dest

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
