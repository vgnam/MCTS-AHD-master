def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # +1 for the current node

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight adjustment based on remaining nodes
        if remaining_nodes > total_nodes / 2:
            weight = 0.7  # favor distance to current node when many nodes remain
        else:
            weight = 0.3  # favor distance to destination as fewer nodes remain

        score = (weight * distance_to_current) + ((1 - weight) * distance_to_destination)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
