def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_weighted_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            ratio = float('inf')
        else:
            ratio = distance_to_current / distance_to_destination

        proximity_weight = 1.0 / (1.0 + remaining_nodes) if remaining_nodes > 0 else 0.0
        destination_weight = 1.0 - proximity_weight
        weighted_score = (distance_to_current * proximity_weight) + (distance_to_destination * destination_weight) + (ratio * 0.5)

        if weighted_score < min_weighted_score:
            min_weighted_score = weighted_score
            next_node = node

    return next_node
