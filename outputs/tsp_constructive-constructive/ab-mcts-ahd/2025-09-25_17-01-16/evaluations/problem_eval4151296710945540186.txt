def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)

        adaptive_weight = 0.5 * (1 - (remaining_nodes / len(distance_matrix)))
        dynamic_weight = 0.5 * (distance_to_destination / sum(distance_matrix[node][other] for other in unvisited_nodes))

        total_score = (0.4 + adaptive_weight) * distance_to_current + (0.3 + dynamic_weight) * distance_to_destination + 0.3 * hub_score

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
