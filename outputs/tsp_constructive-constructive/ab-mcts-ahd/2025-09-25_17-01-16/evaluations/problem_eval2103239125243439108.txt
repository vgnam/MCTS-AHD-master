def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    decay_factor = 0.6
    global_weight = 0.3

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        average_unvisited_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)

        if destination_distance == 0:
            score = float('-inf')
        else:
            score = (decay_factor * current_distance) - destination_distance + global_weight * average_unvisited_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
