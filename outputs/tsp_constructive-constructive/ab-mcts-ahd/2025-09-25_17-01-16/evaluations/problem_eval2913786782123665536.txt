def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        average_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0

        if total_unvisited > 0:
            current_weight = 0.5 * (1 - 0.2 * (total_unvisited / len(distance_matrix)))
            destination_weight = 0.3 * (0.2 * (total_unvisited / len(distance_matrix)) + 0.3)
            future_weight = 0.2 * (0.2 * (total_unvisited / len(distance_matrix)) + 0.2)
        else:
            current_weight = 0.5
            destination_weight = 0.3
            future_weight = 0.2

        weighted_score = current_weight * distance_to_current + destination_weight * distance_to_destination + future_weight * average_future_distance

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
