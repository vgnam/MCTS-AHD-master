def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Exponential weight decay based on remaining unvisited nodes
        weight = 0.5 * (1 - math.exp(-(total_unvisited / (total_unvisited + 1))))

        # Novel scoring function: includes squared terms to emphasize extreme distances
        total_score = (weight * distance_to_current**2) + ((1 - weight) * distance_to_destination**2)

        if total_score < min_total_score:
            min_total_score = total_total_score
            next_node = node

    return next_node
