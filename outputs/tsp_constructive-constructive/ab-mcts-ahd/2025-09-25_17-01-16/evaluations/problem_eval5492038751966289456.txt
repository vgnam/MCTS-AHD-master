def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    num_unvisited = len(unvisited_nodes)
    current_path_length = sum(distance_matrix[current_node][node] for node in unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        revisit_penalty = (current_path_length / (current_path_length + 1)) ** 2

        weighted_score = (distance_to_current * 3 + estimated_distance_to_destination * 1.5) * (1 + revisit_penalty)
        normalized_score = weighted_score / (num_unvisited * (current_path_length + 1))

        if normalized_score < min_score:
            min_score = normalized_score
            next_node = node

    return next_node
