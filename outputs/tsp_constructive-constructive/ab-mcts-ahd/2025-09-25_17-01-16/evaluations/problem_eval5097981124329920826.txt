def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_ratio = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
    alpha = 0.5  # Base weight for destination distance
    beta = 1.0   # Penalty factor for revisiting nodes

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        diversity_penalty = 1.0 / (1.0 + len(unvisited_nodes))  # Encourages path diversity

        score = current_distance + (alpha * (1 - remaining_ratio) * destination_distance) - (beta * diversity_penalty)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
