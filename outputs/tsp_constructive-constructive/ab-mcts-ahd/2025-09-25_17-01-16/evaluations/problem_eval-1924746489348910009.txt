def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        weight = 1.0 / len(unvisited_nodes)  # Dynamic weighting factor
        score = -current_distance + 0.5 * weight * destination_distance  # Balanced emphasis on destination

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
