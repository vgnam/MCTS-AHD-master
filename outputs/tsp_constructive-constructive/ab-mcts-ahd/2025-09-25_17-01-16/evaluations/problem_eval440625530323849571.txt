def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes)

        if remaining_nodes > 2:
            weight_destination = 0.6
            weight_current = 0.2
            weight_centrality = 0.2
        else:
            weight_destination = 0.2
            weight_current = 0.4
            weight_centrality = 0.4

        total_score = (weight_destination * distance_to_destination +
                       weight_current * distance_to_current +
                       weight_centrality * centrality_score)

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
