def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    exploration_factor = 1 - (len(unvisited_nodes) / len(distance_matrix)) ** 2

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
        alignment_score = distance_to_current + distance_to_destination - distance_matrix[current_node][destination_node]

        dynamic_weight = 0.3 + 0.7 * exploration_factor
        total_score = (dynamic_weight * distance_to_current +
                      0.4 * distance_to_destination +
                      0.2 * hub_score +
                      0.1 * alignment_score)

        if total_score < best_score:
            best_score = total_score
            next_node = node

    return next_node
