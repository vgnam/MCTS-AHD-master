def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)

        proximity_weight = 0.5
        hub_weight = 0.3
        progress_weight = 0.2 + 0.1 * (remaining_nodes / len(unvisited_nodes))

        revisit_penalty = 1.0 if node in unvisited_nodes and node != destination_node else 0.0

        total_score = (proximity_weight * distance_to_current +
                      hub_weight * hub_score +
                      progress_weight * distance_to_destination) + revisit_penalty

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
