def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_distance = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = remaining_nodes / (remaining_nodes + 1.0)  # Increases as more nodes are visited

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        penalty = 0.2 * (distance_matrix[current_node][node] / (sum(distance_matrix[current_node]) / len(distance_matrix[current_node])))  # Penalty based on average distance

        total_distance = (1 - weight_factor) * distance_to_current + weight_factor * estimated_distance_to_destination + penalty

        if total_distance < min_total_distance:
            min_total_distance = total_total_distance
            next_node = node

    return next_node
