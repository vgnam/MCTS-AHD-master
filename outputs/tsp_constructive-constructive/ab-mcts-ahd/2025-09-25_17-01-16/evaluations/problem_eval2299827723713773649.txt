def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic weighting based on remaining nodes
        remaining_nodes = len(unvisited_nodes) - 1
        weight = 1 / (1 + remaining_nodes) if remaining_nodes > 0 else 1.0

        # Heuristic score combining linear and inverse proportional components
        combined_score = (1 - weight) * current_distance + weight * destination_distance

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
