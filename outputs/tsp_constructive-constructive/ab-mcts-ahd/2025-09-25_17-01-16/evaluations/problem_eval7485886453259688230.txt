import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    current_distance_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_from_node_to_dest = distance_matrix[node][destination_node]

        # Fixed weight based on current proximity to destination
        weight = 0.5 + 0.5 * (1 / (1 + math.exp(-0.1 * current_distance_to_dest)))
        combined_score = distance_to_node + weight * distance_from_node_to_dest

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
