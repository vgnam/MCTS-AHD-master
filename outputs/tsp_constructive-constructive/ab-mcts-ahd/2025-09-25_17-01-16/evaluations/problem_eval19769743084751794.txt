def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    total_unvisited = len(unvisited_nodes)

    if remaining_nodes == 0:
        return destination_node

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / total_unvisited

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        dynamic_penalty = 1.0 if current_distance < 0.5 * avg_distance else 0.0
        weight = 0.2 * (1.0 - (remaining_nodes / total_unvisited) ** 2)
        score = -current_distance * (1.0 - dynamic_penalty) + weight * destination_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
