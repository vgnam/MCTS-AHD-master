def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    current_distance_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic weight based on remaining nodes and proximity to destination
        weight = 1 / (1 + math.exp(-0.1 * (current_distance_to_dest - destination_distance)))
        weight_factor = 1.0 / (1.0 + 0.1 * remaining_nodes)
        score = -current_distance + (weight * destination_distance) ** weight_factor

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
