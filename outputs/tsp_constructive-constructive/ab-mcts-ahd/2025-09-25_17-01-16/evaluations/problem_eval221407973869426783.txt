def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        average_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0

        if remaining_nodes > 1:
            weight_immediate = 0.5 + 0.2 * (1 - 1 / remaining_nodes)
            weight_future = 0.5 - 0.2 * (1 - 1 / remaining_nodes)
        else:
            weight_immediate = 0.7
            weight_future = 0.3

        penalty = 0.5 if node == destination_node else 0.0

        weighted_score = (weight_immediate * distance_to_current + weight_future * average_future_distance) * (1 + penalty)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
