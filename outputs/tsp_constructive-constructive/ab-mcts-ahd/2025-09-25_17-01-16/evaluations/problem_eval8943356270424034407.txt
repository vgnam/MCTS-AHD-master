def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    total_unvisited = len(unvisited_nodes)
    weight = 0.5 * (1 + (total_unvisited / (total_unvisited + 1)))  # Dynamic weight based on remaining nodes

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        score = weight * (-current_distance) + (1 - weight) * (0.7 * destination_distance)  # Balanced score with dynamic weight

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
