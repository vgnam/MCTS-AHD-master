def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    num_unvisited = len(unvisited_nodes)

    if num_unvisited == 0:
        return destination_node

    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / num_unvisited
    current_distance_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        if current_distance_to_dest == 0:
            weight_factor = 1.0
        else:
            weight_factor = (distance_to_dest / current_distance_to_dest) ** 0.5

        dynamic_weight = weight_factor * (1.0 / (1.0 + (distance_to_dest / avg_distance_to_dest)))
        score = distance_to_current * dynamic_weight

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
