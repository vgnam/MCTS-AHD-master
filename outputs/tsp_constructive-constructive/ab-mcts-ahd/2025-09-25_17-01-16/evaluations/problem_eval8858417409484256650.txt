def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic weighting based on remaining nodes
        weight = 0.5 if remaining_nodes > 1 else 0.2
        score = -current_distance + weight * destination_distance

        # Penalty for nodes recently considered (simulated by favoring nodes further away)
        if remaining_nodes > 2:
            score += 0.1 * current_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
