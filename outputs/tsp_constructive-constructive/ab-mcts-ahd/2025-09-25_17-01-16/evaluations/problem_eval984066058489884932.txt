def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight adjustment based on remaining nodes
        current_weight = 1.0 / (1.0 + 0.1 * (remaining_nodes - 1))
        destination_weight = 0.5 * (1.0 - 0.1 * (remaining_nodes - 1))

        combined_score = current_weight * distance_to_current + destination_weight * distance_to_destination

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
