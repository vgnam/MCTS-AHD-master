def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        hub_score = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)

        dynamic_weight_proximity = 0.6 - 0.4 * (remaining_nodes / len(unvisited_nodes))
        dynamic_weight_hub = 0.2 + 0.4 * (remaining_nodes / len(unvisited_nodes))

        total_score = (dynamic_weight_proximity * distance_to_current +
                       0.3 * distance_to_destination +
                       dynamic_weight_hub * hub_score)

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
