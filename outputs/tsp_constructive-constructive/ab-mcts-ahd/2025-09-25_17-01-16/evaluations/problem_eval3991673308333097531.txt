def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_unvisited = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    progress = (total_nodes - total_unvisited) / total_nodes if total_nodes > 0 else 0

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if total_unvisited > 0:
            base_weight = 0.5 * (1 - progress)
            momentum = 0.3 * (progress ** 2)
            current_weight = base_weight + momentum
            destination_weight = 1 - current_weight
            recent_penalty = 0.1 * (1 / (1 + distance_matrix[current_node][node])) if distance_matrix[current_node][node] > 0 else 0
        else:
            current_weight = 0.5
            destination_weight = 0.5
            recent_penalty = 0

        weighted_score = (current_weight * distance_to_current + destination_weight * distance_to_destination) * (1 + recent_penalty)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
