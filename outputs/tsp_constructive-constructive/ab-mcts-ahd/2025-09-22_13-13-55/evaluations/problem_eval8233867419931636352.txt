def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        weight = 1 / (1 + len(unvisited_nodes))  # Dynamic weight based on remaining nodes
        penalty = 0.1 * (1 if node == destination_node else 0)  # Penalty for revisiting destination early
        score = distance * weight + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
