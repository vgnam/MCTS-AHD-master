def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_weight = 0.0
    weights = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        penalty = 1.0 / (1.0 + distance)  # Inverse distance penalty
        weight = penalty * (1.0 + 0.1 * len(unvisited_nodes))  # Path length factor
        weights.append(weight)
        total_weight += weight
    cumulative_weights = []
    cumulative_sum = 0.0
    for weight in weights:
        cumulative_sum += weight
        cumulative_weights.append(cumulative_sum)
    rand_val = random.random() * total_weight
    for i, node in enumerate(unvisited_nodes):
        if rand_val <= cumulative_weights[i]:
            return node
    return next_node
