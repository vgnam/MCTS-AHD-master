def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = remaining_nodes / (1.0 + remaining_nodes)
    proximity_penalty = 0.5 * (1.0 - weight_factor)

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        proximity_score = distance_to_current * (1.0 + proximity_penalty * (distance_to_current / distance_matrix[current_node][destination_node]))
        weighted_score = (1 - weight_factor) * proximity_score + weight_factor * distance_to_destination

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
