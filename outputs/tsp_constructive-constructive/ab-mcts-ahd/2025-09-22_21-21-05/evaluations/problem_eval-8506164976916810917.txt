def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    if total_unvisited == 0:
        return destination_node

    dynamic_factor = 1.0 / (total_unvisited ** 1.5)
    density_factor = 1.0 / (total_unvisited + 1)

    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        avg_distance_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (total_unvisited - 1) if total_unvisited > 1 else 0

        score = (1 - dynamic_factor) * distance_to_current + dynamic_factor * distance_to_destination
        score -= density_factor * avg_distance_to_unvisited

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
