def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / total_unvisited

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        weight = 1.0 / (1.0 + (distance_to_destination / avg_distance_to_dest) * (total_unvisited / len(distance_matrix)))
        penalty = distance_to_destination - avg_distance_to_dest if distance_to_destination > 1.5 * avg_distance_to_dest else 0
        max_distance = max(distance_to_current, distance_to_destination)
        score = (1 - weight) * distance_to_current + weight * distance_to_destination + penalty + 0.5 * max_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
