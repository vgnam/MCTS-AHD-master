def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (remaining_nodes + 1)

    candidates = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        candidates.append((node, distance))

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        candidates.append((destination_node, dest_distance))

    if not candidates:
        return destination_node

    probabilities = []
    total = 0.0
    for node, distance in candidates:
        if node == destination_node:
            weight = 1.0 - temperature
        else:
            weight = temperature
        score = weight / distance
        probabilities.append(score)
        total += score

    probabilities = [p / total for p in probabilities]

    selected = np.random.choice([node for node, _ in candidates], p=probabilities)
    return next_node
