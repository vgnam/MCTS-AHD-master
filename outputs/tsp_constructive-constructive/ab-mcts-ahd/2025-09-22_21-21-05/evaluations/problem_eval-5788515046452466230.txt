def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    unvisited_count = len(unvisited_nodes)
    total_nodes = unvisited_count + 1
    exploration_weight = 1 - (unvisited_count / total_nodes)

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        position_score = 1 - (distance_matrix[node][destination_node] / max(distance_matrix[current_node][destination_node], 1))
        combined_score = (1 - exploration_weight) * distance + exploration_weight * position_score

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
