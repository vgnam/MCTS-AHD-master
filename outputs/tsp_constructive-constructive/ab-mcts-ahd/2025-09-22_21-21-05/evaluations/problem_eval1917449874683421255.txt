def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_distance = float('inf')
    total_distance = 0.0
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        total_distance += distance
        if distance < min_distance:
            min_distance = distance
            next_node = node

    avg_distance = total_distance / num_unvisited if num_unvisited > 0 else 0.0

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance < min_distance:
            next_node = destination_node
        elif destination_distance < avg_distance * 1.5:
            next_node = destination_node
        else:
            potential_nodes = [node for node in unvisited_nodes if distance_matrix[current_node][node] <= avg_distance * 1.5]
            if potential_nodes:
                next_node = min(potential_nodes, key=lambda x: distance_matrix[current_node][x] + distance_matrix[x][destination_node])

    return next_node
