def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Linear decaying weight
        weight = total_unvisited / total_nodes
        score = (distance_to_current + weight * distance_to_destination) / total_nodes

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
