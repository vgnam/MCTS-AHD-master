def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
        median_distance = sorted(distances)[len(distances) // 2]
        destination_distance = distance_matrix[current_node][destination_node]
        bias = 1 - (destination_distance / (median_distance + 1e-10))  # Avoid division by zero
        if bias > 0.75:  # Higher threshold to prioritize destination
            return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    return next_node
