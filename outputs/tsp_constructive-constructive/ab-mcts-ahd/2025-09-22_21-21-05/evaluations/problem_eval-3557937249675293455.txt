def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        cumulative_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)

        # Dynamic weight based on remaining nodes
        weight = 1 - (total_unvisited / (total_unvisited + 2))

        combined_score = distance_to_current + weight * cumulative_distance

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
