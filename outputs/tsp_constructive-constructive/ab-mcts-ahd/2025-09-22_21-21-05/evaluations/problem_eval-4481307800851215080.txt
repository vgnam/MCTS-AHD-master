def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    unvisited_count = len(unvisited_nodes)
    total_nodes = unvisited_count + 1
    progress_bias = (total_nodes - unvisited_count) / total_nodes
    exploration_weight = 1 - progress_bias

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            score = distance * (1 - progress_bias * 0.7)  # stronger bias toward destination
        else:
            score = distance * (1 + exploration_weight * 0.3)  # slight penalty for non-destination nodes
        if score < min_score:
            min_score = score
            next_node = node

    return next_node
