def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.5

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        proximity_factor = (distance_to_current + distance_to_destination) / (1 + remaining_nodes * 0.1)

        centrality_factor = 0
        for other in unvisited_nodes:
            if other != node:
                centrality_factor += distance_matrix[node][other]
        centrality_factor = 1 / (centrality_factor + 1e-6)

        combined_score = (1 - weight_factor) * proximity_factor + weight_factor * centrality_factor

        if combined_score > best_score:
            best_score = combined_score
            next_node = node

    return next_node
