def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    total_score = 0.0

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        sum_distance_to_remaining = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) if unvisited_nodes else 0
        avg_distance_to_remaining = sum_distance_to_remaining / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0
        temperature = 1.0 / (1.0 + len(unvisited_nodes))
        adjusted_score = (distance_to_current + distance_to_destination) * temperature - avg_distance_to_remaining
        scores.append(adjusted_score)
        total_score += adjusted_score

    if total_score <= 0:
        probabilities = [1.0 / len(unvisited_nodes) for _ in range(len(unvisited_nodes))]
    else:
        probabilities = [score / total_score for score in scores]

    next_node = np.random.choice(unvisited_nodes, p=probabilities)
    return next_node
