def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    current_to_destination = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        proximity_factor = 1.0 / (1.0 + distance_to_destination)
        distance_penalty = 0.2 * (distance_to_destination - current_to_destination)
        weighted_score = (0.5 * distance_to_current) + (0.3 * distance_to_destination) + (0.2 * proximity_factor) - distance_penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
