def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    total_nodes = len(distance_matrix)
    remaining_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance_to_remaining = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / remaining_count if remaining_count > 1 else 0

        exploration_weight = 0.5 * (1 - remaining_count / total_nodes)
        exploitation_weight = 0.5 * (remaining_count / total_nodes)

        combined_score = (exploration_weight * (1 / (distance_to_current + 1e-6)) +
                          exploitation_weight * (1 / (distance_to_destination + 1e-6)) -
                          0.2 * avg_distance_to_remaining)

        if combined_score > best_score:
            best_score = combined_score
            next_node = node

    return next_node
