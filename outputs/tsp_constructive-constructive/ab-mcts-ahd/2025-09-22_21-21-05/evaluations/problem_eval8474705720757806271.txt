def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = -float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + math.exp(-0.2 * (remaining_nodes - len(distance_matrix)/2)))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(1.0 / (distance_matrix[node][n] + 1e-10) for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0
        combined_score = (distance_to_current + distance_to_destination) * (1 - weight_factor) + centrality * weight_factor

        if combined_score > best_score:
            best_score = combined_score
            next_node = node

    return next_node
