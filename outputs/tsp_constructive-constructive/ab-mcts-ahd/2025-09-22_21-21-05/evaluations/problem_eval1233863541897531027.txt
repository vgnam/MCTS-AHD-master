import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    mean_distance = sum(distances) / len(distances)
    variance = sum((d - mean_distance) ** 2 for d in distances) / len(distances)
    std_dev = variance ** 0.5
    threshold = mean_distance - 0.5 * std_dev

    temperature = max(0.1, std_dev / mean_distance) if mean_distance > 0 else 0.1
    exploration_factor = math.exp(-temperature)

    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            score = distance * (1 - exploration_factor)
        else:
            score = distance * (1 + exploration_factor * (1 if distance < threshold else -1))

        if score < best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes and random.random() < exploration_factor:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance < threshold:
            next_node = destination_node

    return next_node
