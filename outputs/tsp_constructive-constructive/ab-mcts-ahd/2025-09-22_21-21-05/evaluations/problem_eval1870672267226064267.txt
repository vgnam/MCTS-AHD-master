def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(distance_matrix)
    remaining_unvisited = len(unvisited_nodes)
    destination_bias = (total_nodes - remaining_unvisited) / total_nodes
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if node == destination_node:
            distance_to_current *= (1 - destination_bias)

        exploration_bonus = 0.2 * (1 / (sum(distance_matrix[node]) / len(distance_matrix[node]))) * (1 / (1 + remaining_unvisited))

        combined_score = distance_to_current + 0.5 * destination_bias * distance_to_destination - exploration_bonus

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
