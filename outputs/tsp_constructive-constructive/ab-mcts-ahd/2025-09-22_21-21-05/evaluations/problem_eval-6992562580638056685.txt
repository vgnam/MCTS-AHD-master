def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if remaining_nodes <= 3:
            weight_current = 0.5
            weight_destination = 0.2
        else:
            weight_current = 0.4
            weight_destination = 0.6

        combined_score = weight_current * distance_to_current + weight_destination * distance_to_destination

        if distance_matrix[node][current_node] > 0:
            combined_score += 0.3 * (distance_matrix[node][current_node] / (distance_to_current + 1e-6))

        if distance_to_current == 0:
            combined_score = 0

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
