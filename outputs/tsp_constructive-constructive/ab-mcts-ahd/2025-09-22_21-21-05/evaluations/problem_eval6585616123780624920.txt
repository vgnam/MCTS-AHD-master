def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight = 1 / (1 + remaining_nodes ** 0.5) if remaining_nodes > 0 else 0.5

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        max_distance = max(distance_to_current, distance_to_destination)
        weighted_score = weight * distance_to_current + (1 - weight) * distance_to_destination
        combined_score = max_distance + weighted_score

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
