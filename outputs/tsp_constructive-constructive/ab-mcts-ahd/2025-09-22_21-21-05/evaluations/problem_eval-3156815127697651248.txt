def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(distance_matrix)
    visited_nodes = total_nodes - len(unvisited_nodes)
    centrality_weight = 0.5 * (visited_nodes / total_nodes)  # Weight increases as more nodes are visited

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        centrality = sum(distance_matrix[node][other] for other in unvisited_nodes) / (len(unvisited_nodes) if unvisited_nodes else 1)
        score = distance + centrality_weight * centrality

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
