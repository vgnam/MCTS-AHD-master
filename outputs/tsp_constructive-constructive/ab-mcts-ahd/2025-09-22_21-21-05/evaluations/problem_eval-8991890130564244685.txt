def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = 0.5 if remaining_nodes > 1 else 1.0  # Dynamic weighting

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = 0.1 * (1.0 / (distance_to_current + 1e-9))  # Penalty for short distances
        combined_score = distance_to_current + weight * distance_to_destination - penalty
        max_distance = max(distance_to_current, combined_score)

        if max_distance < best_score:
            best_score = max_distance
            next_node = node

    return next_node
