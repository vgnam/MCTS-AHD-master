def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = remaining_nodes / (remaining_nodes + 1)
    candidates = []
    weights = []

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = (1 - temperature) * distance_to_current + temperature * distance_to_destination
        candidates.append(node)
        weights.append(1.0 / (combined_score + 1e-10))

    if destination_node in unvisited_nodes:
        dest_index = candidates.index(destination_node)
        weights[dest_index] *= (1 + temperature)

    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]
    next_node = np.random.choice(candidates, p=probabilities)

    return next_node
