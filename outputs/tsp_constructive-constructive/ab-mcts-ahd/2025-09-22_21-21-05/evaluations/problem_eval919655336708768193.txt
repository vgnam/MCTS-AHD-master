def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 + 0.4 * (remaining_nodes / (remaining_nodes + 1))
        combined_score = distance_to_current + 0.4 * distance_to_destination
        total_score = dynamic_weight * distance_to_current + (1 - dynamic_weight) * combined_score

        if total_score < best_score:
            best_score = total_score
            next_node = node

    return next_node
