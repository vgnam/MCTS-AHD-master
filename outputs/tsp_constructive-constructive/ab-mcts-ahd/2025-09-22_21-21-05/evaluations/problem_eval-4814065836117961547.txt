import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    progress = 1 - (remaining_nodes / total_nodes)
    weight_factor = max(0.1, 0.8 * math.exp(-3 * progress))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = 1 if node in unvisited_nodes else 1.2
        combined_score = distance_to_current + weight_factor * distance_to_destination * penalty

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
