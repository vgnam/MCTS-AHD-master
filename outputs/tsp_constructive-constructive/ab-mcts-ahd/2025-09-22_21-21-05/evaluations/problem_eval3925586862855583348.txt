def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    unvisited_count = len(unvisited_nodes)
    total_nodes = unvisited_count + 1
    base_bias = 0.5 ** (unvisited_count / total_nodes)
    destination_proximity = distance_matrix[current_node][destination_node]
    dynamic_bias = base_bias * (1 - (destination_proximity / sum(distance_matrix[current_node])))

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            score = distance * (1 - dynamic_bias)
        else:
            score = distance * (1 + (dynamic_bias * (destination_proximity / distance)))
        if score < min_score:
            min_score = score
            next_node = node

    return next_node
