def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    dynamic_threshold = 1.5 * (1 + 0.5 * (1 / (num_unvisited + 1)))

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        penalty = 1 + (distance / sum(distance_matrix[current_node]) if sum(distance_matrix[current_node]) != 0 else 0)
        adjusted_distance = distance * penalty

        if adjusted_distance < min_distance:
            min_distance = adjusted_distance
            next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance <= min_distance * dynamic_threshold:
            next_node = destination_node

    return next_node
