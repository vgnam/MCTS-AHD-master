def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / total_unvisited

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        weight = 1.0 - (0.5 * (total_unvisited - 1) / total_unvisited) ** 2
        normalized_distance = distance_to_current / avg_distance

        if distance_to_destination == 0:
            ratio = 0
        else:
            ratio = distance_to_current / distance_to_destination

        combined_score = (distance_to_current + weight * distance_to_destination) * (1 + normalized_distance) + 0.4 * ratio

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
