def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_length = len(unvisited_nodes)
    total_nodes = remaining_length + 1
    visited_ratio = (total_nodes - remaining_length) / total_nodes

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        weight_current = 0.7 - 0.3 * visited_ratio
        weight_destination = 0.3 + 0.4 * visited_ratio

        centrality = sum(distance_matrix[node][n] for n in range(len(distance_matrix))) / (len(distance_matrix) - 1)

        combined_score = (weight_current * distance_to_current) + (weight_destination * distance_to_destination) + 0.3 * centrality

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
