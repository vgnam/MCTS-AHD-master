def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_unvisited = len(unvisited_nodes)
    weight_factor = 1.0 / (remaining_unvisited ** 2)

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance_to_remaining = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / remaining_unvisited if remaining_unvisited > 1 else 0
        centrality_factor = avg_distance_to_remaining

        combined_score = (distance_to_current + distance_to_destination) + (weight_factor * centrality_factor)

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
