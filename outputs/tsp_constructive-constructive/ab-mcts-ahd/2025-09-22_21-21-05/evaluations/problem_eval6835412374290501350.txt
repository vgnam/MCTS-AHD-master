defaults to the nearest unvisited node, ensuring exploration while maintaining proximity to the destination.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = min_distance if min_distance < distance else distance
            next_node = node if distance < min_distance else next_node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance < min_distance * 2.0:
            next_node = destination_node

    return next_node
