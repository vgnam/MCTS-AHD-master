def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    current_weight = max(0.2, 0.6 - 0.4 * (total_unvisited / len(distance_matrix)))
    destination_weight = 1.0 - current_weight

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        adaptive_score = current_weight * distance_to_current + destination_weight * distance_to_destination + 0.1 * (distance_to_current + distance_to_destination) / (1 + total_unvisited)

        if adaptive_score < best_score:
            best_score = adaptive_score
            next_node = node

    return next_node
