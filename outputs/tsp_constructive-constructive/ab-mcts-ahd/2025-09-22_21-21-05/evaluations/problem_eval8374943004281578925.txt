def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if all(distance_matrix[current_node][node] >= destination_distance for node in unvisited_nodes if node != destination_node):
            return destination_node

    remaining_distance = distance_matrix[current_node][destination_node]
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_destination = distance_matrix[node][destination_node]

        if remaining_distance > 0:
            weight = node_to_destination / remaining_distance
        else:
            weight = 1.0

        score = current_to_node + (weight * node_to_destination)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
