def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    unvisited_count = len(unvisited_nodes)
    total_nodes = unvisited_count + 1
    destination_bias = (total_nodes - unvisited_count) / total_nodes

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            ratio = 0
        else:
            ratio = distance_to_current / distance_to_destination

        weighted_score = (1 - destination_bias) * distance_to_current + destination_bias * ratio

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
