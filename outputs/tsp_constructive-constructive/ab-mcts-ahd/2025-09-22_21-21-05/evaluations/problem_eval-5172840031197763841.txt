def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    weight_current = 0.4
    weight_destination = 0.6

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        penalty = 0.0
        for neighbor in unvisited_nodes:
            if neighbor != node and distance_matrix[node][neighbor] < distance_matrix[current_node][node] * 1.2:
                penalty += 0.2

        weighted_score = (weight_current * distance_to_current) + (weight_destination * distance_to_destination) + penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
