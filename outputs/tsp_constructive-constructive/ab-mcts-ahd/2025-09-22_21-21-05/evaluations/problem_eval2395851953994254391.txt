def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_total_cost = float('inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        additive_cost = current_distance + remaining_distance
        multiplicative_cost = current_distance * remaining_distance
        total_cost = 0.6 * additive_cost + 0.4 * multiplicative_cost

        if total_cost < min_total_cost:
            min_total_cost = total_cost
            next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        destination_cost = 0.6 * (destination_distance + distance_matrix[destination_node][destination_node]) + 0.4 * (destination_distance * distance_matrix[destination_node][destination_node])
        if destination_cost < min_total_cost:
            next_node = destination_node

    return next_node
