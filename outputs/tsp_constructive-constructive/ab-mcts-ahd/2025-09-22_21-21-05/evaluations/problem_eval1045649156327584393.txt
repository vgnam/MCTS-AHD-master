def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    avg_distance_to_remaining = sum(distance_matrix[current_node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        deviation_from_avg = abs(distance_matrix[current_node][node] - avg_distance_to_remaining)

        exploration_factor = 1.0 / (1 + math.exp(-deviation_from_avg))  # Sigmoid scaling
        combined_score = distance_to_current + distance_to_destination + exploration_factor * deviation_from_avg

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
