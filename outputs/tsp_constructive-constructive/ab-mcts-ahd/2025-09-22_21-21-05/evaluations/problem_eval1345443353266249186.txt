def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        max_distance_to_remaining = -float('inf')
        for n in unvisited_nodes:
            if n != node:
                current_distance = distance_matrix[node][n]
                if current_distance > max_distance_to_remaining:
                    max_distance_to_remaining = current_distance

        dynamic_weight = 1.0 / (remaining_nodes + 1)
        combined_score = (distance_to_current + distance_to_destination) + (dynamic_weight * max_distance_to_remaining)

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
