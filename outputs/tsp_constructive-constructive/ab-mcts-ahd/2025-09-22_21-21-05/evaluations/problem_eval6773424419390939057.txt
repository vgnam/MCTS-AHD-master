def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    destination_priority = False

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance < min_distance * 1.2 or len(unvisited_nodes) == 1:
            destination_priority = True

    if destination_priority:
        next_node = destination_node
    else:
        if len(unvisited_nodes) > 1 and random.random() < 0.3:
            candidates = [node for node in unvisited_nodes if node != next_node]
            next_node = random.choice(candidates)

    return next_node
