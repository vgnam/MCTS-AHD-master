def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_total_cost = float('inf')
    base_distance = distance_matrix[current_node][destination_node]
    proximity_factor = 1 / (1 + base_distance)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        weighted_cost = (current_distance ** (1 - proximity_factor)) * (remaining_distance ** proximity_factor)

        if weighted_cost < min_total_cost:
            min_total_cost = weighted_cost
            next_node = node

    return next_node
