def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)
    proximity_weight = 1 - (total_unvisited / (total_unvisited + 1))  # Adjusts weight based on remaining nodes

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        score = (proximity_weight * current_distance) + ((1 - proximity_weight) * remaining_distance)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
