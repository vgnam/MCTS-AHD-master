def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        decay_factor = 0.5 ** (remaining_nodes / total_nodes)
        weight_current = decay_factor
        weight_destination = 1.0 - decay_factor

        weighted_score = (weight_current * distance_to_current) + (weight_destination * distance_to_destination)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
