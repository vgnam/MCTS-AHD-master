def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight_factor = max(0.3, 0.7 * (remaining_nodes / len(distance_matrix)))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        proximity_score = sum(distance_matrix[node][neighbor] for neighbor in unvisited_nodes if neighbor != node) / (remaining_nodes - 1) if remaining_nodes > 1 else 0
        combined_score = distance_to_current + weight_factor * distance_to_destination + 0.5 * proximity_score

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
