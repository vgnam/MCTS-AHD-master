def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    progress = 1 - (remaining_nodes / total_nodes)
    dynamic_weight = 1 / (1 + math.exp(-10 * (progress - 0.5)))

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = (1 - dynamic_weight) * distance_to_destination + dynamic_weight * distance_to_current

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
