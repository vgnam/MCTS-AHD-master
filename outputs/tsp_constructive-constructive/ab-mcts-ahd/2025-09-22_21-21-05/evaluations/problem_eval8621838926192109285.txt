def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_others = sum(distance_matrix[node][other] for other in unvisited_nodes) / total_unvisited

        dynamic_factor = 1.0 - (total_unvisited / (total_unvisited + 1))
        centrality_weight = 0.4 + 0.2 * dynamic_factor
        distance_weight = 0.6 - 0.2 * dynamic_factor

        combined_score = (distance_weight * distance_to_current + centrality_weight * avg_distance_to_others)

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
