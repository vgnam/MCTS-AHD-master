def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.7 / (remaining_nodes + 1)  # Starts higher than No.3 and decreases
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = distance_to_current + weight_factor * distance_to_destination

        # Penalize nodes that are far from current but close to destination
        if distance_to_current > 2 * distance_to_destination:
            combined_score += 0.5 * distance_to_current

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
