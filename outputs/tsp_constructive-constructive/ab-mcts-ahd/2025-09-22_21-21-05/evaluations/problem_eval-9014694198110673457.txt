def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    node_scores = []
    total_score = 0.0

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            weight = 1.0 / remaining_nodes
        else:
            weight = 1.0
        score = (1.0 / (distance + 1e-6)) * weight
        node_scores.append((node, score))
        total_score += score

    if total_score == 0:
        return unvisited_nodes[0] if unvisited_nodes else destination_node

    probabilities = [(node, score / total_score) for node, score in node_scores]
    probabilities.sort(key=lambda x: x[1], reverse=True)

    cumulative_prob = 0.0
    rand = random.random()
    for node, prob in probabilities:
        cumulative_prob += prob
        if rand <= cumulative_prob:
            return node

    return next_node
