def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    weight_factor = max(0.1, 0.3 * (remaining_nodes / total_nodes) + 0.2 * (1 - distance_matrix[current_node][destination_node] / max(max(row) for row in distance_matrix)))

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        lookahead_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / max(1, remaining_nodes - 1)
        combined_score = immediate_distance + weight_factor * (future_distance + 0.5 * lookahead_distance)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
