def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        max_distance = max(distance_to_current, distance_to_destination)
        penalty = 1.0 + (1.0 / (1.0 + distance_to_destination))
        hybrid_score = distance_to_current + (penalty * distance_to_destination) + max_distance

        if hybrid_score < best_score:
            best_score = hybrid_score
            next_node = node

    return next_node
