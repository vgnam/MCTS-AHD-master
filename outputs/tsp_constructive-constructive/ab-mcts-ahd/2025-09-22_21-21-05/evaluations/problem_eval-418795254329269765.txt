def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = {node: distance_matrix[current_node][node] for node in unvisited_nodes}
    min_distance = min(distances.values())

    if destination_node in unvisited_nodes:
        destination_distance = distances[destination_node]
        if destination_distance == min_distance:
            return destination_node
        elif destination_distance <= 2 * min_distance:
            if random.random() < 0.7:
                return destination_node

    probabilities = {node: (min_distance / distance) for node, distance in distances.items()}
    total_prob = sum(probabilities.values())
    normalized_probs = {node: prob / total_prob for node, prob in probabilities.items()}

    cumulative_prob = 0.0
    rand_val = random.random()
    for node, prob in normalized_probs.items():
        cumulative_prob += prob
        if rand_val <= cumulative_prob:
            return node

    return next_node
