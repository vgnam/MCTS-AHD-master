def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    weight = 0.5  # Static weight to balance distance and direction

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        path_angle = distance_matrix[current_node][destination_node]

        if path_angle == 0:
            angle_score = 0
        else:
            angle_score = (distance_to_current / path_angle)

        combined_score = distance_to_current + weight * angle_score

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
