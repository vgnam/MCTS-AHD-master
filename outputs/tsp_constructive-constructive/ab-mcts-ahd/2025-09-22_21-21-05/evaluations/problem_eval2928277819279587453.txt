def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_count = len(unvisited_nodes)
    best_score = -float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        sum_distance_to_remaining = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) if unvisited_nodes else 0

        product_term = (distance_to_current * distance_to_destination) ** (1 / (1 + remaining_count))
        penalty_term = sum_distance_to_remaining * (1 / (1 + remaining_count))
        combined_score = product_term - (0.3 * penalty_term)

        if combined_score > best_score:
            best_score = combined_score
            next_node = node

    return next_node
