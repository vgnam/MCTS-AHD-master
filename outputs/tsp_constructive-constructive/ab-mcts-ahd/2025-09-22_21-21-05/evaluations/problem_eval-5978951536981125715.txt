def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    if total_unvisited == 0:
        return destination_node

    remaining_nodes_factor = (total_unvisited ** 2) / ((total_unvisited + 1) ** 2)  # Quadratic adjustment

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_next = min(distance_matrix[node][neighbor] for neighbor in unvisited_nodes if neighbor != node)

        weight = remaining_nodes_factor

        score = weight * distance_to_current + (1 - weight) * distance_to_next

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
