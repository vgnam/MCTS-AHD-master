def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(distance_matrix)
    remaining_unvisited = len(unvisited_nodes)
    destination_bias = (1 - (remaining_unvisited / total_nodes)) ** 2

    distances = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            distance *= (1 - destination_bias)
        distances.append(distance)

    probabilities = [1 / (d + 1e-10) for d in distances]
    total_prob = sum(probabilities)
    normalized_probs = [p / total_prob for p in probabilities]

    next_node = np.random.choice(unvisited_nodes, p=normalized_probs)
    return next_node
