def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    dynamic_weight = 1.0 - (0.8 * (total_unvisited / (total_unvisited + 1)))  # Weight increases as unvisited decrease

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        global_distance = distance_matrix[node][destination_node] if node != destination_node else 0
        weighted_distance = (1 - dynamic_weight) * distance + dynamic_weight * global_distance

        if weighted_distance < min_distance:
            min_distance = weighted_distance
            next_node = node

    return next_node
