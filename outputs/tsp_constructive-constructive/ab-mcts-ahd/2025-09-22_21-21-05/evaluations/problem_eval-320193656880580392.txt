def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        remaining_nodes = [n for n in unvisited_nodes if n != node]
        avg_distance_to_remaining = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes) if remaining_nodes else 0

        weight = 0.3 + 0.7 * (total_unvisited / (total_unvisited + 1))
        penalty = 1.0 + 0.5 * (avg_distance_to_remaining / (sum(distance_matrix[node]) / len(distance_matrix[node])))

        combined_score = (distance_to_current + weight * distance_to_destination) * penalty + 0.5 * avg_distance_to_remaining

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
