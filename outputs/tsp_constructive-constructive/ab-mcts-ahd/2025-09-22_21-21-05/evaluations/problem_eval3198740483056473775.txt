def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 1:
        return unvisited_nodes[0]

    avg_distance_to_destination = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / remaining_nodes
    avg_distance_to_current = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes

    weight_factor = (remaining_nodes / (1.0 + remaining_nodes)) * (avg_distance_to_destination / (avg_distance_to_current + 1e-10))

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        deviation = abs(distance_to_destination - avg_distance_to_destination)
        weighted_score = (1 - weight_factor) * distance_to_current + weight_factor * distance_to_destination + deviation

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
