def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight for long-term distance based on remaining nodes
        weight = 0.7 + 0.3 * (remaining_nodes / (remaining_nodes + 1))
        total_score = distance_to_current + weight * distance_to_destination

        # Penalty for revisiting previously considered but not chosen nodes
        if node in unvisited_nodes and node != current_node:
            total_score *= 1.1

        if total_score < best_score:
            best_score = total_score
            next_node = node

    return next_node
