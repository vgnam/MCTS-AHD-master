import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = remaining_nodes / (remaining_nodes + 1)
    weight_current = temperature
    weight_destination = 1.0 - temperature

    candidates = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        score = (weight_current * distance) + (weight_destination * dest_distance)
        candidates.append((node, score))

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        dest_score = (weight_current * dest_distance) + (weight_destination * 0)
        candidates.append((destination_node, dest_score))

    candidates.sort(key=lambda x: x[1])
    min_score = candidates[0][1]

    probabilities = []
    for node, score in candidates:
        adjusted_score = math.exp(-(score - min_score) / temperature)
        probabilities.append(adjusted_score)

    total_prob = sum(probabilities)
    probabilities = [p / total_prob for p in probabilities]

    selected_index = random.choices(range(len(candidates)), weights=probabilities, k=1)[0]
    next_node = candidates[selected_index][0]

    return next_node
