def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        path_length = distance_matrix[current_node][destination_node]

        if path_length == 0:
            deviation_penalty = 0
        else:
            deviation_penalty = (distance_to_current + distance_to_destination - path_length) / path_length

        weight = 1.0 + deviation_penalty
        score = (distance_to_destination / weight) - (distance_to_current * deviation_penalty)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
