def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    global_weight = 0.5 + 0.5 * (remaining_nodes / (remaining_nodes + 1))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance_to_remaining = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, remaining_nodes - 1)
        combined_score = (distance_to_current ** 2) + (distance_to_destination ** 2) + global_weight * avg_distance_to_remaining

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
