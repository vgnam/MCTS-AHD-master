defaulting to the nearest neighbor.}

```python
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    destination_bias = 0.3  # fixed bias factor
    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            distance *= (1 - destination_bias)
        if distance < min_distance:
            min_distance = distance
            next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node] * (1 - destination_bias)
        if destination_distance < min_distance:
            next_node = destination_node

    return next_node
