def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = -float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distances_to_remaining = [distance_matrix[node][n] for n in unvisited_nodes if n != node]
        avg_distance_to_remaining = sum(distances_to_remaining) / len(unvisited_nodes) if unvisited_nodes else 0
        variance = sum((d - avg_distance_to_remaining) ** 2 for d in distances_to_remaining) / len(unvisited_nodes) if unvisited_nodes else 0

        combined_score = (distance_to_current * 0.7) + (avg_distance_to_remaining * 0.3) - (variance * 0.2)

        if combined_score > best_score:
            best_score = combined_score
            next_node = node

    return next_node
