def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    heuristic_factor = 0.5  # Stronger penalty for destination and higher reward for others

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            weighted_score = distance * (1 - heuristic_factor)
        else:
            weighted_score = distance * (1 + heuristic_factor + 0.1)  # Additional exploration boost

        if weighted_score < min_distance:
            min_distance = weighted_score
            next_node = node

    return next_node
