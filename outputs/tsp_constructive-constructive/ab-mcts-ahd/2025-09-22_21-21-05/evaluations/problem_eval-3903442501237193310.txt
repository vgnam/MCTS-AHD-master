def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    unvisited_count = len(unvisited_nodes)
    total_nodes = unvisited_count + 1
    destination_bias = 1 - (0.5 ** (unvisited_count / total_nodes))
    exploration_factor = (unvisited_count ** 0.5) / (unvisited_count + 1)

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance_to_remaining = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / unvisited_count if unvisited_count else 0

        if node == destination_node:
            distance_to_current *= (1 - destination_bias)

        combined_score = (distance_to_current + exploration_factor * avg_distance_to_remaining) * (1 + distance_to_destination)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
