def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    heuristic_factor = 0.5
    memory = {}
    exploration_bonus = 0.8

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if node == destination_node:
            weighted_score = distance_to_current * (1 - heuristic_factor)
        else:
            weighted_score = distance_to_current * (1 + heuristic_factor)

        memory_factor = 1 + 0.2 * memory.get(node, 0)
        exploration_factor = 1 - (distance_to_destination / max(distance_matrix[node])) * exploration_bonus
        score = weighted_score * memory_factor * exploration_factor

        if score < min_score:
            min_score = score
            next_node = node

    memory[next_node] = memory.get(next_node, 0) + 1
    return next_node
