def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, memory=None):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    dynamic_factor = len(unvisited_nodes) / (len(unvisited_nodes) + 1)

    if memory is None:
        memory = {}

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        combined_distance = distance_to_current + dynamic_factor * distance_to_destination
        memory_factor = 1 + 0.2 * memory.get(node, 0)
        score = combined_distance * memory_factor

        if score < min_score:
            min_score = score
            next_node = node

    memory[next_node] = memory.get(next_node, 0) + 1
    return next_node
