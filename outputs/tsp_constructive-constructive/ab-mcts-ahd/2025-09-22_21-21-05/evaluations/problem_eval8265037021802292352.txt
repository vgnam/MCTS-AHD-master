def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = 1.0 - (0.8 ** remaining_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        proximity_penalty = 1.0 / (1.0 + distance_to_current) if distance_to_current > 0 else 1.0
        weight_current = (1.0 - exploration_factor) * proximity_penalty
        weight_destination = exploration_factor

        weighted_score = (weight_current * distance_to_current) + (weight_destination * distance_to_destination)

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node

    return next_node
