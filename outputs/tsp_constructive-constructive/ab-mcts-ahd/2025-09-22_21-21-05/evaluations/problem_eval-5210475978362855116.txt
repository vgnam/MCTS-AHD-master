def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        path_length = distance_matrix[current_node][destination_node]

        if path_length == 0:
            angular_deviation = 0
        else:
            angular_deviation = distance_to_current / path_length

        penalty = 1.0 + (1.0 - angular_deviation) * (distance_to_destination / (path_length + 1e-6))

        combined_score = distance_to_current + penalty * distance_to_destination

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
