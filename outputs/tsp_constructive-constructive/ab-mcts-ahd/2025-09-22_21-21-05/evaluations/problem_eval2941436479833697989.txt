def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    exploration_factor = max(0.1, 0.6 * (remaining_nodes / len(distance_matrix)))

    candidates = []
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / remaining_nodes
        combined_score = (1 - exploration_factor) * distance_to_current + exploration_factor * (distance_to_destination + 0.3 * centrality)
        candidates.append((node, combined_score))

    candidates.sort(key=lambda x: x[1])
    selected_index = int(min(1, exploration_factor) * len(candidates))
    return next_node
