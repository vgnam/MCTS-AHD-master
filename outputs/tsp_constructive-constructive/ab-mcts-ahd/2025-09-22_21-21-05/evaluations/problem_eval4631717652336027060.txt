def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    weight_factor = max(0.1, 0.5 * (remaining_nodes / total_nodes))

    # Calculate centroid of remaining unvisited nodes
    centroid = 0
    if unvisited_nodes:
        centroid = sum(unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        distance_to_centroid = abs(node - centroid)  # Assuming nodes are numeric; adjust for non-numeric cases

        combined_score = distance_to_current + weight_factor * distance_to_destination + 0.3 * distance_to_centroid

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
