def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    total_unvisited = len(unvisited_nodes)
    avg_distances = [sum(distance_matrix[node][other] for other in unvisited_nodes) / total_unvisited for node in unvisited_nodes]

    for i, node in enumerate(unvisited_nodes):
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 / total_unvisited if total_unvisited > 0 else 0
        combined_score = (distance_to_current * distance_to_destination) + (dynamic_weight * avg_distances[i])

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
