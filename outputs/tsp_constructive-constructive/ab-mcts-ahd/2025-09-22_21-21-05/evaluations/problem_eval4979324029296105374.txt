def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = -float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance_to_remaining = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / num_unvisited if num_unvisited > 0 else 0

        weight = 0.5 + (0.5 * (num_unvisited - 1) / (num_unvisited + 1)) if num_unvisited > 1 else 0.5
        combined_score = (distance_to_current * distance_to_destination) - (weight * avg_distance_to_remaining)

        if combined_score > best_score:
            best_score = combined_score
            next_node = node

    return next_node
