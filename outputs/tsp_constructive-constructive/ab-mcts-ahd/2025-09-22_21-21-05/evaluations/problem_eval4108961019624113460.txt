def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    exploration_factor = 1 - (1 / (1 + remaining_nodes)) if remaining_nodes > 0 else 0.5

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        priority_score = (exploration_factor * distance_to_current) + ((1 - exploration_factor) * distance_to_destination)
        diversity_bonus = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (remaining_nodes - 1) if remaining_nodes > 1 else 0
        combined_score = priority_score - (0.3 * diversity_bonus)

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
