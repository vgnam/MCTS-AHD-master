def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight factor based on remaining nodes
        weight = 1.0 - (remaining_nodes / (remaining_nodes + 1)) ** 2
        total_distance = distance_to_current + (weight * distance_to_destination)

        if total_distance < best_score:
            best_score = total_distance
            next_node = node

    return next_node
