def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    if total_unvisited == 0:
        return destination_node

    current_to_dest = distance_matrix[current_node][destination_node]
    remaining_nodes_factor = (1.0 / (total_unvisited ** 2)) * (current_to_dest / sum(distance_matrix[current_node]))

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        weight = remaining_nodes_factor * (1 - (distance_to_destination / current_to_dest))

        score = (1 - weight) * distance_to_current + weight * (distance_to_destination * (1 + (1 / total_unvisited)))

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
