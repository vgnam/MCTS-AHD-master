def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    centrality = 1.0 / (sum(distance_matrix[current_node]) / len(distance_matrix[current_node]))
    weight_factor = 1.0 - (0.5 * (remaining_nodes / (remaining_nodes + 1))) + 0.2 * centrality

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        exploration_bonus = 1.0 / (1 + sum(distance_matrix[node]))
        combined_score = distance_to_current + weight_factor * distance_to_destination - 0.1 * exploration_bonus

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
