def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = 1.0 - (0.7 / (remaining_nodes + 1))  # Decreasing weight for long-term focus

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        exploration_bonus = 0.2 * (1.0 / (distance_to_current + 1e-9)) * (1.0 / (remaining_nodes + 1e-9))
        utility = (weight * distance_to_destination) - (1 - weight) * distance_to_current + exploration_bonus

        if utility > best_score:
            best_score = utility
            next_node = node

    return next_node
