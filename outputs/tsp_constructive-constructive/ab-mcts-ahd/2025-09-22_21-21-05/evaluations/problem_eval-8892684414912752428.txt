def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    exploration_factor = 0.8 ** (1 / (remaining_nodes + 1))  # Decays from 0.8 to ~0.5
    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / remaining_nodes
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        exploration_potential = (distance_to_current / (distance_to_destination + 1e-6)) * exploration_factor
        combined_score = distance_to_current + exploration_potential * avg_distance_to_dest

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
