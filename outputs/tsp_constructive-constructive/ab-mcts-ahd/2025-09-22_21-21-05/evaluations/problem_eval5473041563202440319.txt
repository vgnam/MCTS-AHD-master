def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    dynamic_weight = 1.0 / (remaining_nodes + 1) if remaining_nodes > 0 else 0.5

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = 1.0 if node in unvisited_nodes else 1.5
        combined_score = (distance_to_current + dynamic_weight * distance_to_destination) * penalty

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    if destination_node in unvisited_nodes:
        destination_score = (distance_matrix[current_node][destination_node] + dynamic_weight * 0) * 1.0
        if destination_score < best_score:
            next_node = destination_node

    return next_node
