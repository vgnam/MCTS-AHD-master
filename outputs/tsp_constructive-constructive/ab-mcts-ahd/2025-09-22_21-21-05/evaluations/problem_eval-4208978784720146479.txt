def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_path_length = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    dynamic_weight = 1 / (1 + math.exp(-(total_path_length - 5)))  # Sigmoid function for dynamic weight

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = (1 - dynamic_weight) * distance_to_current + dynamic_weight * distance_to_destination

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
