def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    nearest_node = None
    destination_in_unvisited = destination_node in unvisited_nodes

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            nearest_node = node

    if not destination_in_unvisited:
        return nearest_node

    destination_distance = distance_matrix[current_node][destination_node]

    if min_distance == 0:
        return destination_node

    savings = (min_distance - destination_distance) / min_distance
    dynamic_threshold = 0.1 + 0.2 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1))

    if savings > dynamic_threshold:
        return destination_node
    else:
        return next_node
