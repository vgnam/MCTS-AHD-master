def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    exploration_weight = 1 / (1 + math.exp(-0.1 * (remaining_nodes - total_nodes/2)))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        connectivity_score = 0
        for n in unvisited_nodes:
            if n != node:
                connectivity_score += distance_matrix[node][n] / (1 + distance_matrix[node][n])
        connectivity_score /= len(unvisited_nodes) if len(unvisited_nodes) > 1 else 1

        combined_score = (1 - exploration_weight) * (distance_to_current + distance_to_destination) + exploration_weight * (1 - connectivity_score)

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
