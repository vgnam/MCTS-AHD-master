def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Penalize nodes that are too far from the current node
        penalty = 0.0 if distance_to_current <= 1.5 * distance_matrix[current_node][destination_node] else 0.2 * distance_to_current

        # Consider average distance to unvisited nodes
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes) / num_unvisited

        combined_score = 0.3 * distance_to_current + 0.7 * distance_to_destination + penalty + 0.1 * avg_distance

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
