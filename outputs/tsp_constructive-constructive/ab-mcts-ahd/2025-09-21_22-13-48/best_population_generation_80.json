"def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):\n    if not unvisited_nodes:\n        return destination_node\n\n    best_score = float('inf')\n    next_node = None\n    remaining_nodes = len(unvisited_nodes)\n    dynamic_weight = 0.5 * (1.0 + 1.0 / (1.0 + remaining_nodes))  # Weight increases as remaining nodes decrease\n\n    for node in unvisited_nodes:\n        immediate_distance = distance_matrix[current_node][node]\n        future_savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]\n        score = immediate_distance - dynamic_weight * future_savings  # Dynamic weighted combination\n\n        if score < best_score:\n            best_score = score\n            next_node = node\n\n    return next_node"