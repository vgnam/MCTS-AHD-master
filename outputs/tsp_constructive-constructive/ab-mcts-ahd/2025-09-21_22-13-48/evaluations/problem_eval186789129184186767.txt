def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        score = distance + 0.5 * dest_distance  # Weighted balance between current and destination distances

        if score < best_score:
            best_score = score
            next_node = node
            min_distance = distance
        elif score == best_score:
            if distance < min_distance:  # Prefer closer nodes if scores are equal
                next_node = node
                min_distance = distance

    return next_node
