def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        # Weighted score: prioritize nodes closer to current node, but also consider distance to destination
        score = distance_to_current + 0.5 * distance_to_destination

        if score < min_score:
            min_score = score
            next_node = node
        elif score == min_score:
            # If multiple nodes have the same minimal score, choose the one closer to the destination
            if distance_to_destination < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
