def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        centrality = sum(distance_matrix[node][other] for other in unvisited_nodes) / len(unvisited_nodes)
        revisit_penalty = 1.0 if node in unvisited_nodes else 0.5
        score = (0.6 * immediate_distance) - (0.4 * centrality) + (0.2 * revisit_penalty)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
