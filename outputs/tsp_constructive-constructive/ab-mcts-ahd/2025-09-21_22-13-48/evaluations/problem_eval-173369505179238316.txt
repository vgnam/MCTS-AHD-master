def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    alpha = 0.6  # Weight for current distance
    beta = 0.4   # Weight for destination distance
    gamma = len(unvisited_nodes) / (len(unvisited_nodes) + 1)  # Dynamic exploration factor

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        score = alpha * current_dist + beta * dest_dist + gamma * (current_dist / (dest_dist + 1e-6))

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
