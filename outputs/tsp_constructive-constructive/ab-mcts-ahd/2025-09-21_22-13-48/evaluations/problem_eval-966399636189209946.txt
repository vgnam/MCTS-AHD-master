def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    unvisited_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        heuristic = distance_matrix[node][destination_node]
        weight = 1.0 + (unvisited_count / len(distance_matrix))  # Dynamic weight
        score = distance + (weight * heuristic)

        if score < min_score:
            min_score = score
            next_node = node
        elif score == min_score:
            if distance < distance_matrix[next_node][current_node]:
                next_node = node

    return next_node
