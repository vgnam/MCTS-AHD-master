def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    proximity_factor = 1.0 / (1.0 + distance_matrix[current_node][destination_node])

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0
        revisit_penalty = 1.0 if node in unvisited_nodes else 0.5
        score = immediate_distance + 0.2 * avg_distance + 0.3 * proximity_factor * revisit_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
