def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        remaining_unvisited = total_unvisited - 1

        if remaining_unvisited > 0:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / remaining_unvisited
            dynamic_weight = 0.2 * (1 + (total_unvisited / (total_unvisited + 1)))
        else:
            avg_distance = distance_matrix[node][destination_node]
            dynamic_weight = 0.1

        score = immediate_distance + dynamic_weight * avg_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
