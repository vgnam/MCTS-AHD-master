def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    dynamic_weight = 0.5 if remaining_nodes > 3 else 0.2

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        penalty = 1.0 if immediate_distance > 2 * sum(distance_matrix[current_node][n] for n in unvisited_nodes) / len(unvisited_nodes) else 0.0
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0
        score = immediate_distance + dynamic_weight * avg_distance + penalty * immediate_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
