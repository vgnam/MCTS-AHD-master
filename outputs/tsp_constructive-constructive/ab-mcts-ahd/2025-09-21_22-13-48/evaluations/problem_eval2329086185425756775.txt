def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]
        ratio = immediate_distance / (distance_matrix[node][destination_node] + 1e-10)
        score = immediate_distance + 0.3 * future_savings + 0.1 * ratio

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
