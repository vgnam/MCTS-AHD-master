def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_immediate = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    avg_immediate = total_immediate / len(unvisited_nodes) if unvisited_nodes else 0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]
        weight = 0.5 + 0.5 * (immediate_distance / (avg_immediate + 1e-6))  # Dynamic weight
        score = immediate_distance - weight * future_savings

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
