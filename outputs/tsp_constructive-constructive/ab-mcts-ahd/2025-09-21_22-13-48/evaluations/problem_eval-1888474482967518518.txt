def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        # Weighted score combining distance to current node and distance to destination
        # Weights are inversely proportional to the number of remaining nodes to balance exploration
        weight_to_current = 0.7 * (remaining_nodes / (remaining_nodes + 1))
        weight_to_destination = 0.3 * (1 - remaining_nodes / (remaining_nodes + 1))

        score = (weight_to_current * distance_matrix[current_node][node] +
                weight_to_destination * distance_matrix[node][destination_node])

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
