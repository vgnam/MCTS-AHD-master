def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        # Weighted score: 70% distance to current node, 30% distance to destination
        score = 0.7 * distance_matrix[current_node][node] + 0.3 * distance_matrix[node][destination_node]

        if score < min_score:
            min_score = score
            next_node = node
        elif score == min_score:
            # If scores are equal, prioritize the node with the smaller distance to destination
            if distance_matrix[node][destination_node] < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
