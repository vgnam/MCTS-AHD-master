def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    current_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]

        # Dynamic weight factor: prioritize nodes closer to the destination more when current node is far from destination
        weight = 1 + (current_to_dest / (current_to_dest + 1e-6))  # Avoid division by zero
        score = distance + weight * dest_distance

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
