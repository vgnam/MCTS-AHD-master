def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0

        if remaining_nodes <= 2:
            weight = 0.2
        elif remaining_nodes <= 5:
            weight = 0.4
        else:
            weight = 0.6

        score = immediate_distance - weight * future_savings + 0.2 * avg_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
