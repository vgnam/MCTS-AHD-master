def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    # Dynamic weight factor based on remaining nodes (higher weight as fewer nodes remain)
    weight_factor = 1.0 - (len(unvisited_nodes) / len(distance_matrix))

    for node in unvisited_nodes:
        # Weighted score: 70% distance to current, 30% distance to destination (adjustable)
        score = (0.7 - 0.3 * weight_factor) * distance_matrix[current_node][node] + \
                (0.3 + 0.3 * weight_factor) * distance_matrix[node][destination_node]

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
