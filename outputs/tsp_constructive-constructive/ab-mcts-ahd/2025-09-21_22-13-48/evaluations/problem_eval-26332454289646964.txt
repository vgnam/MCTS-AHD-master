import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = []
    min_distance = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            candidates = [node]
        elif distance == min_distance:
            candidates.append(node)

    if len(candidates) == 1:
        return candidates[0]

    # Calculate probabilities based on distance to destination
    total_weight = 0.0
    weights = []
    for node in candidates:
        inv_distance = 1.0 / (distance_matrix[node][destination_node] + 1e-10)  # Avoid division by zero
        weights.append(inv_distance)
        total_weight += inv_distance

    probabilities = [w / total_weight for w in weights]

    # Select node based on probabilities
    return next_node
