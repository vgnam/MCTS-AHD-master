def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if unvisited_nodes:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes)
            dynamic_weight = 0.2 / len(unvisited_nodes) if len(unvisited_nodes) > 1 else 0.2
            destination_penalty = distance_matrix[node][destination_node] * (1 / len(unvisited_nodes)) if len(unvisited_nodes) > 1 else 0
        else:
            avg_distance = 0
            dynamic_weight = 0.2
            destination_penalty = 0

        score = immediate_distance + dynamic_weight * avg_distance + destination_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
