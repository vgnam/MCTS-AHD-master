def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if unvisited_nodes:
            avg_future_savings = sum(distance_matrix[node][other] for other in unvisited_nodes) / len(unvisited_nodes)
        else:
            avg_future_savings = 0
        score = immediate_distance - 0.3 * avg_future_savings
        ratio = immediate_distance / (avg_future_savings + 1e-10)

        combined_score = score * ratio

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
