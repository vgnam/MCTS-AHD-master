def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, alpha=0.5):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        score = alpha * distance_to_current + (1 - alpha) * distance_to_dest

        if score < min_score:
            min_score = score
            next_node = node
        elif score == min_score:
            # Tie-breaking: choose the node with the smallest average distance to all unvisited nodes
            avg_distance_node = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
            avg_distance_next = sum(distance_matrix[next_node][n] for n in unvisited_nodes) / len(unvisited_nodes)
            if avg_distance_node < avg_distance_next:
                next_node = node

    return next_node
