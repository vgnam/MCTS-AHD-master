def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            best_score = float('-inf')
            next_node = node
        elif distance == min_distance:
            if unvisited_nodes:
                avg_future_savings = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes)
            else:
                avg_future_savings = 0
            dist_to_dest = distance_matrix[current_node][destination_node]
            weight = 0.7 if dist_to_dest < 1.0 else 0.3
            score = weight * avg_future_savings

            if score > best_score:
                best_score = score
                next_node = node

    return next_node
