def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]

        if node_to_dest == 0:
            continue

        remaining_distance = distance_matrix[current_node][destination_node]
        weight = 1 + (remaining_distance / (remaining_distance + node_to_dest))

        hub_score = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                hub_score = max(hub_score, distance_matrix[node][other_node])

        score = (weight * (1 / node_to_dest)) - (current_to_node / (hub_score + 1))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
