def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    exploration_weight = 0.3 if total_unvisited <= 2 else 0.1

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if unvisited_nodes:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes)
        else:
            avg_distance = 0

        penalty = 0.1 * immediate_distance if node in unvisited_nodes and immediate_distance > 1.5 * sum(distance_matrix[current_node][n] for n in unvisited_nodes) / len(unvisited_nodes) else 0
        score = immediate_distance + exploration_weight * avg_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
