def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]
        score = immediate_distance - 0.55 * future_savings

        if immediate_distance < min_distance:
            min_distance = immediate_distance
            next_node = node
        elif immediate_distance == min_distance:
            current_score = distance_matrix[current_node][node] - 0.55 * (distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node])
            best_score = distance_matrix[current_node][next_node] - 0.55 * (distance_matrix[next_node][destination_node] - distance_matrix[current_node][destination_node])
            if current_score < best_score:
                next_node = node

    return next_node
