def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    weight_immediate = 1.0 if num_unvisited > 2 else 0.7
    weight_future = 0.5 if num_unvisited > 2 else 0.8

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]
        detour_penalty = max(0, immediate_distance - distance_matrix[current_node][destination_node])
        score = (weight_immediate * immediate_distance) - (weight_future * future_savings) + (0.3 * detour_penalty)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
