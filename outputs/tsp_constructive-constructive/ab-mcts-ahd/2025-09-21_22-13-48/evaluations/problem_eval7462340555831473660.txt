def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    weight_current = 1.0 / (1.0 + total_unvisited)  # Decrease weight as more nodes remain
    weight_destination = 1.0 - weight_current

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = (weight_current * distance_to_current) + (weight_destination * distance_to_destination)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node
        elif combined_score == min_score:
            if distance_to_destination < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
