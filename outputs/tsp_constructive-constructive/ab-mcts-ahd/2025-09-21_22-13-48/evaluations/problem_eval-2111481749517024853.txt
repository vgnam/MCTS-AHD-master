def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(distance_matrix)
    progress = (total_nodes - len(unvisited_nodes)) / total_nodes
    weight_immediate = 1.0 - 0.5 * progress
    weight_future = 0.5 + 0.5 * progress

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_savings = distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]
        revisit_penalty = 1.0 if node in [current_node, destination_node] else 0.0
        score = (weight_immediate * immediate_distance) - (weight_future * future_savings) + revisit_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
