def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    node_selection_count = {}

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if unvisited_nodes:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes)
            dynamic_weight = 0.2 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1))
            penalty = node_selection_count.get(node, 0) * 0.1
        else:
            avg_distance = 0
            dynamic_weight = 0
            penalty = 0

        score = immediate_distance + dynamic_weight * avg_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    if next_node in node_selection_count:
        node_selection_count[next_node] += 1
    else:
        node_selection_count[next_node] = 1

    return next_node
