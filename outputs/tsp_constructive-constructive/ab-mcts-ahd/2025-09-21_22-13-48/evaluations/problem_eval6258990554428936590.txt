def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    progress = 1 - (len(unvisited_nodes) / len(distance_matrix))
    weight = 0.2 + 0.6 * progress

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0
        penalty = 0.1 * distance_matrix[node][current_node] if node in unvisited_nodes else 0
        score = immediate_distance + weight * avg_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
