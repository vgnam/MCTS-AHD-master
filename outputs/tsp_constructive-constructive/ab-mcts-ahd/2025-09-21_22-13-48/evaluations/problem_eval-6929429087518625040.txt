def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if remaining_nodes > 1:
            distances_to_unvisited = [distance_matrix[node][other] for other in unvisited_nodes if other != node]
            avg_distance = sum(distances_to_unvisited) / (remaining_nodes - 1)
            variance = sum((d - avg_distance) ** 2 for d in distances_to_unvisited) / (remaining_nodes - 1)

            if remaining_nodes <= 2:
                weight = 0.2
            elif remaining_nodes <= 5:
                weight = 0.4
            else:
                weight = 0.6

            score = immediate_distance + weight * avg_distance + 0.1 * variance
        else:
            score = immediate_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
