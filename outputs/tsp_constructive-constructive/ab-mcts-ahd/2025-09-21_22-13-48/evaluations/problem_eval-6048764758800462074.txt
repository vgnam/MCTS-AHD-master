def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if remaining_nodes > 1:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (remaining_nodes - 1)
            penalty = 0.1 * (remaining_nodes / (remaining_nodes + 1)) * immediate_distance
        else:
            avg_distance = 0
            penalty = 0

        weight_immediate = 0.7 - 0.4 * (remaining_nodes / len(distance_matrix))
        weight_avg = 0.3 + 0.4 * (remaining_nodes / len(distance_matrix))

        score = (weight_immediate * immediate_distance) + (weight_avg * avg_distance) - penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
