def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    exploration_weight = 1 / (1 + math.exp(-(remaining_nodes - 5)))  # Sigmoid function to adjust weight
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if remaining_nodes > 1:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (remaining_nodes - 1)
        else:
            avg_distance = 0
        score = immediate_distance + exploration_weight * avg_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
