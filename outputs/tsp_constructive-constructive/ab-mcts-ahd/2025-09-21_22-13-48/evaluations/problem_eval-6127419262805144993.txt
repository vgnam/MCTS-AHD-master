def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Weighted score: prioritize closer nodes early, then balance with destination proximity
        weight_current = 0.7 if remaining_nodes > 2 else 0.3
        weight_destination = 1.0 - weight_current
        score = (weight_current * distance_to_current) + (weight_destination * distance_to_destination)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
