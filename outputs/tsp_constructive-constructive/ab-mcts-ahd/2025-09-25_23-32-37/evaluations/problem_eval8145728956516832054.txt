def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        if node == destination_node:
            return node

        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]

        # Dynamic weighting based on remaining nodes (increasing influence of long-term choices)
        weight = 0.5 + (0.5 * (1 - (remaining_nodes / (remaining_nodes + 1))))
        combined_score = current_to_node + weight * node_to_dest

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
