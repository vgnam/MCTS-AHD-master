def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    destination_distance = distance_matrix[current_node][destination_node] if destination_node in unvisited_nodes else float('inf')

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] < min_distance:
            min_distance = distance_matrix[current_node][node]
            next_node = node

    if next_node is None:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    selection_prob = 0.5 + (0.5 * (1 / (remaining_nodes + 1)))

    if np.random.random() < selection_prob and destination_node in unvisited_nodes:
        return destination_node
    else:
        return next_node
