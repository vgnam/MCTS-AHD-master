import random
    selected_node = random.choices([node for node, _ in normalized_scores], weights=probabilities, k=1)[0]

    if remaining_nodes > 2 and random.random() < 0.2:
        candidate_nodes = [node for node in unvisited_nodes if node != selected_node]
        if candidate_nodes:
            candidate_scores = [(node, distance_matrix[current_node][node] + distance_matrix[node][selected_node]) for node in candidate_nodes]
            best_candidate = min(candidate_scores, key=lambda x: x[1])[0]
            if distance_matrix[current_node][best_candidate] < 1.2 * distance_matrix[current_node][selected_node]:
                selected_node = best_candidate

    return next_node
