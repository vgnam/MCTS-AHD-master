def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    heuristic_weight = 0.5 / (1 + 0.1 * num_unvisited)  # Dynamic weight based on remaining nodes

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        heuristic = distance_matrix[node][destination_node] if destination_node != node else 0
        score = distance + heuristic_weight * heuristic

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
