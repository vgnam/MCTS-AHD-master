def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    probabilities = []
    total_weight = 0.0

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        weight = distance ** 2
        if node == destination_node:
            weight *= 2  # Higher weight for destination
        probabilities.append(weight)
        total_weight += weight

    if total_weight == 0:
        return unvisited_nodes[0]

    normalized_probs = [w / total_weight for w in probabilities]
    next_node = np.random.choice(unvisited_nodes, p=normalized_probs)

    return next_node
