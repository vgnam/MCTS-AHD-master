import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes[0]

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    avg_distance = sum(distances) / len(distances)

    temperature = 0.5
    momentum = 0.2

    min_cost = float('inf')
    next_node = None
    nearest_node = None

    for node in unvisited_nodes:
        cost = distance_matrix[current_node][node]
        if cost < min_cost:
            min_cost = cost
            nearest_node = node

    if nearest_node is None:
        return unvisited_nodes[0]

    candidates = [node for node in unvisited_nodes if distance_matrix[current_node][node] <= avg_distance + 1.0]
    if candidates:
        if random.random() < temperature:
            next_node = random.choice(candidates)
        else:
            next_node = nearest_node

        if random.random() < momentum and len(unvisited_nodes) > 2:
            recent_candidates = sorted(candidates, key=lambda x: distance_matrix[current_node][x])
            if recent_candidates:
                next_node = recent_candidates[0]
    else:
        next_node = nearest_node

    return next_node
