def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    distances = []
    for node in unvisited_nodes:
        distances.append(distance_matrix[current_node][node])

    min_dist = min(distances)
    max_dist = max(distances)

    if min_dist == max_dist:
        return random.choice(unvisited_nodes)

    probabilities = [(max_dist - dist) / (max_dist - min_dist) for dist in distances]
    probabilities = [p / sum(probabilities) for p in probabilities]

    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
