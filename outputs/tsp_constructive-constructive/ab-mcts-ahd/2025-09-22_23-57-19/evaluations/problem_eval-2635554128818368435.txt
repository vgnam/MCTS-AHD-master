def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    exploration_factor = 0.5 + 0.5 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1))
    weights = []
    total_weight = 0.0

    for node in unvisited_nodes:
        cost = distance_matrix[current_node][node]
        weight = (1 / cost) ** exploration_factor
        weights.append(weight)
        total_weight += weight

    if total_weight == 0:
        return unvisited_nodes.pop()

    rand_val = random.random() * total_weight
    cumulative_weight = 0.0

    for i, node in enumerate(unvisited_nodes):
        cumulative_weight += weights[i]
        if rand_val <= cumulative_weight:
            return node

    return next_node
