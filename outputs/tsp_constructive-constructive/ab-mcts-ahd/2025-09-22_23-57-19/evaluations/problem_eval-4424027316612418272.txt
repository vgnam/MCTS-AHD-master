import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        if random.random() < 0.7:  # Higher probability to select destination if unvisited
            return destination_node

    probabilities = []
    total_weight = 0.0

    for node in unvisited_nodes:
        if node == destination_node:
            weight = 1.0 / (distance_matrix[current_node][node] + 1e-10) * 1.5  # Higher weight for destination
        else:
            weight = 1.0 / (distance_matrix[current_node][node] + 1e-10)
        probabilities.append(weight)
        total_weight += weight

    probabilities = [w / total_weight for w in probabilities]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]

    return next_node
