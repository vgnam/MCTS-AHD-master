def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    exploration_factor = 0.3  # Weight for exploration incentive
    destination_priority = 1.0  # Priority weight for destination

    if destination_node in unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        exploration_incentive = distance * exploration_factor
        total_score = destination_priority * (node == destination_node) + exploration_incentive

        if total_score > max_score:
            max_score = total_score
            next_node = node

    return next_node
