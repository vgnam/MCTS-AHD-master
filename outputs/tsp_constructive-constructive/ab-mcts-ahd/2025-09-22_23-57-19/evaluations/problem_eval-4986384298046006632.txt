def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None

    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        proximity_to_dest = 1 / (1 + distance_matrix[node][destination_node])

        dynamic_weight = 0.5 + 0.5 * (1 - (total_unvisited / (total_unvisited + 2)))
        score = (distance_to_current * 0.7) + (dynamic_weight * proximity_to_dest * 0.3)

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
