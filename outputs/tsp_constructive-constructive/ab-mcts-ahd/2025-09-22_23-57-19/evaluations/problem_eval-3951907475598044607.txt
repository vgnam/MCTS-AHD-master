def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    scores = []
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        score = distance_to_node + 0.5 * distance_to_destination
        scores.append((node, score))

    scores.sort(key=lambda x: x[1])
    next_node = scores[0][0]

    if next_node is not None:
        return next_node

    farthest_node = None
    max_distance = -float('inf')

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] > max_distance:
            max_distance = distance_matrix[current_node][node]
            farthest_node = node

    return next_node
