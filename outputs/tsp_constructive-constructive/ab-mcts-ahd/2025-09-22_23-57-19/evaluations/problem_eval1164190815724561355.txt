def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    best_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        score = distance_matrix[current_node][node] - 0.5 * distance_matrix[node][destination_node]
        if score > best_score:
            best_score = score
            best_node = node

    if best_node is not None:
        return best_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] < min_distance:
            min_distance = distance_matrix[current_node][node]
            next_node = node

    return next_node
