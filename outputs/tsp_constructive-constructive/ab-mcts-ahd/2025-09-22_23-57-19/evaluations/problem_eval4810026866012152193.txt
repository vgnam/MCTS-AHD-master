def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    avg_distance = sum(distances) / len(distances)

    max_distance = -float('inf')
    next_node = None

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] > max_distance:
            max_distance = distance_matrix[current_node][node]
            next_node = node

    if len(unvisited_nodes) > 2:
        for node in unvisited_nodes:
            if node == next_node:
                continue
            cost = distance_matrix[current_node][node]
            if cost < avg_distance * 1.3:
                next_node = node
                break
    else:
        min_distance = float('inf')
        for node in unvisited_nodes:
            if distance_matrix[current_node][node] < min_distance:
                min_distance = distance_matrix[current_node][node]
                next_node = node

    return next_node
