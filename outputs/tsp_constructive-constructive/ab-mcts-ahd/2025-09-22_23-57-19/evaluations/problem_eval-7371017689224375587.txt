def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    remaining_distance_to_dest = distance_matrix[current_node][destination_node]
    dynamic_weight = 0.1 + 0.9 * (1 - remaining_distance_to_dest / (remaining_distance_to_dest + 1))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        penalty = 0
        if distance_to_current > 2 * remaining_distance_to_dest:
            penalty += 0.5 * distance_to_current
        if distance_to_dest > 2 * remaining_distance_to_dest:
            penalty += 0.5 * distance_to_dest

        score = distance_to_current + dynamic_weight * distance_to_dest + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
