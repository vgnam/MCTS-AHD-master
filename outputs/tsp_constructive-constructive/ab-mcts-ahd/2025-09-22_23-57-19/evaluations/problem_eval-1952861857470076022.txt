def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    min_cost = float('inf')
    next_node = None
    threshold = 1.2 if len(unvisited_nodes) > 2 else 1.0

    for node in unvisited_nodes:
        cost = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 2:
            lookahead_nodes = [n for n in unvisited_nodes if n != node]
            if lookahead_nodes:
                min_lookahead = min(distance_matrix[node][n] for n in lookahead_nodes)
                total_cost = cost + min_lookahead * 0.5
            else:
                total_cost = cost
        else:
            total_cost = cost

        if total_cost < min_cost * threshold:
            min_cost = total_cost
            next_node = node

    return next_node
