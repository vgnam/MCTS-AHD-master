def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        proximity_to_dest = 1 / (1 + distance_matrix[node][destination_node])
        random_factor = random.uniform(0.9, 1.1)  # Introduces randomness
        revisit_penalty = 1 if node in unvisited_nodes else 1.5  # Penalizes revisits
        score = distance_to_current * (1 - 0.2 * proximity_to_dest) * random_factor * revisit_penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
