def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    dest_distance = distance_matrix[current_node][destination_node]

    if dest_distance > sum(distance_matrix[current_node][n] for n in unvisited_nodes) / len(unvisited_nodes):
        min_distance = float('inf')
        next_node = None
        for node in unvisited_nodes:
            if distance_matrix[current_node][node] < min_distance:
                min_distance = distance_matrix[current_node][node]
                next_node = node
    else:
        max_distance = -float('inf')
        next_node = None
        for node in unvisited_nodes:
            if distance_matrix[current_node][node] > max_distance:
                max_distance = distance_matrix[current_node][node]
                next_node = node

    return next_node
