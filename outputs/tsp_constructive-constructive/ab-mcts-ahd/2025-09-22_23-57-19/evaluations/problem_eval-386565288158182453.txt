def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    max_distance = -float('inf')
    next_node = None
    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance > max_distance and distance > 0.5 * avg_distance_to_dest:
            max_distance = distance
            next_node = node

    if next_node is None:
        next_node = max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    return next_node
