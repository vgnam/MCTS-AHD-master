def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    min_score = float('inf')
    next_node = None
    penalty = 1.5 if current_node in unvisited_nodes else 1.0

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        heuristic = distance_matrix[node][destination_node] if destination_node != node else 0
        score = distance + 0.3 * heuristic * penalty

        if score < min_score:
            min_score = score
            next_node = node

    if next_node is None:
        return unvisited_nodes.pop()

    return next_node
