def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    avg_distance = sum(distances) / len(distances)

    max_distance = -float('inf')
    farthest_node = None

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] > max_distance:
            max_distance = distance_matrix[current_node][node]
            farthest_node = node

    if len(unvisited_nodes) > 2:
        threshold = avg_distance * (1.2 + 0.1 * (len(unvisited_nodes) / len(distance_matrix)))
        candidates = [node for node in unvisited_nodes if distance_matrix[current_node][node] < threshold and node != farthest_node]
        if candidates:
            next_node = candidates[0]
            return next_node

    return next_node
