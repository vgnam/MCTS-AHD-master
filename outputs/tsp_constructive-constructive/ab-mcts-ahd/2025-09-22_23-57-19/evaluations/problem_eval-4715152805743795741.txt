def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    weights = []
    total_weight = 0.0

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        weight = (1.0 / distance) * (1.0 + 0.1 * random.random())
        weights.append(weight)
        total_weight += weight

    if total_weight > 0:
        rand_val = random.random() * total_weight
        cumulative_weight = 0.0
        for i, node in enumerate(unvisited_nodes):
            cumulative_weight += weights[i]
            if rand_val <= cumulative_weight:
                return node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] < min_distance:
            min_distance = distance_matrix[current_node][node]
            next_node = node

    return next_node
