def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        proximity_to_dest = 1 / (1 + distance_matrix[node][destination_node])
        dynamic_weight = 0.5 * (1 - (remaining_nodes / (remaining_nodes + 1)))
        weighted_score = -distance_to_current + dynamic_weight * proximity_to_dest

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node

    return next_node
