def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    farthest_node = None
    max_distance = -float('inf')
    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] > max_distance:
            max_distance = distance_matrix[current_node][node]
            farthest_node = node
        if distance_matrix[current_node][node] < min_distance:
            min_distance = distance_matrix[current_node][node]
            next_node = node

    if farthest_node is not None:
        return farthest_node

    return next_node
