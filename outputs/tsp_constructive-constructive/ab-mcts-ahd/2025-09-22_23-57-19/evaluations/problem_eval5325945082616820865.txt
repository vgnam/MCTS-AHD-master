def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)
    normalized_distances = [(max_dist - dist) / (max_dist - min_dist) if max_dist != min_dist else 1.0 for dist in distances]
    probabilities = [dist / sum(normalized_distances) for dist in normalized_distances]
    next_node = np.random.choice(unvisited_nodes, p=probabilities)

    return next_node
