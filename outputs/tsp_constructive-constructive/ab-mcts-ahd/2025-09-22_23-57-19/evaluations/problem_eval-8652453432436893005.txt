import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    avg_distance = sum(distances) / len(distances)
    min_cost = min(distances)
    candidates = []

    for node in unvisited_nodes:
        cost = distance_matrix[current_node][node]
        if cost <= min_cost * 1.3:
            candidates.append((node, cost))

    if not candidates:
        return random.choice(unvisited_nodes)

    temperature = max(1, len(unvisited_nodes) / 10)
    weights = [math.exp(-cost / temperature) for (_, cost) in candidates]
    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]

    next_node = random.choices([node for (node, _) in candidates], weights=probabilities)[0]
    return next_node
