def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    scores = {}
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        dist_to_node = distance_matrix[current_node][node]
        dist_to_dest = distance_matrix[node][destination_node]
        weight = 0.5 + 0.2 * (remaining_nodes / len(unvisited_nodes))
        score = (dist_to_node * weight) + (dist_to_dest * (1 - weight)) / (remaining_nodes + 1)
        scores[node] = score

    if scores:
        next_node = max(scores, key=scores.get)
        return next_node

    return next_node
