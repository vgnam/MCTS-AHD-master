defaulting to the closest node if no farther option exists, ensuring a balance between exploration and proximity.}

```python
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    max_distance = -float('inf')
    next_node = None

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] > max_distance:
            max_distance = distance_matrix[current_node][node]
            next_node = node

    if next_node is not None:
        return next_node

    min_distance = float('inf')
    closest_node = None

    for node in unvisited_nodes:
        if distance_matrix[current_node][node] < min_distance:
            min_distance = distance_matrix[current_node][node]
            closest_node = node

    return next_node
