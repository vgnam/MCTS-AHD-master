def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    alpha = 0.7  # Weighting factor for local distance (0.7 gives more weight to distance)

    for node in unvisited_nodes:
        local_distance = distance_matrix[current_node][node]
        global_centrality = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0
        score = alpha * local_distance + (1 - alpha) * global_centrality

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
