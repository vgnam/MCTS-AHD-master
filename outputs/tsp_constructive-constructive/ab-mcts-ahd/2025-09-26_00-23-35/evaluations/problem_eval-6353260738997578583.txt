def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        weight_immediate = 0.4 + 0.6 * (remaining_nodes / total_nodes)
        weight_long_term = 0.6 * (1 - (remaining_nodes / total_nodes))
        penalty = 1.3 if distance_to_node > 2 * distance_to_destination else 1.0
        node_penalty = 1.1 if node == destination_node else 1.0
        score = weight_immediate * distance_to_node + weight_long_term * distance_to_destination * penalty * node_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
