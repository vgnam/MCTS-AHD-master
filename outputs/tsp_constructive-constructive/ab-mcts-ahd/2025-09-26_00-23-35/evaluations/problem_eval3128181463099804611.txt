def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    num_unvisited = len(unvisited_nodes)
    dynamic_weight = 1.0 / (1.0 + 0.1 * num_unvisited)  # Adjusts weight based on remaining nodes

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        score = (1.5 - dynamic_weight) * distance_to_node + (0.5 + dynamic_weight) * distance_to_destination
        score += 0.01 * random.random()  # Small random perturbation

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
