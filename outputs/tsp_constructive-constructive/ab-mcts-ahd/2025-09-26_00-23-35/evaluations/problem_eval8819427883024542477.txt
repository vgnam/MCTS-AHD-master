def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    density_factor = (len(unvisited_nodes) / total_nodes) ** 2 if total_nodes > 0 else 0
    destination_bias = 0.5 + (0.5 * (1 - density_factor))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        adaptive_weight = min(1.0, 2.0 * (distance_to_destination / max(distance_matrix[node])))
        score = (distance_to_node * (1 - destination_bias)) + (distance_to_destination * destination_bias * adaptive_weight)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
