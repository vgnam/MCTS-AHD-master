def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        # Dynamic weight based on remaining nodes
        weight = 0.5 * (1 + 0.5 ** (remaining_nodes - 1))

        # Non-linear penalty for distance to destination
        combined_score = distance_to_node + weight * (distance_to_dest ** 1.2)

        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
