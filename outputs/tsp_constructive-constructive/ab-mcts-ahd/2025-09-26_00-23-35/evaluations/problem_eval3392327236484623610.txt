def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # Including current_node

    # Dynamic weight adjustment
    if remaining_nodes > 0:
        weight_immediate = 0.7 - (0.4 * remaining_nodes / total_nodes)
        weight_future = 0.3 + (0.4 * remaining_nodes / total_nodes)
    else:
        weight_immediate = 0.7
        weight_future = 0.3

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        score = weight_immediate * distance_to_node + weight_future * avg_future_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
