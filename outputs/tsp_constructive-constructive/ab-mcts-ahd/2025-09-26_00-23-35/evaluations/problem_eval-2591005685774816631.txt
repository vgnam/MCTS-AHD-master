def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # +1 to include current_node

    # Dynamic weights based on remaining nodes
    local_weight = 0.9 * (remaining_nodes / total_nodes)
    global_weight = 0.1 + 0.9 * (1 - remaining_nodes / total_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        score = local_weight * distance_to_node + global_weight * distance_to_dest

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
