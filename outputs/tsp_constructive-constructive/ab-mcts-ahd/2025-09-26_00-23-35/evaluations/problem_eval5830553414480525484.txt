def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_steps = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        distance_to_current = distance_matrix[current_node][node]

        weight_destination = 2.5 / remaining_steps if remaining_steps > 0 else 2.5
        weight_avg = 0.5 * (1 - (1 / (1 + remaining_steps)))

        score = weight_destination * distance_to_destination + weight_avg * avg_distance
        penalty = 1.5 * distance_to_current if distance_to_current > 1.5 * sum(distance_matrix[current_node][n] for n in unvisited_nodes) / len(unvisited_nodes) else 0
        score += penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
