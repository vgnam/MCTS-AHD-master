def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        nearby_nodes = [n for n in unvisited_nodes if distance_matrix[node][n] < 1.5 * distance_to_node and n != node]
        connectivity = len(nearby_nodes) / max(1, num_unvisited - 1)
        avg_distance_to_dest = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)

        proximity_weight = 1.2 * (1 + (1 - num_unvisited / len(distance_matrix)) * 0.7)
        connectivity_weight = 0.8 * connectivity
        history_factor = 1.0 if node != destination_node else 1.5

        score = -proximity_weight * distance_to_node + connectivity_weight * avg_distance_to_dest * history_factor

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
