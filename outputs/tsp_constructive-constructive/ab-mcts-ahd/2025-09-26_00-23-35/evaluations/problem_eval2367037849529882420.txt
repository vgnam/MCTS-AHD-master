def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (1 + remaining_nodes) ** 0.5
    weights = []

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weight = (1.0 / (distance_to_current + 1e-6)) * (1.0 / (distance_to_dest + 1e-6)) ** temperature
        weights.append(weight)

    total_weight = sum(weights)
    probabilities = [w / total_weight for w in weights]
    next_node = np.random.choice(unvisited_nodes, p=probabilities)

    return next_node
