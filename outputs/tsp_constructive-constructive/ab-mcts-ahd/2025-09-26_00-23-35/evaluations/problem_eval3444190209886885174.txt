def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    num_unvisited = len(unvisited_nodes)
    proximity_weight = 0.6 * (num_unvisited / (num_unvisited + 1)) + 0.4
    centrality_weight = 0.4 * (num_unvisited / (num_unvisited + 1)) + 0.6
    indirect_weight = 0.3 * (1 - num_unvisited / (num_unvisited + 1))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        distance_to_dest = distance_matrix[node][destination_node]
        proximity_score = -distance_to_node
        centrality_score = avg_distance
        indirect_score = distance_to_dest

        score = proximity_weight * proximity_score + centrality_weight * centrality_score + indirect_weight * indirect_score

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
