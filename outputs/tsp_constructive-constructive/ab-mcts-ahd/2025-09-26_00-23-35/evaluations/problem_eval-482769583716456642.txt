def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    num_unvisited = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    visited_ratio = (total_nodes - num_unvisited) / total_nodes

    weight_proximity = 0.6 * (1 - visited_ratio) + 0.4 * visited_ratio
    weight_future = 0.4 * (1 - visited_ratio) + 0.6 * visited_ratio
    weight_destination = 0.2 * visited_ratio

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, num_unvisited - 1)
        distance_to_destination = distance_matrix[node][destination_node]

        score = (weight_proximity * distance_to_node +
                 weight_future * avg_future_distance +
                 weight_destination * distance_to_destination)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
