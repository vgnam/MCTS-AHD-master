def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if remaining_nodes == 0:
            weight = 0.0
        else:
            centrality = sum(distance_matrix[node]) / (total_nodes - 1)
            weight = (1.0 / remaining_nodes) * (1.0 - centrality / max(sum(distance_matrix[0]) / (total_nodes - 1), 1e-6))

        score = (distance_to_node + weight * distance_to_destination) / (1 + weight)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
