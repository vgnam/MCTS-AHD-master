def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    num_unvisited = len(unvisited_nodes)
    weight_proximity = 1.0 * (num_unvisited / (num_unvisited + 1)) + 0.5
    weight_destination = 0.5 * (num_unvisited / (num_unvisited + 1)) + 0.3
    weight_centrality = 0.3 * (num_unvisited / (num_unvisited + 1)) + 0.7

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        score = weight_proximity * distance_to_node + weight_destination * distance_to_destination + weight_centrality * avg_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
