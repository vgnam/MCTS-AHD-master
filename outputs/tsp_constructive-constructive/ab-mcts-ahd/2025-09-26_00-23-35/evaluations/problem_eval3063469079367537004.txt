import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    min_distance = float('inf')
    nearest_node = None
    dest_distance = distance_matrix[current_node][destination_node]
    temperature = 1.0 / (len(unvisited_nodes) + 1)  # Decreases as nodes are visited

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            nearest_node = node

    if nearest_node == destination_node:
        return nearest_node

    # Calculate bias based on distance ratio and temperature
    bias = (min_distance / (dest_distance + 1e-6)) * (1.0 - temperature)
    prob = min(0.7, max(0.1, bias))  # Clamp between 0.1 and 0.7

    if random.random() < prob or (random.random() < 0.2 and temperature < 0.5):
        return destination_node if destination_node in unvisited_nodes else nearest_node
    else:
        return next_node
