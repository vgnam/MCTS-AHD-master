def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)

    if not unvisited_nodes:
        return destination_node

    centroid = sum(unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = abs(node - centroid)

        weight = 0.3 + 0.7 * (remaining_nodes / total_nodes)
        penalty = 1.0 + (distance_to_node / (distance_to_destination + 1e-6)) * (centrality / (total_nodes + 1e-6))
        score = distance_to_node + weight * distance_to_destination * penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
