def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    unvisited_count = len(unvisited_nodes)
    total_nodes = len(distance_matrix)

    if unvisited_count == 0:
        return destination_node

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        local_density = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < distance_to_node) / max(1, unvisited_count - 1)
        destination_distance = distance_matrix[node][destination_node]

        exploration_weight = (unvisited_count / total_nodes) ** 2
        exploitation_weight = 1 - exploration_weight

        score = (exploration_weight * (distance_to_node + 0.2 * local_density) +
                 exploitation_weight * (destination_distance + 0.1 * distance_to_node))

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
