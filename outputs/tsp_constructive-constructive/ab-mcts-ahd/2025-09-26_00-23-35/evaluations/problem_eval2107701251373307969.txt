def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weighting based on remaining nodes
        weight_current = 1.0 if remaining_nodes > 2 else 1.5
        weight_destination = 0.5 if remaining_nodes > 2 else 0.3

        # Penalty for nodes too close to current node
        penalty = 0.2 * distance_to_current if distance_to_current < 0.1 * sum(distance_matrix[current_node]) else 0

        combined_score = (weight_current * distance_to_current) + (weight_destination * distance_to_destination) + penalty

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
