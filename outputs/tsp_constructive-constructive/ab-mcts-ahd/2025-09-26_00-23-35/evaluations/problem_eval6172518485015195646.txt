def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        closest_unvisited_distance = min(distance_matrix[node][n] for n in unvisited_nodes if n != node)

        # Dynamic weight adjustment using sigmoid function
        weight_immediate = 1.0 / (1.0 + math.exp(-(remaining_nodes - 5)))
        weight_destination = 1.0 - weight_immediate

        score = (weight_immediate * distance_to_node +
                 weight_destination * (0.7 * distance_to_destination + 0.3 * closest_unvisited_distance))

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
