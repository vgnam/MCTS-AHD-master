import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + 0.1 * remaining_nodes)  # Dynamic weight based on remaining nodes

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = max(0, distance_to_node - 2 * distance_matrix[current_node][destination_node])
        score = (1.5 * distance_to_node + 0.5 * distance_to_destination) * weight_factor + penalty
        score += random.uniform(-0.1, 0.1)  # Small random perturbation

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
