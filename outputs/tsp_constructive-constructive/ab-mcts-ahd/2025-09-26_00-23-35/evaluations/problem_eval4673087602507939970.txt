def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_unvisited = len(unvisited_nodes)
    distance_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, total_unvisited - 1)
        dynamic_weight = 0.2 + 0.5 * (distance_to_dest / (distance_matrix[node][destination_node] + 1e-6))
        penalty = 0.1 * (distance_matrix[node][destination_node] - distance_to_dest) if distance_matrix[node][destination_node] > distance_to_dest else 0
        score = distance_to_node + dynamic_weight * avg_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
