def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        connectivity_penalty = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < distance_to_node * 0.7) / len(unvisited_nodes)

        dynamic_weight = 0.5 if len(unvisited_nodes) > 5 else 0.3
        score = (distance_to_node + dynamic_weight * distance_to_destination) / (1 + connectivity_penalty)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
