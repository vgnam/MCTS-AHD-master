def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    num_unvisited = len(unvisited_nodes)
    dynamic_weight = min(0.9, 0.2 + 0.7 * (1 - num_unvisited / len(distance_matrix)))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(1 / (distance_matrix[node][other] + 1e-6) for other in unvisited_nodes if other != node)
        score = (1 - dynamic_weight) * (1 / distance_to_node) + dynamic_weight * (1 / distance_to_destination) + 0.1 * centrality

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
