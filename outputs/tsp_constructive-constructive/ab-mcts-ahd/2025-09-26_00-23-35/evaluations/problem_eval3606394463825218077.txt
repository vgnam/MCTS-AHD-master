def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, total_unvisited - 1)
        connectivity = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < 1.5 * avg_distance) / max(1, total_unvisited - 1)
        distance_to_dest = distance_matrix[node][destination_node]
        adjustment_factor = (total_unvisited / (total_unvisited + 1)) ** 2

        score = (-2.0 * distance_to_node + 0.8 * avg_distance * connectivity - 0.3 * distance_to_dest * adjustment_factor) * (1.0 / (1.0 + 0.1 * distance_to_dest))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
