def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    decay_factor = 0.5 ** (1 - remaining_nodes / len(distance_matrix))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        local_weight = 0.8 * decay_factor
        global_weight = 0.2 * (1 - decay_factor)
        score = local_weight * (1 / distance_to_node) + global_weight * (1 / distance_to_destination)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
