def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weight = 0.5 / (1 + remaining_nodes)  # Dynamic weight based on remaining nodes
        penalty = 0.1 * (distance_to_node - min(distance_matrix[current_node][n] for n in unvisited_nodes))
        score = distance_to_node + weight * distance_to_destination + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
