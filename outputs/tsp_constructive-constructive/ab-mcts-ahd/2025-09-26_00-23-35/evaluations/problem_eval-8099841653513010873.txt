def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if len(unvisited_nodes) == 1:
        return unvisited_nodes[0] if unvisited_nodes[0] != destination_node else destination_node

    nearest_node = None
    min_distance = float('inf')
    dest_distance = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            nearest_node = node

    if nearest_node == destination_node:
        return nearest_node

    ratio = min_distance / (dest_distance + 1e-6)
    prob_nearest = np.exp(-ratio)
    prob_dest = np.exp(ratio)

    if np.random.rand() < prob_nearest:
        return nearest_node
    else:
        return next_node
