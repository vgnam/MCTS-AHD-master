def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight factor based on remaining nodes
        weight_factor = 1.0 + (remaining_nodes / (remaining_nodes + 1))

        # Penalty term for nodes too far from current node
        penalty = 0.0 if distance_to_node <= 1.5 * sum(distance_matrix[current_node]) / len(distance_matrix) else 0.2

        score = (weight_factor * 1.5 * distance_to_node) + (0.5 * distance_to_destination) + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
