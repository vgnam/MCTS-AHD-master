def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_distance = float('inf')
    dest_distance = distance_matrix[current_node][destination_node]
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    if next_node != destination_node and num_unvisited > 1:
        weight_proximity = 0.6 + 0.4 * (num_unvisited / (num_unvisited + 1))
        weight_future = 0.4 * (1 - (num_unvisited / (num_unvisited + 1)))
        score = weight_proximity * min_distance + weight_future * dest_distance
        bias_factor = min_distance / (dest_distance + 1e-6)

        if bias_factor > 0.5 or (score > 1.2 * dest_distance and destination_node in unvisited_nodes):
            next_node = destination_node

    return next_node
