def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    unvisited_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, unvisited_count - 1)
        proximity_weight = 2.0 / (1 + 0.2 * unvisited_count)
        diversity_penalty = 0.3 * (avg_distance - distance_matrix[current_node][node])
        score = proximity_weight * (1 / distance_to_destination) - diversity_penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
