def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        global_avg = sum(distance_matrix[node][n] for n in unvisited_nodes) / max(1, len(unvisited_nodes))
        dest_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.4 - 0.1 * remaining_ratio
        penalty = 0.2 * dest_distance if dest_distance > 1.5 * global_avg else 0
        score = distance_to_node + dynamic_weight * global_avg + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
