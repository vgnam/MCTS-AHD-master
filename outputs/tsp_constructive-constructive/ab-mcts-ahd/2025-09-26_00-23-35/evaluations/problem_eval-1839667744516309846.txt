def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic scaling factor based on remaining path length and current node's proximity
        remaining_steps = len(unvisited_nodes)
        proximity_factor = 1 / (1 + distance_matrix[current_node][destination_node])
        scaling_factor = (remaining_steps ** 0.5) * proximity_factor

        # Combine immediate and heuristic-driven distances
        heuristic_distance = distance_to_node + (scaling_factor * distance_to_destination)

        if heuristic_distance < min_score:
            min_score = heuristic_distance
            next_node = node

    return next_node
