def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weighting factor based on remaining nodes
        weight_factor = 1.0 if remaining_nodes <= 2 else 0.5

        # Penalty for nodes that are too far from current node
        penalty = 1.5 if distance_to_current > 2 * distance_matrix[current_node][destination_node] else 1.0

        combined_score = (distance_to_current * penalty) + (weight_factor * distance_to_destination)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
