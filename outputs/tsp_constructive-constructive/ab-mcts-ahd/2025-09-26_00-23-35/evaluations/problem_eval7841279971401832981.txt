def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # +1 for the current node

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight adjustment based on remaining nodes
        weight_proximity = 0.6 * (remaining_nodes / total_nodes)
        weight_destination = 0.4 * (1 - (remaining_nodes / total_nodes))
        score = weight_proximity * distance_to_node + weight_destination * distance_to_destination

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
