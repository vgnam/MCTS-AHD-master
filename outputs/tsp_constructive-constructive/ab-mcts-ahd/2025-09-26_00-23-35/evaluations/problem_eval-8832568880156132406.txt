def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    step = len(unvisited_nodes)  # Dynamic weight adjustment
    weight = max(0.3, 0.7 - 0.05 * (10 - step))  # Decrease weight over steps

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = 0.1 * (node in unvisited_nodes)  # Penalty for frequent visits
        score = distance_to_node + weight * distance_to_destination + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
