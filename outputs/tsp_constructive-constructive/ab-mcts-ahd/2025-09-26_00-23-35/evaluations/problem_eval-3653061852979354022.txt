def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)

        # Dynamic weight based on remaining nodes
        weight = 0.5 if total_unvisited > 5 else 0.8
        # Penalty for outliers (nodes with extreme distance to current node)
        penalty = max(0, distance_to_node - 2 * avg_distance)

        score = distance_to_node + weight * avg_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
