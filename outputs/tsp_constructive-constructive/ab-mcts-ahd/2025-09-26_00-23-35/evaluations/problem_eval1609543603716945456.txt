def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_distance = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weighting using sigmoid function
        weight = 1 / (1 + math.exp(-0.1 * (remaining_nodes - 5)))
        score = (1 - weight) * distance_to_node + weight * distance_to_destination

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
