def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')

    # Dynamic heuristic factor based on remaining nodes
    heuristic_factor = 0.5 + 0.4 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1))  # Adjusts between 0.5 and 0.9

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Normalized progress factor
        progress_factor = 1 - (distance_to_destination / max(distance_matrix[node]))

        # Weighted score with dynamic heuristic
        score = (heuristic_factor * (1 / distance_to_node)) + ((1 - heuristic_factor) * progress_factor)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
