def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_path_length = 0

    for node in unvisited_nodes:
        total_path_length += distance_matrix[current_node][node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)

        remaining_ratio = len(unvisited_nodes) / max(1, len(unvisited_nodes) - 1)
        weighted_destination = 0.3 * remaining_ratio * distance_to_destination
        weighted_avg = -0.4 * remaining_ratio * avg_distance

        score = distance_to_node + weighted_destination + weighted_avg

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
