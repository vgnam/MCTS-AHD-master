def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight adjustment with aggressive transition
        weight_immediate = max(0.3, 1.0 * (remaining_nodes / total_nodes))
        weight_long_term = 1.0 - weight_immediate
        score = weight_immediate * distance_to_node + weight_long_term * distance_to_destination

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
