def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]

        if remaining_count <= 2:
            weight_immediate = 0.9
            weight_future = 0.1
        else:
            weight_immediate = 0.6
            weight_future = 0.4

        avg_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, remaining_count - 1)

        distances_to_unvisited = [distance_matrix[node][n] for n in unvisited_nodes if n != node]
        if distances_to_unvisited:
            median_future_distance = sorted(distances_to_unvisited)[len(distances_to_unvisited) // 2]
            penalty = abs(avg_future_distance - median_future_distance) * 0.2
        else:
            penalty = 0

        score = weight_immediate * distance_to_node + weight_future * avg_future_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
