def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    num_unvisited = len(unvisited_nodes)
    weight_proximity = 0.6 * (num_unvisited / (num_unvisited + 1))
    weight_future = 0.3 * (1 - (num_unvisited / (num_unvisited + 1)))
    weight_centrality = 0.1 * (1 - (num_unvisited / (num_unvisited + 1)))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, num_unvisited - 1)
        avg_centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / max(1, num_unvisited)
        score = weight_proximity * distance_to_node + weight_future * avg_future_distance + weight_centrality * (1 / (avg_centrality + 1e-6))

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
