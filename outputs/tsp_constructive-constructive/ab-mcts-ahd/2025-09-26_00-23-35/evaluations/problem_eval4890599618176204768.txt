def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    weight_proximity = 0.5
    weight_centrality = 0.3
    weight_destination_penalty = 0.2

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        avg_distance_to_dest = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        centrality_score = avg_distance_to_dest
        destination_penalty = distance_matrix[node][destination_node]

        score = -weight_proximity * distance_to_node + weight_centrality * centrality_score - weight_destination_penalty * destination_penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
