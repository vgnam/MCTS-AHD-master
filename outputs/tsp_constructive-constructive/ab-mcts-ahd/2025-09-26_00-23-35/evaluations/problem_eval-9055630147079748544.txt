def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    current_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        proximity_weight = 1.0 / (1 + distance_to_destination)  # Higher weight if closer to destination
        exploration_weight = 1.0 / (1 + remaining_nodes)  # Decreases as more nodes are visited
        weighted_score = (1 - proximity_weight) * distance_to_node + proximity_weight * distance_to_destination
        score = weighted_score * exploration_weight

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
