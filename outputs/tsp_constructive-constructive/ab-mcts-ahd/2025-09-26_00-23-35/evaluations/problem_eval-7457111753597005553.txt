def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Calculate dynamic weight based on remaining nodes
        weight = 0.5 + 0.5 * (remaining_nodes / (remaining_nodes + 1))

        # Adjust score by considering node density
        nearby_nodes = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < distance_to_node * 1.5)
        score = distance_to_node + weight * distance_to_destination - 0.3 * nearby_nodes

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
