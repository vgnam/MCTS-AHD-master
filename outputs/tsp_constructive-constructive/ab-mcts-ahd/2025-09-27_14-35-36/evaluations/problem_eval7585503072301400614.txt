def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    num_unvisited = len(unvisited_nodes)
    recent_nodes = {current_node}  # Simulate recent nodes for demonstration

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        penalty = 1 if node not in recent_nodes else 2
        harmonic_mean = 2 / ((1 / distance_to_node) + (1 / (distance_to_dest / num_unvisited)))
        score = harmonic_mean / penalty

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes and num_unvisited <= 3:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.8:
            next_node = destination_node

    return next_node
