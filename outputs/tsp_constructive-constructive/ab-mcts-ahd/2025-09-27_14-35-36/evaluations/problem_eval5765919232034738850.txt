def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes_factor = 1 / len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        visited_neighbors = [n for n in unvisited_nodes if n in distance_matrix[node] and n != node]
        penalty = len(visited_neighbors) * 0.05
        if distance_to_node == 0:
            score = float('-inf')
        else:
            score = (1 / distance_to_node) + (1 / distance_to_dest) * remaining_nodes_factor - penalty

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < 0.8 * distance_matrix[current_node][next_node]:
            next_node = destination_node

    return next_node
