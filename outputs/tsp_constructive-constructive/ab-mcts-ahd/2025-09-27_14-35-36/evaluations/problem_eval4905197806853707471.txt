defaults to the closest unvisited node, always prioritizing the destination if unvisited and closer than the chosen candidate.}

```python
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    max_distance = float('-inf')
    closest_node = None
    farthest_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            closest_node = node
        if distance > max_distance:
            max_distance = distance
            farthest_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < min_distance:
            return destination_node

    if farthest_node and max_distance > 1.5 * min_distance:
        return farthest_node
    else:
        return next_node
