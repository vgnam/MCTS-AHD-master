def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    exploration_weight = 0.3
    exploitation_weight = 0.7

    candidates = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        random_factor = random.random()
        score = exploitation_weight * distance + exploration_weight * random_factor
        candidates.append((node, score))

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        dest_random = random.random()
        dest_score = exploitation_weight * dest_distance + exploration_weight * dest_random
        candidates.append((destination_node, dest_score))

    next_node = max(candidates, key=lambda x: x[1])[0]
    return next_node
