def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    distance_to_dest_from_current = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        if distance_to_node + distance_to_dest == 0:
            score = float('-inf')
        else:
            harmonic_mean = 2 / ((1 / distance_to_node) + (1 / distance_to_dest))
            proximity_factor = distance_to_dest / distance_to_dest_from_current
            score = harmonic_mean * proximity_factor - (distance_to_node / distance_to_dest_from_current)

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node]:
            next_node = destination_node

    return next_node
