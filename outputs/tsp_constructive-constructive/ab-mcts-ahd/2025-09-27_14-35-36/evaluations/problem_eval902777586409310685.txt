import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if random.random() < 0.5:  # 50% chance to use random selection
        next_node = random.choice(list(unvisited_nodes))
    else:  # 50% chance to use nearest neighbor with a twist
        candidates = []
        for node in unvisited_nodes:
            distance_to_current = distance_matrix[current_node][node]
            distance_to_destination = distance_matrix[node][destination_node]
            candidates.append((node, distance_to_current - 0.2 * distance_to_destination))

        next_node = min(candidates, key=lambda x: x[1])[0]

    return next_node
