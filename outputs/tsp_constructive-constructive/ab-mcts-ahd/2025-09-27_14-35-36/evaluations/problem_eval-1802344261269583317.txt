def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    remaining_nodes_factor = remaining_nodes / len(distance_matrix)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        if distance_to_node == 0:
            score = float('-inf')
        else:
            geometric_mean = (distance_to_node * distance_to_dest) ** 0.5
            penalty = 1 / (distance_to_node ** 2)
            weight = (remaining_nodes / (remaining_nodes + 1)) ** 2
            score = geometric_mean * penalty * weight * (1 / (1 + distance_to_node * remaining_nodes_factor))

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.75:
            next_node = destination_node

    return next_node
