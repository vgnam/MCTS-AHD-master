import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    scores = []

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weight = remaining_nodes / (remaining_nodes + 2)
        score = weight * (1 / (1 + distance_to_node)) + (1 - weight) * (1 / (1 + distance_to_dest))
        exp_score = math.exp(-distance_to_node / (avg_distance * 2)) * score
        scores.append(exp_score)

    total_score = sum(scores)
    normalized_scores = [score / total_score for score in scores]
    next_node = random.choices(list(unvisited_nodes), weights=normalized_scores, k=1)[0]
    return next_node
