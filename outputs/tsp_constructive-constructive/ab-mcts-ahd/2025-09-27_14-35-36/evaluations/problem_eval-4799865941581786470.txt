def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = min(1.0, (remaining_nodes / (remaining_nodes + 2)) ** 2)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        proximity_weight = 1 / (1 + distance_to_node)
        alignment_weight = 1 / (1 + distance_to_dest)
        randomness = random.random() * exploration_factor
        score = (proximity_weight * 0.6 + alignment_weight * 0.3 + randomness * 0.1) * (1 + exploration_factor)

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        if remaining_nodes <= 2 or random.random() < 0.2 * exploration_factor:
            next_node = destination_node

    return next_node
