def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        if distance_to_node == 0:
            score = float('-inf')
        else:
            distance_ratio = distance_to_node / distance_to_dest
            penalty = 1 / (distance_to_node * distance_to_dest)
            weight = 0.7 if distance_to_dest < distance_matrix[current_node][destination_node] else 0.3
            score = (weight * distance_ratio) + ((1 - weight) * penalty)

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][destination_node]
        if direct_distance < distance_matrix[current_node][next_node]:
            next_node = destination_node

    return next_node
