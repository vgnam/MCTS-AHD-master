import random
        if random.random() < 0.3:  # 30% chance to explore
            scores.sort(key=lambda x: x[1])
            selected = random.choice(scores[:3])  # Pick from bottom 3 scores
            return selected[0]

    # Default to highest score
    scores.sort(key=lambda x: x[1], reverse=True)
    next_node = scores[0][0]

    # Prioritize destination if significantly closer
    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.75:
            next_node = destination_node

    return next_node
