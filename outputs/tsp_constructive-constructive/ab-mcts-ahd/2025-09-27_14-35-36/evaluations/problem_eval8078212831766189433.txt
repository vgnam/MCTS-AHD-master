def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)

    distance_variance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes
    weight = (remaining_nodes + 5) / (remaining_nodes + 15) * (1 - (distance_matrix[current_node][destination_node] / distance_variance))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        score = weight * (1 / (distance_to_node + 1)) + (1 - weight) * (1 / (distance_to_dest + 1))

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.6:
            next_node = destination_node

    return next_node
