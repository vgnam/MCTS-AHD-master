def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        potential_distance = sum(distance_matrix[node][unvisited] for unvisited in unvisited_nodes if unvisited != node) / remaining_nodes
        weight_factor = 0.5 * remaining_nodes / (remaining_nodes + 1)
        score = distance_to_node + weight_factor * potential_distance

        if score < best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node] + sum(distance_matrix[destination_node][unvisited] for unvisited in unvisited_nodes if unvisited != destination_node) / remaining_nodes
        if dest_distance < best_score:
            next_node = destination_node

    return next_node
