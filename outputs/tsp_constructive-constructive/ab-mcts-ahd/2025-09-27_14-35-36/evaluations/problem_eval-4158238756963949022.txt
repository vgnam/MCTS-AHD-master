import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    max_distance = max(distances) if distances else 1.0
    normalized_distances = [d / max_distance for d in distances]

    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (1.0 + math.exp(-(remaining_nodes - 5)))  # Sigmoid-based dynamic temperature

    probabilities = [math.exp(-d / temperature) for d in normalized_distances]
    normalized_probabilities = [p / sum(probabilities) for p in probabilities]

    next_node = random.choices(list(unvisited_nodes), weights=normalized_probabilities, k=1)[0]
    return next_node
