import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances_to_next = [distance_matrix[current_node][node] for node in unvisited_nodes]
    distances_to_destination = [distance_matrix[node][destination_node] for node in unvisited_nodes]
    combined_distances = [d1 + d2 for d1, d2 in zip(distances_to_next, distances_to_destination)]
    probabilities = [1 / (d + 1) for d in combined_distances]  # Adding 1 to avoid division by zero
    total_probability = sum(probabilities)
    normalized_probabilities = [p / total_probability for p in probabilities]

    next_node = random.choices(list(unvisited_nodes), weights=normalized_probabilities, k=1)[0]
    return next_node
