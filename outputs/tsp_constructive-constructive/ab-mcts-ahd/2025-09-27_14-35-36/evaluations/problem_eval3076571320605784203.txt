def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + 0.1 * remaining_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        proximity_score = 1.0 / (distance_to_node + 1e-6)
        directness_score = distance_to_dest / (distance_to_node + distance_to_dest + 1e-6)
        score = weight_factor * (proximity_score + directness_score)

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        dest_score = (1.0 / (dest_distance + 1e-6)) * (1.0 + 0.5 * (len(unvisited_nodes) / (len(distance_matrix) - 1)))
        if dest_score > best_score:
            next_node = destination_node

    return next_node
