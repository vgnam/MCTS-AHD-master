def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    penalty_factor = 1 - (remaining_nodes / (remaining_nodes + 5))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_start = distance_matrix[node][current_node]
        weight = remaining_nodes / (remaining_nodes + 1)
        score = weight * (distance_to_start / distance_to_node) * (1 - penalty_factor) + (1 - weight) * (1 / (1 + distance_to_node))

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        adaptive_threshold = 0.7 + (0.1 * (remaining_nodes / len(distance_matrix)))
        if dest_distance < distance_matrix[current_node][next_node] * adaptive_threshold:
            next_node = destination_node

    return next_node
