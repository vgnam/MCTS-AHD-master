def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_score = float('inf')
    weight = 0.6  # Adjust weight for balancing current proximity and destination alignment

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weighted_score = weight * distance_to_current + (1 - weight) * distance_to_dest

        if weighted_score < min_weighted_score:
            min_weighted_score = weighted_score
            next_node = node

    if destination_node in unvisited_nodes and distance_matrix[current_node][destination_node] < min_weighted_score:
        next_node = destination_node

    return next_node
