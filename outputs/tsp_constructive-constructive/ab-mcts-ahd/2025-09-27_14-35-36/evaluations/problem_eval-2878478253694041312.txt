def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    # Calculate cumulative distance for tie-breaking
    cumulative_distances = {node: distance_matrix[current_node][node] for node in unvisited_nodes}
    min_distance = min(cumulative_distances.values())
    closest_nodes = [node for node, dist in cumulative_distances.items() if dist == min_distance]

    # If there's a tie, choose the node that has the smallest total distance to all unvisited nodes
    if len(closest_nodes) > 1:
        total_distances = {node: sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) for node in closest_nodes}
        next_node = min(total_distances, key=total_distances.get)
    else:
        next_node = closest_nodes[0]

    return next_node
