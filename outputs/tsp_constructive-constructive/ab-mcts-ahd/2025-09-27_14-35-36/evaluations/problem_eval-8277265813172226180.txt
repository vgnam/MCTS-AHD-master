def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes_factor = len(unvisited_nodes) / len(distance_matrix)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        node_score = (1 / (1 + (distance_to_node ** 2 * remaining_nodes_factor))) * (1 / (1 + distance_to_dest))
        score = node_score + (1 - node_score) * (distance_to_dest / distance_matrix[current_node][destination_node])

        if score > best_score:
            best_score = score
            next_node = node

    adaptive_threshold = 0.7 + 0.3 * (1 - len(unvisited_nodes) / len(distance_matrix))
    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * adaptive_threshold:
            next_node = destination_node

    return next_node
