def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    total_nodes = len(distance_matrix)
    unvisited_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        if distance_to_node == 0 or distance_to_dest == 0:
            score = float('-inf')
        else:
            sum_of_squares = distance_to_node**2 + distance_to_dest**2
            inverse_sum_of_squares = 1 / sum_of_squares
            penalty = (unvisited_count / total_nodes) ** 0.5
            score = inverse_sum_of_squares * (1 - penalty)

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.85:
            next_node = destination_node

    return next_node
