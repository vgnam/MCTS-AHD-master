import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    total_nodes = len(distance_matrix)
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = math.exp(-remaining_nodes / total_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        density_factor = (total_nodes - remaining_nodes) / total_nodes
        score = (1 / (distance_to_node * (1 + exploration_factor))) * (1 / (distance_to_dest * (1 + density_factor)))
        scores.append((node, score))

    total_score = sum(score for node, score in scores)
    probabilities = [score / total_score for node, _ in scores]

    next_node = random.choices([node for node, _ in scores], probabilities, k=1)[0]
    return next_node
