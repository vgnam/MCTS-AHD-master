def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / num_unvisited
    dynamic_urgency = (num_unvisited / (num_unvisited + 1)) * (1 + avg_distance_to_dest / distance_matrix[current_node][destination_node])

    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        penalty = max(0, (distance_to_node - avg_distance_to_dest) / avg_distance_to_dest)
        score = distance_to_node + dynamic_urgency * distance_to_dest + penalty
        if score < best_score:
            best_score = score
            next_node = node

    return next_node
