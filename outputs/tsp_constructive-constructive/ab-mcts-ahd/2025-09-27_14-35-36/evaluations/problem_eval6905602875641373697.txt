def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    total_score = 0.0

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        exploration_bonus = 1 / (1 + 0.1 * len(unvisited_nodes))
        score = (distance_to_dest / distance_to_node) * exploration_bonus
        scores.append((node, score))
        total_score += score

    if not scores:
        return destination_node

    if destination_node in unvisited_nodes:
        dest_score = next(s for n, s in scores if n == destination_node)
        if dest_score > 0.7 * total_score:
            return destination_node

    selected_node = None
    threshold = random.random() * total_score
    cumulative = 0.0

    for node, score in scores:
        cumulative += score
        if cumulative >= threshold:
            selected_node = node
            break

    return next_node
