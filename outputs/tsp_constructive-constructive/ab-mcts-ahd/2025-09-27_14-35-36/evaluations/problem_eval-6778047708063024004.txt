import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    dest_distances = [distance_matrix[node][destination_node] for node in unvisited_nodes]
    unvisited_count = len(unvisited_nodes)
    avg_distance = sum(distances) / unvisited_count

    adjusted_dest = [(d ** 0.5) * (unvisited_count / (unvisited_count + 2)) for d in dest_distances]
    scores = [(1 / (dist + 1e-10)) * 0.7 + adj * 0.3 for dist, adj in zip(distances, adjusted_dest)]
    total_score = sum(scores)
    normalized_scores = [score / total_score for score in scores]

    next_node = random.choices(list(unvisited_nodes), weights=normalized_scores, k=1)[0]
    return next_node
