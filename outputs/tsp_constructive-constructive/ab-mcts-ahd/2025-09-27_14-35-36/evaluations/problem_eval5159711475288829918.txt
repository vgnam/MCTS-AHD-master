def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weight = (15 - remaining_nodes) / 15
        proximity_weight = 1 / (1 + distance_to_node)
        adjusted_dest = (distance_to_dest ** 0.5) * (remaining_nodes / (remaining_nodes + 2))
        score = weight * (2 / (proximity_weight + adjusted_dest))

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < avg_distance * 0.7:
            next_node = destination_node

    return next_node
