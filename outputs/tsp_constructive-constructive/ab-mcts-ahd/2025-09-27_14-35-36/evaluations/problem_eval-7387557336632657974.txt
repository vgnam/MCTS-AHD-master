import math
    from random import random

    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    temperature = 0.1  # Initial temperature parameter

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        # Penalty for revisiting nodes (assuming no revisits are possible here)
        penalty = 1.0

        # Include temperature in the score calculation
        score = (distance_to_dest / (distance_to_node + 1e-6)) * penalty
        probability = math.exp(score / temperature)

        if random() < probability or score > best_score:
            best_score = score
            next_node = node

    # Gradually decrease temperature
    temperature *= 0.99

    # Ensure destination is checked explicitly
    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node]:
            next_node = destination_node

    return next_node
