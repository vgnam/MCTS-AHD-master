def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes_factor = 1 - (len(unvisited_nodes) / len(distance_matrix))
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        if distance_to_node == 0:
            score = float('-inf')
        else:
            weighted_distance = (0.4 * distance_to_node + 0.6 * distance_to_dest)
            penalty = (1 / distance_to_node) * (1 + (avg_distance / distance_to_dest))
            score = (1 / weighted_distance) * penalty * remaining_nodes_factor

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.7:
            next_node = destination_node

    return next_node
