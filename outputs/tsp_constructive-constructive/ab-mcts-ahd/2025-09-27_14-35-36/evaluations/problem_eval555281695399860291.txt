def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        hub_factor = sum(1 for other in unvisited_nodes if other != node and distance_matrix[node][other] < distance_to_node * 1.5)
        weight = 0.4 * (1 / (1 + distance_to_node)) + 0.3 * (hub_factor / total_unvisited) - 0.3 * (distance_to_dest / sum(distance_matrix[node][other] for other in unvisited_nodes))

        if weight > best_score:
            best_score = weight
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.8:
            next_node = destination_node

    return next_node
