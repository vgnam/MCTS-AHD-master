def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = 0.5  # Fixed exploration factor

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weight = exploration_factor * (remaining_nodes / (remaining_nodes + distance_to_node))
        score = weight * (1 / (1 + distance_to_node)) + (0.5 * (1 / (1 + distance_to_dest)))

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.5:
            next_node = destination_node
        elif remaining_nodes <= 3 and random.random() < 0.5:
            next_node = destination_node

    return next_node
