def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    weight = remaining_nodes / (remaining_nodes + 10)  # Adjusted weight factor

    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        ratio = distance_to_node / avg_distance
        score = weight * (distance_to_dest / distance_to_node) + (1 - weight) * (1 / ratio)

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.75:
            next_node = destination_node

    return next_node
