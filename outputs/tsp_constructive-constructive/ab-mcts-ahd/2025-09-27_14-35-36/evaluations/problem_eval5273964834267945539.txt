import random
import numpy as np

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / num_unvisited
    weight = 1 / (1 + num_unvisited)

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    penalties = [(distance - avg_distance) ** 2 for distance in distances]
    probabilities = np.array([(1 / distance) * weight * (1 / (1 + penalty)) for distance, penalty in zip(distances, penalties)])
    probabilities /= probabilities.sum()

    next_node = random.choices(list(unvisited_nodes), weights=probabilities, k=1)[0]
    return next_node
