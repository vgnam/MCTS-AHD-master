def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + 0.1 * remaining_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        if node == destination_node:
            score = 1.0 - (distance_to_node / (distance_matrix[current_node][destination_node] * 2.0))
        else:
            score = (1.0 / (1.0 + distance_to_dest)) * (1.0 / (1.0 + distance_to_node ** 2)) * weight_factor

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        threshold = distance_matrix[current_node][next_node] * 0.7
        if dest_distance < threshold:
            if np.random.rand() < 0.7:
                next_node = destination_node

    return next_node
