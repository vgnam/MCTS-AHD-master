import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    decay_factor = max(0.1, len(unvisited_nodes) / len(distance_matrix))
    
    if random.random() < decay_factor:  # Random selection with decay factor probability
        next_node = random.choice(list(unvisited_nodes))
    else:  # Nearest neighbor with consideration to destination
        next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node] + 0.5 * distance_matrix[node][destination_node])
    
    return next_node
