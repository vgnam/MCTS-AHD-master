import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if random.random() < 0.3:  # 30% chance to use random selection
        next_node = random.choice(list(unvisited_nodes))
    else:  # 70% chance to use weighted scoring
        best_score = float('-inf')
        next_node = None
        for node in unvisited_nodes:
            distance_to_node = distance_matrix[current_node][node]
            distance_to_dest = distance_matrix[node][destination_node]
            proximity_weight = 1 / (1 + distance_to_node)
            destination_influence = 0.5 * (distance_to_dest / (1 + distance_to_node))
            score = proximity_weight + destination_influence

            if score > best_score:
                best_score = score
                next_node = node

    return next_node
