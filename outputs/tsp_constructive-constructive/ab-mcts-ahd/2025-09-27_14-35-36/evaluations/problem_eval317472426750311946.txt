def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, time_factor=0.5):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_priority = float('inf')

    for node in unvisited_nodes:
        base_distance = distance_matrix[current_node][node]
        heuristic_factor = (1 + time_factor) ** list(unvisited_nodes).index(node)
        priority = base_distance * heuristic_factor
        if priority < min_priority:
            min_priority = priority
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        dest_priority = dest_distance * (1 + time_factor) ** list(unvisited_nodes).index(destination_node) if destination_node in unvisited_nodes else float('inf')
        if dest_priority < min_priority:
            next_node = destination_node

    return next_node
