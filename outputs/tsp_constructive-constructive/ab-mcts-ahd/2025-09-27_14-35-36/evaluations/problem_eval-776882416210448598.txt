def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    exploration_factor = len(unvisited_nodes) / (len(unvisited_nodes) + 1)  # Dynamic factor
    heuristic_factor = 0.6 * exploration_factor  # Balanced weight for distance
    next_node = min(unvisited_nodes, key=lambda node: (heuristic_factor * distance_matrix[current_node][node] + (1 - heuristic_factor) * (node % 100)))
    return next_node
