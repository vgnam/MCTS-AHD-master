import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    temperature = 1.0 / (1 + num_unvisited)

    scores = []
    nodes = []

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        if distance_to_node == 0:
            continue

        base_score = (distance_to_dest / distance_to_node) * (1 / (1 + distance_to_node))
        exploration_bias = random.uniform(0, 1) * temperature
        score = base_score + exploration_bias

        if destination_node in unvisited_nodes and node == destination_node:
            score *= 1.5

        scores.append(score)
        nodes.append(node)

    if not nodes:
        return destination_node

    selected_node = nodes[scores.index(max(scores))]

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        min_distance = min([distance_matrix[current_node][node] for node in unvisited_nodes])
        if dest_distance < min_distance * 0.7:
            selected_node = destination_node

    return next_node
