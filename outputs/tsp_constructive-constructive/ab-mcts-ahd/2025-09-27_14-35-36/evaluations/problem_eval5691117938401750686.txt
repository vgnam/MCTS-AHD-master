def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        max_distance_to_visited = max([distance_matrix[node][n] for n in unvisited_nodes if n != node] or [0])

        if distance_to_node == 0:
            score = float('-inf')
        else:
            score = (1 / (1 + math.log(1 + distance_to_node))) * (1 / (1 + distance_to_dest)) * (1 + max_distance_to_visited)

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < distance_matrix[current_node][next_node] * 0.8:
            next_node = destination_node

    return next_node
