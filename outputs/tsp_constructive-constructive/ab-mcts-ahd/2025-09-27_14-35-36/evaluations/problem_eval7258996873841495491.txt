import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        remaining_nodes_factor = len(unvisited_nodes) / len(distance_matrix)
        score = 1 / ((distance_to_node + distance_to_dest) * remaining_nodes_factor)
        scores.append((node, score))

    # Introduce randomness to avoid getting stuck in local optima
    if random.random() < 0.2:  # 20% chance to explore randomly
        next_node = random.choice(unvisited_nodes)
    else:
        total_score = sum(score for node, score in scores)
        probabilities = [score / total_score for node, score in scores]
        next_node = random.choices([node for node, _ in scores], probabilities, k=1)[0]

    return next_node
