def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_start = distance_matrix[node][destination_node]
        penalty = max(0, (distance_to_node - 10) / 10) if distance_to_node > 10 else 0
        reward = (1 / (1 + distance_to_start)) * (remaining_nodes / (remaining_nodes + 1))
        score = reward - penalty

        if score > best_score:
            best_score = score
            next_node = node

    if current_node in unvisited_nodes:
        start_distance = distance_matrix[current_node][next_node]
        if distance_matrix[current_node][next_node] * 0.8 > distance_matrix[current_node][current_node]:
            next_node = current_node

    return next_node
