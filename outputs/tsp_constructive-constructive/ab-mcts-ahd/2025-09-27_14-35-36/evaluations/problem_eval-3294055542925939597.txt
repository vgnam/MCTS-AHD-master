import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_dist = min(distances)
    max_dist = max(distances)

    if min_dist == max_dist:
        return random.choice(list(unvisited_nodes))

    probabilities = [math.exp(-(dist - min_dist) / (max_dist - min_dist)) for dist in distances]
    total_prob = sum(probabilities)
    normalized_probs = [p / total_prob for p in probabilities]

    next_node = random.choices(list(unvisited_nodes), weights=normalized_probs, k=1)[0]
    return next_node
