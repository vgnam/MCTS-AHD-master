import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    unvisited_count = len(unvisited_nodes)
    scores = []
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        proximity_weight = 1 / (distance_to_node + 1)
        destination_influence = (unvisited_count / (unvisited_count + 1)) * (distance_to_dest / (distance_to_node + 1))
        score = (proximity_weight * 0.7) + (destination_influence * 0.3)
        scores.append(score)

    total_score = sum(scores)
    normalized_scores = [s / total_score for s in scores]

    next_node = random.choices(list(unvisited_nodes), weights=normalized_scores, k=1)[0]
    return next_node
