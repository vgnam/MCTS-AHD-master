def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_distance = float('-inf')
    min_distance = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance > max_distance:
            max_distance = distance
            next_node = node
        if distance < min_distance:
            min_distance = distance

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        if dest_distance < max_distance and dest_distance < min_distance:
            return destination_node

    if max_distance - min_distance > 0.5 * max_distance and destination_node in unvisited_nodes:
        return destination_node

    if min_distance < max_distance:
        next_node = min([node for node in unvisited_nodes], key=lambda x: distance_matrix[current_node][x])

    return next_node
