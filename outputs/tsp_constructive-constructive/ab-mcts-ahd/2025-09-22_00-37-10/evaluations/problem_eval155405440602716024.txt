def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(unvisited_nodes) + 1  # Including current node
    progress = remaining_nodes / total_nodes  # Normalized progress (0 to 1)

    # Sigmoid function to smoothly transition from short-term to long-term focus
    sigmoid = 1 / (1 + math.exp(-10 * (progress - 0.5)))
    weight = sigmoid * 0.8 + 0.2  # Weight ranges between 0.2 (early) and 1.0 (late)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_distance - weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
