def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Dynamic weighting: prioritize immediate distance early, then balance with lookahead
        weight_immediate = 0.7 if total_unvisited > len(unvisited_nodes) / 2 else 0.5
        weight_lookahead = 1 - weight_immediate

        score = weight_immediate * immediate_distance + weight_lookahead * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
