def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)

    gamma = 0.5 * (remaining_nodes / total_nodes)  # Moderate focus on proximity
    delta = 0.7 * (1 - remaining_nodes / total_nodes)  # Stronger focus on detour reduction

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        detour = distance_matrix[current_node][node] + distance_matrix[node][destination_node] - distance_matrix[current_node][destination_node]

        # Proximity: distance to destination
        proximity = distance_matrix[node][destination_node]

        # Score combines immediate distance, detour, and proximity
        score = immediate_distance + gamma * proximity - delta * detour

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
