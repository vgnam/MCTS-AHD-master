def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Additional lookahead to the next potential node
        secondary_lookahead = min(distance_matrix[node][n] for n in unvisited_nodes if n != node and n != destination_node) if unvisited_nodes - {node, destination_node} else 0

        score = 0.8 * immediate_distance + 0.6 * lookahead_distance + 0.3 * secondary_lookahead

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
