import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        progress_factor = (total_unvisited - len(unvisited_nodes)) / total_unvisited if total_unvisited > 0 else 0
        bias_factor = math.exp(-progress_factor * len(unvisited_nodes))
        penalty = 1.0 if node in unvisited_nodes else 1.5  # Penalize revisits

        score = (-current_distance / (1 + progress_factor)) + (bias_factor * dest_distance) / penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
