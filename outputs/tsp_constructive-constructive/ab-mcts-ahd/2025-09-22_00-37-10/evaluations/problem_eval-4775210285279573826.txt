def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    median_distance = sorted(distances)[len(distances) // 2] if distances else 0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        dynamic_weight = min(0.7, 0.5 * (immediate_distance / median_distance)) if median_distance > 0 else 0.5
        score = immediate_distance + dynamic_weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
