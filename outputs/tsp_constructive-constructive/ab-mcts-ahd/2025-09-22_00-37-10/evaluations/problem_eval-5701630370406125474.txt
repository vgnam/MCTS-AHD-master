def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        bias_factor = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
        lookahead_score = 0

        if len(unvisited_nodes) > 1:
            remaining_nodes = [n for n in unvisited_nodes if n != node]
            next_lookahead_node = None
            min_lookahead_distance = float('inf')

            for next_node_candidate in remaining_nodes:
                distance = distance_matrix[node][next_node_candidate]
                if distance < min_lookahead_distance:
                    min_lookahead_distance = distance
                    next_lookahead_node = next_node_candidate

            if next_lookahead_node is not None:
                lookahead_score = -min_lookahead_distance + bias_factor * distance_matrix[next_lookahead_node][destination_node]

        score = -current_distance + bias_factor * dest_distance + lookahead_score

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
