def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Secondary lookahead: distance to the next best candidate after node
        secondary_lookahead = 0
        if len(unvisited_nodes) > 1:
            next_best_candidate = None
            next_best_score = float('inf')
            for candidate in unvisited_nodes:
                if candidate != node:
                    candidate_distance = distance_matrix[node][candidate]
                    if candidate_distance < next_best_score:
                        next_best_score = candidate_distance
                        next_best_candidate = candidate
            if next_best_candidate is not None:
                secondary_lookahead = distance_matrix[next_best_candidate][destination_node]

        score = 0.6 * immediate_distance + 0.3 * lookahead_distance + 0.1 * secondary_lookahead

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
