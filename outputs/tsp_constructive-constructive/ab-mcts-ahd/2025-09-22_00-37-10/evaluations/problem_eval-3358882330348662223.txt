def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)

    # Adaptive weight adjustment
    immediate_weight = 0.8 * (remaining_nodes / total_nodes)
    lookahead_weight = 0.2 * (1 - (remaining_nodes / total_nodes))
    lookahead_reduction = 0.4

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_weight * immediate_distance + lookahead_weight * (lookahead_reduction * lookahead_distance)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
