def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    progress_ratio = 1 - (len(unvisited_nodes) / total_nodes)

    if not unvisited_nodes:
        return destination_node

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Dynamic bias factor: increases as progress increases (0.5 to 1.0)
        bias_factor = progress_ratio * 0.5 + 0.5

        # Weighted score: immediate distance + weighted lookahead distance
        score = immediate_distance + bias_factor * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
