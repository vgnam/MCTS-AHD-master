def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    total_nodes = len(unvisited_nodes) + 1  # +1 to account for the current node
    progress_ratio = (total_nodes - len(unvisited_nodes)) / total_nodes
    dynamic_weight = 0.7 * (1 - progress_ratio) + 0.3  # Weight decreases as progress increases

    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_distance + dynamic_weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
