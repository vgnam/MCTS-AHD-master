def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight = max(0.1, 0.5 * (remaining_nodes / (remaining_nodes + 1)))
    path_progress = 1.0 - (remaining_nodes / len(unvisited_nodes + [current_node]))

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_distance - weight * lookahead_distance + path_progress * distance_matrix[current_node][node]

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
