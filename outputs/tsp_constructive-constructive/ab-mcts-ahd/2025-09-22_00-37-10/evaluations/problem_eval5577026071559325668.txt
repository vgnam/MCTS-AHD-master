def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    progress_ratio = 1 - (len(unvisited_nodes) / total_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]

        remaining_nodes = [n for n in unvisited_nodes if n != node]
        lookahead_term = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes) if remaining_nodes else 0

        weight_immediate = 0.6 - 0.1 * progress_ratio
        weight_dest = 0.2 + 0.1 * progress_ratio
        weight_lookahead = 0.2

        score = weight_immediate * immediate_distance + weight_dest * dest_distance + weight_lookahead * lookahead_term

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
