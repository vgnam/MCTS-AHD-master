def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    remaining_nodes = len(unvisited_nodes)
    weight = 0.5 + 0.5 * (1 - remaining_nodes / len(distance_matrix))  # Dynamic weight from No.1
    bias_factor = remaining_nodes / (remaining_nodes + 1)  # Bias factor from No.1
    penalty = 0.1 * (1 / (remaining_nodes + 1))  # Penalty for revisits from No.1

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_distance - bias_factor * (weight * lookahead_distance) + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
