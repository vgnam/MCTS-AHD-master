def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # Assuming destination is included in unvisited initially

    # Dynamic weight adjustment: immediate weight increases as remaining nodes decrease
    immediate_weight = 0.5 + 0.4 * (1 - remaining_nodes / total_nodes)
    lookahead_weight = 1 - immediate_weight

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_weight * immediate_distance + lookahead_weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
