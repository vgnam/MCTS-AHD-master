def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    num_unvisited = len(unvisited_nodes)
    max_distance = max(max(row) for row in distance_matrix)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 * (num_unvisited / (num_unvisited + 1))
        normalized_score = (immediate_distance - dynamic_weight * lookahead_distance) / max_distance

        if normalized_score < best_score:
            best_score = normalized_score
            next_node = node

    return next_node
