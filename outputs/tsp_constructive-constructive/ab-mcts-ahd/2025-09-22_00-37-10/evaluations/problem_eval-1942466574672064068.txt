def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (remaining_nodes - 1 if remaining_nodes > 1 else 1)

        weight_lookahead = 0.5 + (0.5 * (remaining_nodes / (remaining_nodes + 1)))
        weight_centrality = (remaining_nodes ** 0.5) / 10.0

        score = immediate_distance + weight_lookahead * lookahead_distance - weight_centrality * centrality

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
