def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    # Calculate centroid of unvisited nodes
    centroid_x, centroid_y = 0, 0
    for node in unvisited_nodes:
        centroid_x += distance_matrix[node][0]
        centroid_y += distance_matrix[node][1]
    centroid_x /= remaining_nodes
    centroid_y /= remaining_nodes

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        centroid_distance = ((distance_matrix[node][0] - centroid_x) ** 2 + (distance_matrix[node][1] - centroid_y) ** 2) ** 0.5
        weight_immediate = 1.0 / (1.0 + remaining_nodes)
        weight_centroid = (1.0 + (0.5 * (remaining_nodes / (remaining_nodes + 1)))) / (1.0 + remaining_nodes)
        score = immediate_distance - weight_immediate * lookahead_distance - weight_centroid * centroid_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
