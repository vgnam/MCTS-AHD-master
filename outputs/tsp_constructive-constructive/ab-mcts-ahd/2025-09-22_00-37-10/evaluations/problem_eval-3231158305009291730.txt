def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Dynamic weight based on remaining nodes
        weight = 0.5 + 0.5 * (1 - num_unvisited / (num_unvisited + 1))

        # Penalty for nodes too close to current node
        penalty = 0.2 * immediate_distance if immediate_distance < 0.1 * distance_matrix[current_node][destination_node] else 0

        score = immediate_distance - weight * lookahead_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
