def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')

    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    avg_distance = total_distance / remaining_nodes if remaining_nodes > 0 else 0
    variance = sum((distance_matrix[current_node][node] - avg_distance) ** 2 for node in unvisited_nodes) / remaining_nodes if remaining_nodes > 0 else 0
    normalized_variance = variance / (avg_distance + 1e-6) if avg_distance > 0 else 0

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        bias_factor = math.exp(-remaining_nodes / 10) * 0.5 + 0.5
        score = -current_distance + bias_factor * (dest_distance + normalized_variance)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
