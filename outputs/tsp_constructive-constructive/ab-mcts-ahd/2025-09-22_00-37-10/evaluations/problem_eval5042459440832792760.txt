def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    if not unvisited_nodes:
        return destination_node

    avg_lookahead = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / remaining_nodes

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        weight = 0.5 + 0.5 * (avg_lookahead / (avg_lookahead + lookahead_distance))
        penalty = 0.1 * (1 / (1 + distance_matrix[current_node][node])) if node in unvisited_nodes else 0
        score = immediate_distance + weight * lookahead_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
