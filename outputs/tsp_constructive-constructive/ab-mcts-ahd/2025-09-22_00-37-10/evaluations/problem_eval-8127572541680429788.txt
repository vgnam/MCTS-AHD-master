import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    candidate_nodes = []

    for node in unvisited_nodes:
        if node == destination_node:
            return node

    min_local_distance = float('inf')
    for node in unvisited_nodes:
        local_distance = distance_matrix[current_node][node]
        if local_distance < min_local_distance:
            min_local_distance = local_distance
            candidate_nodes = [node]
        elif local_distance == min_local_distance:
            candidate_nodes.append(node)

    if len(candidate_nodes) > 1:
        weights = []
        for node in candidate_nodes:
            local_weight = 1.0 / (distance_matrix[current_node][node] + 1e-6)
            global_weight = 1.0 / (distance_matrix[node][destination_node] + 1e-6)
            combined_weight = local_weight * global_weight
            weights.append(combined_weight)
        weights = [w / sum(weights) for w in weights]
        next_node = random.choices(candidate_nodes, weights=weights, k=1)[0]
    else:
        next_node = candidate_nodes[0]

    return next_node
