import numpy as np

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    scores = []

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_distance - 0.5 * lookahead_distance
        scores.append(score)

    if not scores:
        return None

    # Convert scores to probabilities using softmax
    exp_scores = np.exp(-np.array(scores))  # Lower scores are better, so invert
    probabilities = exp_scores / np.sum(exp_scores)

    # Randomly select a node based on probabilities
    next_node = np.random.choice(unvisited_nodes, p=probabilities)

    return next_node
