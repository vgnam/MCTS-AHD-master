import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    candidate_nodes = []
    min_distance = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            candidate_nodes = [node]
        elif distance == min_distance:
            candidate_nodes.append(node)

    if len(candidate_nodes) == 1:
        return candidate_nodes[0]

    weights = []
    for node in candidate_nodes:
        dist_to_current = distance_matrix[current_node][node]
        dist_to_dest = distance_matrix[node][destination_node]
        weight = (1.0 / (dist_to_current + 1e-6)) * (1.0 + 1.0 / (dist_to_dest + 1e-6))
        weights.append(weight)

    total_weight = sum(weights)
    normalized_weights = [w / total_weight for w in weights]
    next_node = random.choices(candidate_nodes, weights=normalized_weights, k=1)[0]

    return next_node
