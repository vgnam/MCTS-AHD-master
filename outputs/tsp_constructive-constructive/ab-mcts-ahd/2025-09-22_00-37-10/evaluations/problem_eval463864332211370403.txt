def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1  # +1 to include current node
    remaining_nodes = len(unvisited_nodes)

    # Dynamic weight adjustment with fixed component
    immediate_weight = 0.6 * (remaining_nodes / total_nodes) + 0.5
    lookahead_weight = 0.4 * (1 - (remaining_nodes / total_nodes))

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        score = immediate_weight * immediate_distance + lookahead_weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
