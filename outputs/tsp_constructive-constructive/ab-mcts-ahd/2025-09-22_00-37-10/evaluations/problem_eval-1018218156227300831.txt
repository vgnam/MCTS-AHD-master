def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    second_best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        normalized_lookahead = lookahead_distance / (distance_matrix[current_node][destination_node] + 1e-10)
        dynamic_weight = 1 / (1 + math.exp(-(remaining_nodes - len(unvisited_nodes) / 2)))
        score = immediate_distance + dynamic_weight * normalized_lookahead

        if score < best_score:
            second_best_score = best_score
            best_score = score
            next_node = node
        elif score < second_best_score:
            second_best_score = score

    if best_score / (second_best_score + 1e-10) > 0.95 and random.random() < 0.2:
        next_node = random.choice(unvisited_nodes)

    return next_node
