import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    avg_distance = sum(distances) / len(distances) if distances else 0

    weighted_nodes = []
    for node, dist in zip(unvisited_nodes, distances):
        if avg_distance > 0:
            weight = (avg_distance / (dist + 1e-6)) ** 1.5
        else:
            weight = 1.0
        weighted_nodes.append((node, weight))

    weighted_nodes.sort(key=lambda x: -x[1])
    candidate_nodes = [node for node, _ in weighted_nodes[:3]]  # Top 3 candidates

    if len(candidate_nodes) > 1:
        weights = [weight for _, weight in weighted_nodes[:3]]
        weights = [w / sum(weights) for w in weights]
        next_node = random.choices(candidate_nodes, weights=weights, k=1)[0]
    else:
        next_node = candidate_nodes[0]

    return next_node
