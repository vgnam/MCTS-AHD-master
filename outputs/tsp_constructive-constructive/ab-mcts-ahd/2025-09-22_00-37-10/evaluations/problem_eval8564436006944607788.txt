def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    progress_ratio = 1 - (len(unvisited_nodes) / total_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        distance_ratio = immediate_distance / (lookahead_distance + 1e-10)

        bias_factor = 1 / (1 + math.exp(-5 * (progress_ratio - 0.5)))
        variance_penalty = np.var([distance_matrix[node][n] for n in unvisited_nodes if n != node])

        score = (bias_factor * (0.6 * immediate_distance + 0.4 * lookahead_distance) +
                0.2 * variance_penalty * (1 - progress_ratio))

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
