import math
    import random

    if not unvisited_nodes:
        return None

    remaining_nodes = len(unvisited_nodes)
    temperature = max(1.0, 10.0 / (remaining_nodes + 1))  # Higher temp for early exploration
    scores = []

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        dynamic_weight = math.exp(-lookahead_distance / temperature)  # Weight decreases with lookahead
        score = immediate_distance + dynamic_weight * lookahead_distance
        scores.append((node, score))

    # Select node with probability proportional to exponential of negative score
    nodes, scores = zip(*scores)
    exp_scores = [math.exp(-s / temperature) for s in scores]
    total = sum(exp_scores)
    probabilities = [s / total for s in exp_scores]
    next_node = random.choices(nodes, weights=probabilities, k=1)[0]

    return next_node
