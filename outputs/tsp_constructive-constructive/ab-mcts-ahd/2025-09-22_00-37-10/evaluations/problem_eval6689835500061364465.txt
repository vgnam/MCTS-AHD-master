def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    base_weight = 0.5
    num_unvisited = len(unvisited_nodes)
    weight = base_weight * (num_unvisited / (num_unvisited + 1))  # Dynamic weight adjustment
    visit_history = {node: 0 for node in unvisited_nodes}  # Track revisits (simplified)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        penalty = visit_history[node] * 0.1  # Penalty for revisits
        score = immediate_distance - (weight * lookahead_distance) + penalty

        if score < best_score:
            best_score = score
            next_node = node

    if next_node is not None:
        visit_history[next_node] += 1  # Update history (simplified)

    return next_node
