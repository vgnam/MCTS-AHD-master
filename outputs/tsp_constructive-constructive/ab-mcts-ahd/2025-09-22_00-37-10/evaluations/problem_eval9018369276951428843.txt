def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1  # +1 to include current_node
    remaining_ratio = len(unvisited_nodes) / total_nodes
    weight = 0.5 * (1 + remaining_ratio)  # Adjust weight dynamically

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        penalty = 0.1 * immediate_distance if immediate_distance < 0.3 * distance_matrix[current_node][destination_node] else 0
        score = immediate_distance - weight * lookahead_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
