def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        angular_deviation = abs(current_distance - dest_distance) / (current_distance + dest_distance)
        bias_factor = (remaining_nodes / (remaining_nodes + 1)) ** 2
        weight = 0.5 + (0.5 * (remaining_nodes / (remaining_nodes + 1)))
        score = -current_distance + weight * (dest_distance - angular_deviation * current_distance)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
