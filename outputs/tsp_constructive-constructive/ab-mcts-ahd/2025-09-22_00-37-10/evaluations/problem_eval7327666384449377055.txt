def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Dynamic weighting using sigmoid function
        weight_factor = 1 / (1 + math.exp(-(remaining_nodes - 5)))
        weighted_score = (weight_factor * 0.7 + (1 - weight_factor) * 0.3) * immediate_distance + \
                         ((1 - weight_factor) * 0.7 + weight_factor * 0.3) * lookahead_distance

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node

    return next_node
