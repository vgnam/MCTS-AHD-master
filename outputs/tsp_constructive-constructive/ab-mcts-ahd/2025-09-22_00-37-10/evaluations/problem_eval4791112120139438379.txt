def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight based on remaining nodes
        weight = 0.5 if remaining_nodes > 2 else 0.2
        score = distance_to_current + weight * distance_to_destination

        # Penalty for nodes already visited in the current path (simulated by checking if the node is in unvisited_nodes)
        if remaining_nodes < len(unvisited_nodes):
            score += 0.1 * distance_to_current  # Additional penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
