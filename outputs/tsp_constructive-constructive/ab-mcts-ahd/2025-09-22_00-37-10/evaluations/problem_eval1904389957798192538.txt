def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    total_nodes = len(unvisited_nodes) + 1
    progress_ratio = 1 - (len(unvisited_nodes) / total_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]

        remaining_nodes = [n for n in unvisited_nodes if n != node]
        lookahead_term = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes) if remaining_nodes else 0

        bias_factor = (1 - progress_ratio) * 0.5 + 0.5

        score = -current_distance + bias_factor * (dest_distance + 0.2 * lookahead_term)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
