import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    candidate_nodes = []
    min_distance = float('inf')
    adaptive_weights = []

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        if distance < min_distance:
            min_distance = distance
            candidate_nodes = [node]
            adaptive_weights = [1.0 / (distance + remaining_distance + 1e-6)]
        elif distance == min_distance:
            candidate_nodes.append(node)
            adaptive_weights.append(1.0 / (distance + remaining_distance + 1e-6))

    if len(candidate_nodes) > 1:
        adaptive_weights = [w / sum(adaptive_weights) for w in adaptive_weights]
        next_node = random.choices(candidate_nodes, weights=adaptive_weights, k=1)[0]
    else:
        next_node = candidate_nodes[0]

    return next_node
