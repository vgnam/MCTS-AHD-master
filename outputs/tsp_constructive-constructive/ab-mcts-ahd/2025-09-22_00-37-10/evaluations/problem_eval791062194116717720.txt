def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        progress_weight = (total_nodes - remaining_nodes) / total_nodes  # Progress-based weight
        centrality = sum(distance_matrix[node]) / (total_nodes - 1)  # Node centrality metric
        score = (1 - progress_weight) * immediate_distance - progress_weight * (lookahead_distance + 0.5 * centrality)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
