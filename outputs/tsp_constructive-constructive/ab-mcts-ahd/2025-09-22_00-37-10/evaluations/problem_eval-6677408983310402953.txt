def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    if not unvisited_nodes:
        return destination_node

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        dynamic_weight = min(0.5, 0.3 * (immediate_distance / avg_distance)) if avg_distance > 0 else 0.3
        score = immediate_distance + dynamic_weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
