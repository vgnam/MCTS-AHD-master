def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    centrality_weights = [sum(row) for row in distance_matrix]

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        centrality = centrality_weights[node] / total_nodes
        weight = 0.3 + 0.7 * (1 - (remaining_nodes / total_nodes)) + 0.2 * centrality
        score = immediate_distance + weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
