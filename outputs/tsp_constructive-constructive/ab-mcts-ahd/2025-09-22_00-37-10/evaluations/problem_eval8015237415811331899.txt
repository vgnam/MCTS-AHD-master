def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    if remaining_nodes == 0:
        return destination_node

    avg_distance_to_unvisited = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        deviation_penalty = abs(immediate_distance - avg_distance_to_unvisited)
        weight = 0.5 + (0.5 * (remaining_nodes / (remaining_nodes + 1))) + (0.2 * (1 - remaining_nodes / (remaining_nodes + 1)))
        score = immediate_distance + weight * lookahead_distance + 0.3 * deviation_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
