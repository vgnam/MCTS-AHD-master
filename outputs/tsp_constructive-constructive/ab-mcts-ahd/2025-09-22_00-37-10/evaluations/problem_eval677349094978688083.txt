def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Dynamic weight combining Algorithm 1 and 2's approaches
        base_weight = 1.0 / (1.0 + remaining_nodes)
        lookahead_weight = 0.5 + 0.5 * (1 - remaining_nodes / total_nodes)
        combined_weight = base_weight + lookahead_weight

        # Non-linear scaling for stronger lookahead influence
        non_linear_weight = combined_weight ** 2

        score = immediate_distance - non_linear_weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
