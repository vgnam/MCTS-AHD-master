def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    progress_ratio = 1 - (len(unvisited_nodes) / total_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Dynamic weight based on progress
        weight = (1 - progress_ratio) * 0.3 + 0.5  # Ranges from 0.5 (early) to 0.8 (late)

        score = immediate_distance - weight * lookahead_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
