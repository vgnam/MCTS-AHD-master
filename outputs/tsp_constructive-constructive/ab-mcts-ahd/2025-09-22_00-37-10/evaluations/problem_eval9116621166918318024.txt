def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_unvisited_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    avg_unvisited_distance = total_unvisited_distance / remaining_nodes if remaining_nodes > 0 else 0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 + (0.5 * (remaining_nodes / (remaining_nodes + 1)))
        normalized_avg = avg_unvisited_distance / total_unvisited_distance if total_unvisited_distance > 0 else 0
        score = immediate_distance + dynamic_weight * lookahead_distance + (1 - dynamic_weight) * normalized_avg

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
