def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        if immediate_distance == 0 or lookahead_distance == 0:
            continue

        dynamic_weight = immediate_distance / (immediate_distance + lookahead_distance)
        connectivity_score = sum(1 for n in unvisited_nodes if distance_matrix[node][n] > 0) / num_unvisited
        score = immediate_distance - dynamic_weight * lookahead_distance + (1 - dynamic_weight) * connectivity_score

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
