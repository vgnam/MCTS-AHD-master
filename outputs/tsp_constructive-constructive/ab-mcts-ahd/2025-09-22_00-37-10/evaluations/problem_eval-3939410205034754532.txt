import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    total_score = 0.0
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        dynamic_weight = 1.0 / (remaining_nodes + 1)
        score = immediate_distance + dynamic_weight * lookahead_distance
        adjusted_score = max(0.001, 1.0 / score)  # Avoid division by zero and ensure positive scores
        scores.append(adjusted_score)
        total_score += adjusted_score

    probabilities = [score / total_score for score in scores]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]

    return next_node
