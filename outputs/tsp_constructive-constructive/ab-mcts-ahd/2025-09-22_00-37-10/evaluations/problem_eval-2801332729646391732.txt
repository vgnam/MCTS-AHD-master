import math
    import random

    next_node = None
    scores = []
    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (1.0 + remaining_nodes)  # Temperature decreases as remaining nodes decrease

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        combined_distance = immediate_distance + lookahead_distance
        scores.append((node, combined_distance))

    # Apply softmax with temperature
    exp_scores = [math.exp(-score[1] / temperature) for score in scores]
    sum_exp_scores = sum(exp_scores)
    probabilities = [exp_score / sum_exp_scores for exp_score in exp_scores]

    # Select node based on probabilities
    next_node = random.choices([score[0] for score in scores], weights=probabilities, k=1)[0]

    return next_node
