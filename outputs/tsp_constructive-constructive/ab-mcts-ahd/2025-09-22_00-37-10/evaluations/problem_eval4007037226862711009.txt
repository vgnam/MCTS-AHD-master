def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_distance = float('inf')
    candidate_nodes = []

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            candidate_nodes = [node]
        elif distance == min_distance:
            candidate_nodes.append(node)

    if len(candidate_nodes) > 1:
        best_score = -float('inf')
        for node in candidate_nodes:
            immediate_distance = distance_matrix[current_node][node]
            lookahead_distance = distance_matrix[node][destination_node]
            remaining_nodes = len(unvisited_nodes)

            weight = 0.5 + 0.5 * (1 - remaining_nodes / len(distance_matrix))
            bias_factor = remaining_nodes / (remaining_nodes + 1)
            penalty = 0.1 * (1 / (remaining_nodes + 1))

            score = -immediate_distance + bias_factor * (weight * lookahead_distance) - penalty

            if score > best_score:
                best_score = score
                next_node = node
    else:
        next_node = candidate_nodes[0]

    return next_node
