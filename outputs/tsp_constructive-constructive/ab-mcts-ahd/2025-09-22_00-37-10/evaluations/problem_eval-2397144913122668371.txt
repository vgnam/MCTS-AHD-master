import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    candidate_nodes = []
    min_distance = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            candidate_nodes = [node]
        elif distance == min_distance:
            candidate_nodes.append(node)

    heuristic_scores = []
    for node in candidate_nodes:
        inv_distance = 1.0 / (distance_matrix[current_node][node] + 1e-6)

        avg_heuristic = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0

        score = 0.4 * inv_distance + 0.6 * math.exp(-avg_heuristic)
        heuristic_scores.append(score)

    total_score = sum(heuristic_scores)
    probabilities = [s / total_score for s in heuristic_scores]

    next_node = random.choices(candidate_nodes, weights=probabilities, k=1)[0]

    return next_node
