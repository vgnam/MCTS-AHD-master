def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    dynamic_weight = 0.75 * (1.0 / (1.0 + remaining_nodes))  # Scaled dynamic weight
    weight = 0.5 + dynamic_weight  # Combined weight

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        penalty = 0.1 if immediate_distance < 0.2 * max(distance_matrix[current_node]) else 0.0  # Penalty for too-close nodes
        score = immediate_distance - weight * lookahead_distance + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
