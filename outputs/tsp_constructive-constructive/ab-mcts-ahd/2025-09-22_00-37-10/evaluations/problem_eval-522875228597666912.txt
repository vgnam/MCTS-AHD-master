def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]

        # Dynamic bias factor based on remaining nodes and current distance
        bias_factor = (remaining_nodes / (remaining_nodes + 1)) * (1 - (current_distance / max(distance_matrix[current_node])))

        # Penalty for revisiting nodes (if applicable)
        penalty = 0.0 if node not in unvisited_nodes else 0.0

        # Score combines current distance, destination distance, and penalty
        score = -current_distance + bias_factor * dest_distance - penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
