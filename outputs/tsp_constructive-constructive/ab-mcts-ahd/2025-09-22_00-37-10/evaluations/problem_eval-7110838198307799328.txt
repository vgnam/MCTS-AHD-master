def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = -float('inf')
    total_nodes = len(unvisited_nodes) + 1  # +1 to account for current_node
    visited_count = total_nodes - len(unvisited_nodes)
    exploration_factor = 0.5 * (0.9 ** visited_count)  # Exponentially decaying exploration

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        score = -current_distance + exploration_factor * dest_distance + (1 - exploration_factor) * (len(unvisited_nodes) / total_nodes) * dest_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
