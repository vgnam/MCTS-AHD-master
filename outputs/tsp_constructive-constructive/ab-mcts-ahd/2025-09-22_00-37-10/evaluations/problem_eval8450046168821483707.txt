def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]

        # Non-linear dynamic weight with exploration penalty
        weight = (1.0 / (1.0 + remaining_nodes)) ** 1.5
        exploration_penalty = 0.1 * (remaining_nodes / (remaining_nodes + 1)) if immediate_distance < 0.3 * lookahead_distance else 0
        score = immediate_distance + weight * lookahead_distance + exploration_penalty

        if score < best_score:
            best_score = best_score
            next_node = node

    return next_node
