def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    max_distance = max(max(row) for row in distance_matrix)
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            return node

        product_distance = distance_to_current * distance_to_destination
        normalized_product = product_distance / max_distance
        weighted_product = 0.6 * normalized_product
        weighted_sum = 0.4 * (distance_to_current + distance_to_destination)
        score = weighted_product + weighted_sum
        threshold = max_distance * (remaining_nodes / (remaining_nodes + 1))

        if score < min_score and (distance_to_current + distance_to_destination) <= threshold:
            min_score = score
            next_node = node

    return next_node
