def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_combined_score = float('inf')
    distance_to_destination = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination_from_node = distance_matrix[node][destination_node]

        # Dynamic weight based on proximity to destination
        weight_factor = 1 / (1 + math.exp(-0.1 * (distance_to_destination - distance_to_destination_from_node)))
        combined_score = weight_factor * distance_to_current + (1 - weight_factor) * distance_to_destination_from_node

        if combined_score < min_combined_score:
            min_combined_score = combined_score
            next_node = node

    return next_node
