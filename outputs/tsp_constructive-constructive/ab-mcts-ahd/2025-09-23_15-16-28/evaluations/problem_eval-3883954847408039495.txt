def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Aggressive weight shift toward destination early, then balances with current node
        weight = 1 - (remaining_nodes / (remaining_nodes + 1)) ** 2
        score = weight * distance_to_destination + (1 - weight) * distance_to_current

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
