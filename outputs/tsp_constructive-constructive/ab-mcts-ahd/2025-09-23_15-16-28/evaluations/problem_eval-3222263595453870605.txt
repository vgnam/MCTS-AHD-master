def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_distance = float('inf')
    total_unvisited = len(unvisited_nodes)
    progress_factor = total_unvisited / (total_unvisited + 1)  # Normalized progress

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            weight = 1.0
        else:
            weight = 1.0 / (distance_to_destination ** 2)

        weighted_distance = (1 - progress_factor) * distance_to_current + progress_factor * (distance_to_current * weight)

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
