def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            return node

        ratio = distance_to_current / distance_to_destination
        dynamic_weight = 0.5 + 0.5 * (1 - len(unvisited_nodes) / total_unvisited)
        score = dynamic_weight * ratio + (1 - dynamic_weight) * (1 / distance_to_current)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
