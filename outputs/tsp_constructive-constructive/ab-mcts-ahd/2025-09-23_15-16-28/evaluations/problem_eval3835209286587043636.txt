def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = 0.5 / (1 + remaining_nodes)  # Dynamic weight based on remaining nodes

    for node in unvisited_nodes:
        current_to_node_distance = distance_matrix[current_node][node]
        node_to_destination_distance = distance_matrix[node][destination_node]
        score = (1 - weight) * current_to_node_distance + weight * node_to_destination_distance

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
