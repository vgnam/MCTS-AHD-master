def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_weighted_distance = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_to_node_distance = distance_matrix[current_node][node]
        node_to_destination_distance = distance_matrix[node][destination_node]

        # Weight the distances inversely proportional to the number of unvisited nodes
        weight_current = 1.0 / total_unvisited
        weight_destination = 1.0 - weight_current
        weighted_distance = (weight_current * current_to_node_distance) + (weight_destination * node_to_destination_distance)

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
