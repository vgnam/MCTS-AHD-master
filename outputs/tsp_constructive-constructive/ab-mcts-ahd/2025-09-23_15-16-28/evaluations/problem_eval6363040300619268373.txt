def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    distance_to_destination = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest_from_node = distance_matrix[node][destination_node]

        weight = 0.5 * (1 + (distance_to_destination - distance_to_current) / (distance_to_destination + distance_to_current + 1e-6))
        weight = (weight + remaining_nodes / (remaining_nodes + 1)) / 2

        penalty = max(0, distance_to_current - 1.5 * distance_to_destination)
        score = weight * distance_to_current + (1 - weight) * distance_to_dest_from_node + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
