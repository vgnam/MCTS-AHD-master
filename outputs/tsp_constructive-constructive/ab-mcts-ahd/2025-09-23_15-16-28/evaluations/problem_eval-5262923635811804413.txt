def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        product_distance = distance_to_current * distance_to_destination
        utility = (1 / (1 + product_distance)) * (1 + (1 / (1 + distance_to_destination)))
        dynamic_weight = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
        score = dynamic_weight * utility + (1 - dynamic_weight) * (1 / (1 + product_distance))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
