def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    threshold = 1.5 * distance_matrix[current_node][destination_node]
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        proximity_score = (0.6 * distance_to_current) + (0.4 * distance_to_destination)
        centrality = sum(distance_matrix[node][other] for other in unvisited_nodes) / remaining_nodes
        dynamic_factor = 1 - (remaining_nodes / (remaining_nodes + 10))
        score = (proximity_score * (1 + dynamic_factor)) + (0.3 * centrality)

        if distance_to_current < threshold and score < min_score:
            min_score = score
            next_node = node
            threshold = 0.9 * (distance_to_current + distance_to_destination) / 2

    return next_node
