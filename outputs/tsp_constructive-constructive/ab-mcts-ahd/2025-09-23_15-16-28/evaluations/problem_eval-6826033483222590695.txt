def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_sum = float('inf')
    total_unvisited = len(unvisited_nodes)
    weight_current = max(0.3, 0.7 - (0.4 * (total_unvisited / 10)))  # Decreases with more unvisited nodes
    weight_destination = 1.0 - weight_current  # Ensures weights sum to 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weighted_sum = (weight_current * distance_to_current) + (weight_destination * distance_to_destination)

        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node

    return next_node
