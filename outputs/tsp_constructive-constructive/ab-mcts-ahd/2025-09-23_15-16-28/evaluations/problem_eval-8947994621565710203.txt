def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_normalized_sum = float('inf')
    alpha = 0.5  # Weight for product distance
    beta = 0.3   # Weight for distance to current node
    gamma = 0.2  # Weight for distance to destination node

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        product_distance = distance_to_current * distance_to_destination
        normalized_sum = alpha * product_distance + beta * distance_to_current + gamma * distance_to_destination

        if normalized_sum < min_normalized_sum:
            min_normalized_sum = normalized_sum
            next_node = node

    return next_node
