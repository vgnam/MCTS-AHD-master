def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited_distance = sum(distance_matrix[node][destination_node] for node in unvisited_nodes)
    avg_unvisited_distance = total_unvisited_distance / len(unvisited_nodes) if unvisited_nodes else 0

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = distance_to_destination / (avg_unvisited_distance + 1e-10)
        combined_score = dynamic_weight * distance_to_current + (1 - dynamic_weight) * distance_to_destination

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
