def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_total_distance = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.5 + 0.5 * (1 - remaining_nodes / len(unvisited_nodes))

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weighted_distance = (1 - weight_factor) * distance_to_current + weight_factor * distance_to_destination
        adjusted_distance = weighted_distance + 0.2 * abs(distance_to_current - avg_distance)

        if adjusted_distance < min_total_distance:
            min_total_distance = adjusted_distance
            next_node = node

    return next_node
