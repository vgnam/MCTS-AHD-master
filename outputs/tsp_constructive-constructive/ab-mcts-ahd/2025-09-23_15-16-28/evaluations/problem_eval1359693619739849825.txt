def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    dynamic_weight = 1.0 + (1.0 / (1.0 + total_unvisited))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        connectivity_penalty = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (total_unvisited - 1 if total_unvisited > 1 else 1)

        combined_score = distance_to_current + dynamic_weight * distance_to_destination + 0.2 * connectivity_penalty

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
