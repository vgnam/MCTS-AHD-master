def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = []
    remaining_nodes = len(unvisited_nodes)
    path_progress = 1 - (remaining_nodes / len(distance_matrix))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        priority = (distance_to_current * distance_to_destination) * (1 - path_progress ** 2)
        candidates.append((node, priority))

    candidates.sort(key=lambda x: x[1])
    selected = candidates[0][0] if len(candidates) == 1 else candidates[min(1, len(candidates) - 1)][0]

    return next_node
