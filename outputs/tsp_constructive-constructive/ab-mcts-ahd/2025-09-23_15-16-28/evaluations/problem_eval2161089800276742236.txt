def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 - (0.6 * (remaining_nodes / (remaining_nodes + 1)))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weighted_distance = (weight_factor * distance_to_current) + ((1 - weight_factor) * distance_to_destination)

        lookahead_score = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                lookahead_score += distance_matrix[node][other_node] + distance_matrix[other_node][destination_node]

        total_score = weighted_distance + (0.3 * lookahead_score / (remaining_nodes - 1 if remaining_nodes > 1 else 1))

        if total_score < min_score:
            min_score = total_score
            next_node = node

    return next_node
