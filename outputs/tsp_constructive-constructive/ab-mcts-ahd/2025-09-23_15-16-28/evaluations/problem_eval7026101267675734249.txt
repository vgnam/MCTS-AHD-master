def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 * (1 - (total_unvisited / len(unvisited_nodes)))  # Adjusts based on remaining nodes
        combined_score = dynamic_weight * distance_to_current + (1 - dynamic_weight) * distance_to_destination

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
