def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_total_distance = float('inf')
    next_node = None
    progress = 1 - (len(unvisited_nodes) / (len(unvisited_nodes) + 1))  # Inverted progress (1 to 0)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_distance = (1 - progress) * immediate_distance + progress * (future_distance)

        if weighted_distance < min_total_distance:
            min_total_distance = weighted_distance
            next_node = node

    return next_node
