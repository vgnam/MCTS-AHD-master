def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)
    exploration_factor = 1 - (total_unvisited / (total_unvisited + 1))  # Increases as unvisited nodes decrease

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        normalized_distance = (distance_to_current + distance_to_destination) / (1 + exploration_factor * distance_to_destination)

        if normalized_distance < min_score:
            min_score = normalized_distance
            next_node = node

    return next_node
