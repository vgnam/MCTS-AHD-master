def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_distance = float('inf')
    total_unvisited = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    weight_factor = (total_unvisited / total_nodes) ** 2  # Quadratic scaling of weight factor

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        max_distance = max(distance_to_current, distance_to_destination)
        weighted_distance = weight_factor * distance_to_destination + (1 - weight_factor) * distance_to_current
        combined_distance = weighted_distance + max_distance ** 2  # Square penalty for max distance

        if combined_distance < min_weighted_distance:
            min_weighted_distance = combined_distance
            next_node = node

    return next_node
