def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / max(1, len(unvisited_nodes) - 1)

        weighted_distance = 0.6 * distance_to_current + 0.25 * distance_to_destination + 0.15 * centrality
        score = weighted_distance * (distance_to_current + distance_to_destination)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
