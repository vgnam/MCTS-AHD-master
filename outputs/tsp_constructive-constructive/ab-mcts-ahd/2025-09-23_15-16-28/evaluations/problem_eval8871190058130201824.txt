def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Weighted combination of distances and remaining nodes for diversity
        score = (0.4 * distance_to_current) + (0.5 * distance_to_destination) + (0.1 * (1 / (remaining_nodes + 1)))

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
