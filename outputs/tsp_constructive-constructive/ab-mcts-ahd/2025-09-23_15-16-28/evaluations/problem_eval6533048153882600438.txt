def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1 / (1 + math.exp(-(remaining_nodes - 5)))  # Sigmoid adjustment
    current_weight = weight_factor
    destination_weight = 1 - weight_factor

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = current_weight * distance_to_current + destination_weight * distance_to_destination

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
