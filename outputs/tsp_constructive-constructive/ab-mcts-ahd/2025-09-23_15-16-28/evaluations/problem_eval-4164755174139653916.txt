def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    progress_factor = remaining_nodes / (remaining_nodes + 1)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        normalized_distance = distance_to_current
        detour_risk = (distance_to_current + distance_to_destination) / (distance_to_destination + 1e-6)
        score = progress_factor * normalized_distance + (1 - progress_factor) * detour_risk

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
