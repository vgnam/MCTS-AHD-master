def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Non-linear weight adjustment: emphasizes destination early, shifts to current node later
        weight = 1 / (1 + remaining_nodes)
        score = weight * distance_to_current + (1 - weight) * distance_to_destination

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
