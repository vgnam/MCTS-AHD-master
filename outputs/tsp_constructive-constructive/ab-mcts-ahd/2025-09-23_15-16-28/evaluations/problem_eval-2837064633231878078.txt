def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_distance_to_dest = distance_matrix[current_node][destination_node]
    best_score = -float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        if remaining_distance_to_dest == 0:
            proximity_weight = 1.0
            advancement_weight = 0.0
        else:
            proximity_weight = 0.5 + 0.5 * (distance_to_dest / remaining_distance_to_dest)
            advancement_weight = 1.0 - proximity_weight

        score = proximity_weight * (1 / (distance_to_current + 1e-6)) + advancement_weight * (1 / (distance_to_dest + 1e-6))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
