def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_sum = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Weighted sum with higher priority to current node and multiplicative factor
        weighted_sum = (0.7 * distance_to_current) + (0.3 * distance_to_destination) + (0.1 * (distance_to_destination / (distance_to_current + 1e-10)))

        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node

    return next_node
