def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    min_score = float('inf')
    next_node = None

    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / total_unvisited

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if total_unvisited > 1:
            weight = 1.0 / (2.0 ** (total_unvisited / len(unvisited_nodes)))
        else:
            weight = 1.0

        diversity_factor = (distance_to_current - avg_distance) ** 2
        combined_score = distance_to_current + weight * distance_to_destination + 0.5 * diversity_factor

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
