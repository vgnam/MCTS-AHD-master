def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    sum_weight = 0.7 - 0.3 * (remaining_nodes / (remaining_nodes + 1))
    max_weight = 1 - sum_weight

    next_node = None
    min_weighted_distance = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        sum_distance = distance_to_current + distance_to_destination
        max_distance = max(distance_to_current, distance_to_destination)
        weighted_distance = sum_weight * sum_distance + max_weight * max_distance

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
