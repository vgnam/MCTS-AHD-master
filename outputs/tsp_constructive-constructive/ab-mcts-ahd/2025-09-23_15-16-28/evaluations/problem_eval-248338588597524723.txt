def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    # Dynamic temperature based on remaining nodes
    remaining_nodes = len(unvisited_nodes)
    temperature = max(0.1, 0.9 ** remaining_nodes)  # Decays exponentially

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Sigmoid-weighted combination of distances
        weight = 1 / (1 + math.exp(-temperature * (remaining_nodes - 5)))
        score = weight * distance_to_current + (1 - weight) * distance_to_destination

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
