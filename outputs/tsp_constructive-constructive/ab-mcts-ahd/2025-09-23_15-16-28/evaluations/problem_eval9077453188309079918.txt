def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_distance = float('inf')
    remaining_nodes_ratio = len(unvisited_nodes) / (len(unvisited_nodes) + 1)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_current < 1e-6:
            weighted_distance = float('inf')
        else:
            weighted_distance = (distance_to_current * remaining_nodes_ratio) + (distance_to_destination * (1 - remaining_nodes_ratio))

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
