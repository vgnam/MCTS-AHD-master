def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_sum = float('inf')
    min_max_distance = float('inf')
    threshold = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        max_distance = max(distance_to_current, distance_to_destination)

        if remaining_nodes <= 3:
            weighted_sum = (0.7 * distance_to_current) + (0.3 * distance_to_destination)
        else:
            weighted_sum = (0.5 * distance_to_current) + (0.5 * distance_to_destination)

        if max_distance < threshold and weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            min_max_distance = max_distance
            next_node = node
            threshold = max_distance

    return next_node
