def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_sum = float('inf')
    alpha = 0.5  # Weight for distance to current node
    beta = 0.5   # Weight for distance to nearest unvisited node

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        # Find the nearest unvisited node to the current candidate node
        min_distance_to_nearest = float('inf')
        for other_node in unvisited_nodes:
            if other_node != node:
                distance = distance_matrix[node][other_node]
                if distance < min_distance_to_nearest:
                    min_distance_to_nearest = distance

        weighted_sum = alpha * distance_to_current + beta * min_distance_to_nearest

        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node

    return next_node
