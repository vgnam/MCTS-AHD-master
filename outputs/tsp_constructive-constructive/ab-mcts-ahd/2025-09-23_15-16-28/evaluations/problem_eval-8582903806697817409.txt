def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_distance = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.5 + (0.5 * (remaining_nodes / (remaining_nodes + 1))) * (1 - (distance_matrix[current_node][destination_node] / max(distance_matrix[current_node])))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = 0.2 * distance_to_destination if remaining_nodes > 1 else 0
        weighted_distance = (weight_factor * distance_to_current) + ((1 - weight_factor) * distance_to_destination) + penalty

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
