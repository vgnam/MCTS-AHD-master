def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    scaling_factor = 0.5 * (1 + 1 / (1 + remaining_nodes))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        product_distance = distance_to_current * distance_to_destination
        sum_distance = distance_to_current + distance_to_destination
        normalization = (distance_to_current + distance_to_destination) / 2
        combined_score = (product_distance / normalization) + scaling_factor * sum_distance

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
