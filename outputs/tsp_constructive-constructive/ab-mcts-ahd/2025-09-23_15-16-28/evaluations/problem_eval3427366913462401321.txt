def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_distance = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight adjustment based on remaining unvisited nodes
        immediate_weight = 0.6 - 0.1 * (1 - total_unvisited / (total_unvisited + 1))
        future_weight = 0.4 + 0.3 * (1 - total_unvisited / (total_unvisited + 1))

        weighted_distance = immediate_weight * distance_to_current + future_weight * distance_to_destination

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
