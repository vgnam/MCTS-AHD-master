def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    threshold = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.7 if remaining_nodes > 3 else 0.3

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        distance_ratio = distance_to_current / (distance_to_destination + 1e-10)
        penalty = abs(distance_ratio - 1) ** 2
        weighted_score = (weight_factor * distance_to_current) + ((1 - weight_factor) * distance_to_destination) + penalty
        max_distance = max(distance_to_current, distance_to_destination)

        if max_distance < threshold and weighted_score < min_score:
            min_score = weighted_score
            next_node = node
            threshold = max_distance

    return next_node
