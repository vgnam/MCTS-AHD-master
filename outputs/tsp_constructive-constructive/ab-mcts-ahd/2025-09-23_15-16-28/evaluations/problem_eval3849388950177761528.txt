def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = -float('inf')
    max_distance = max(max(row) for row in distance_matrix)
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_current == 0:
            score = float('inf')
        else:
            ratio = distance_to_destination / distance_to_current
            product_distance = distance_to_current * distance_to_destination
            normalized_product = product_distance / max_distance
            sum_distance = distance_to_current + distance_to_destination
            weight = remaining_nodes / (remaining_nodes + 1)

            score = weight * (ratio - normalized_product) + (1 - weight) * sum_distance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
