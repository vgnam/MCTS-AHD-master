import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0):
    if not unvisited_nodes:
        return destination_node

    utilities = []
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        product_distance = distance_to_current * distance_to_destination
        utility = (1 / (1 + product_distance)) * (1 + (1 / (1 + distance_to_destination)))
        utilities.append(utility)

    # Apply softmax with temperature to get probabilities
    exp_utilities = [math.exp(util / temperature) for util in utilities]
    sum_exp_utilities = sum(exp_utilities)
    probabilities = [exp_util / sum_exp_utilities for exp_util in exp_utilities]

    # Select node based on probabilities
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
