def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            return node

        # Dynamic weight adjustment using sigmoid function
        progress_ratio = distance_to_current / (distance_to_destination + 1e-9)
        dynamic_weight = 1 / (1 + math.exp(-5 * (progress_ratio - 0.5)))

        score = dynamic_weight * progress_ratio + (1 - dynamic_weight) * distance_to_current

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
