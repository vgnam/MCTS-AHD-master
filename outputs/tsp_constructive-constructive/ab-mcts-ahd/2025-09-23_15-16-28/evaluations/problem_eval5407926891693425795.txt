def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_value = float('inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamic weight adjustment based on logarithmic transformation
        weight_factor = 1.0 / (1.0 + math.log1p(destination_distance))
        weighted_value = (destination_distance ** weight_factor) * (current_distance ** (1.0 - weight_factor))

        if weighted_value < min_weighted_value:
            min_weighted_value = weighted_value
            next_node = node

    return next_node
