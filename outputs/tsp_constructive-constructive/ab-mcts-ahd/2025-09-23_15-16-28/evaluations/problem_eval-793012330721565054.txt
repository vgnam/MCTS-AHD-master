def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_distance = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        sum_distance = distance_to_current + distance_to_destination
        max_distance = max(distance_to_current, distance_to_destination)
        progress_factor = (total_unvisited / (total_unvisited + 1)) ** 0.5
        weighted_distance = (0.5 + 0.3 * progress_factor) * sum_distance + (0.5 - 0.3 * progress_factor) * max_distance

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
