def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_product = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Dynamically adjust weight based on remaining nodes
        weight = 1.0 if remaining_nodes > 1 else 0.8
        weighted_product = current_distance * (destination_distance ** weight)

        if weighted_product < min_weighted_product:
            min_weighted_product = weighted_product
            next_node = node

    return next_node
