def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_weighted_distance = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        dynamic_weight = 1.0 / (1.0 + (future_distance / immediate_distance) * (remaining_nodes / len(distance_matrix)))

        weighted_distance = immediate_distance + dynamic_weight * future_distance
        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
