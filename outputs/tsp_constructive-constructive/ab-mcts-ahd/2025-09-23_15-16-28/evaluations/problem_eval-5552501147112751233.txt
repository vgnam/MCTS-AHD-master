def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    avg_distance = sum(sum(row) for row in distance_matrix) / (len(distance_matrix) * len(distance_matrix))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            return node

        weight = 0.9  # Higher weight for long-term cost
        normalized_distance = distance_to_destination / avg_distance
        score = (weight * normalized_distance) + ((1 - weight) * (distance_to_current / avg_distance))

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
