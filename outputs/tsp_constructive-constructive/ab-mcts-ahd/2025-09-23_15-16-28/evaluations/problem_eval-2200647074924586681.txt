def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_sum = float('inf')
    max_min_distance = -float('inf')
    weight_current = 0.7
    weight_destination = 0.3

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weighted_sum = (weight_current * distance_to_current) + (weight_destination * distance_to_destination)
        min_distance = min(distance_to_current, distance_to_destination)

        if weighted_sum < min_weighted_sum or (weighted_sum == min_weighted_sum and min_distance > max_min_distance):
            min_weighted_sum = weighted_sum
            max_min_distance = min_distance
            next_node = node

    return next_node
