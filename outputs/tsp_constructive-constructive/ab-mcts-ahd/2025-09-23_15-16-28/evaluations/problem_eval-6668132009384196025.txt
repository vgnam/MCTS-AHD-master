def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_sum = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if remaining_nodes <= 3:
            weight_current = 0.8
            weight_destination = 0.2
        else:
            weight_current = 0.4
            weight_destination = 0.6

        weighted_sum = weight_current * distance_to_current + weight_destination * distance_to_destination

        if remaining_nodes <= 2:
            potential_bonus = (distance_matrix[current_node][destination_node] - distance_to_current) * 0.1
            weighted_sum -= potential_bonus

        if weighted_sum < min_weighted_sum:
            min_weighted_sum = weighted_sum
            next_node = node

    return next_node
