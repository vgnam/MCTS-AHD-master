def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_priority_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1 / (1 + remaining_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if remaining_nodes > 1:
            avg_distance_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (remaining_nodes - 1)
            centrality_factor = 1 / (1 + avg_distance_to_unvisited)
        else:
            centrality_factor = 1

        priority_score = (0.5 * distance_to_current + 0.3 * weight_factor * distance_to_destination + 0.2 * centrality_factor)

        if priority_score < min_priority_score:
            min_priority_score = priority_score
            next_node = node

    return next_node
