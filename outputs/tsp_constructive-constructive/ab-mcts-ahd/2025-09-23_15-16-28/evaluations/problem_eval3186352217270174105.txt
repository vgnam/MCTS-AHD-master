def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_potential_gain = -float('inf')
    total_unvisited = len(unvisited_nodes)
    progress_factor = 1.0 - (total_unvisited / (total_unvisited + 1))  # Normalized progress

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        potential_gain = (distance_to_current + distance_to_destination) / (1 + progress_factor * distance_to_current)
        weighted_gain = (1 - progress_factor) * distance_to_current + progress_factor * potential_gain

        if weighted_gain > max_potential_gain:
            max_potential_gain = weighted_gain
            next_node = node

    return next_node
