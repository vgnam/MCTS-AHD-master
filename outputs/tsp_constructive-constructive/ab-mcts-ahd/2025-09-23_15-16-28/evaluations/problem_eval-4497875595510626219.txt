def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / total_unvisited if total_unvisited > 0 else 0

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        weight_current = 0.7 - 0.4 * (total_unvisited / len(unvisited_nodes))
        distance_penalty = max(0, (current_distance - 1.2 * avg_distance) ** 2)
        score = weight_current * current_distance + (1 - weight_current) * destination_distance + distance_penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
