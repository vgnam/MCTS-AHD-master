def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes) + 1  # +1 for the current node
    remaining_nodes_ratio = len(unvisited_nodes) / total_nodes
    dynamic_weight = 0.3 + 0.2 * remaining_nodes_ratio

    avg_distance_to_destination = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes)

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_current > 1.2 * avg_distance_to_destination:
            penalty = 1.2
        else:
            penalty = 1.0

        combined_score = (distance_to_current * penalty) + dynamic_weight * distance_to_destination

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
