def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    alpha = 0.7  # Weight for distance to current node
    beta = 0.3   # Weight for distance to destination
    penalty_factor = 2.0  # Penalty for nodes too far from current

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = penalty_factor * (distance_to_current - distance_matrix[current_node][destination_node]) if distance_to_current > distance_matrix[current_node][destination_node] else 0
        score = alpha * distance_to_current + beta * distance_to_destination + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
