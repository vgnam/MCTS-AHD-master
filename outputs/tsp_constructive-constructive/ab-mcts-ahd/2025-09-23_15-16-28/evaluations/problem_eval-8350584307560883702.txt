def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    max_allowed_distance = 0.0

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_current > max_allowed_distance:
            max_allowed_distance = distance_to_current

    normalized_max = max_allowed_distance if max_allowed_distance != 0 else 1.0

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        normalized_distance_to_current = distance_to_current / normalized_max
        penalty = (normalized_distance_to_current ** 2) * 10 if normalized_distance_to_current > 0.7 else 0
        score = (0.4 * normalized_distance_to_current) + (0.2 * distance_to_destination) + penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
