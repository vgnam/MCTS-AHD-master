def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic scaling factor based on remaining nodes
        scaling_factor = 0.5 + 0.5 * (total_unvisited / (total_unvisited + 1))

        # Hybrid score with dynamic weighting
        combined_score = (distance_to_current * distance_to_destination) * (1 - scaling_factor) + scaling_factor * (distance_to_current + distance_to_destination)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
