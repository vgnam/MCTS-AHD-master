def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_utility = -float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        normalized_current = distance_to_current / (sum(distance_matrix[current_node]) + 1e-10)
        normalized_destination = distance_to_destination / (sum(distance_matrix[node]) + 1e-10)
        utility = (1 - normalized_current) * 0.7 + (1 - normalized_destination) * 0.3

        if utility > max_utility:
            max_utility = utility
            next_node = node

    return next_node
