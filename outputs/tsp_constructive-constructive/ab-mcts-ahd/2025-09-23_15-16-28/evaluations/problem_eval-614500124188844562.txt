def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    progress_ratio = remaining_nodes / total_nodes

    weight_current = 1.0 - 0.5 * (1 / (1 + math.exp(-10 * (progress_ratio - 0.5))))
    weight_destination = 0.5 * (1 / (1 + math.exp(-10 * (progress_ratio - 0.5))))

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        score = weight_current * current_distance + weight_destination * destination_distance

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
