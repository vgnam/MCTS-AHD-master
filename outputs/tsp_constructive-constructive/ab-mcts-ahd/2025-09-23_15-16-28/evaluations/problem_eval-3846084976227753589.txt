def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_weighted_distance = float('inf')
    alpha = 0.6  # Weight for sum of distances
    beta = 0.4   # Weight for product of distances

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        sum_distance = distance_to_current + distance_to_destination
        product_distance = distance_to_current * distance_to_destination
        weighted_distance = alpha * sum_distance + beta * product_distance

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
