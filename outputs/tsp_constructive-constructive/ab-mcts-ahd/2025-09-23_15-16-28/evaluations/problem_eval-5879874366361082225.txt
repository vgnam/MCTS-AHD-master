def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    avg_distance = sum(sum(row) for row in distance_matrix) / (len(distance_matrix) ** 2)
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            return node

        product_distance = distance_to_current * distance_to_destination
        sum_distance = distance_to_current + distance_to_destination
        ratio = product_distance / sum_distance if sum_distance != 0 else float('inf')
        normalized_ratio = ratio / avg_distance
        weight = 1 / (remaining_nodes + 1)

        score = weight * normalized_ratio + (1 - weight) * sum_distance

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
