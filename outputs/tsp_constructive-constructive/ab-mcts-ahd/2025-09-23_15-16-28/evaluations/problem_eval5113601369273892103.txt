def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_composite_score = float('inf')

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        detour_risk = (current_distance + destination_distance) / distance_matrix[current_node][destination_node]

        linear_weight = 0.7 * destination_distance + 0.3 * current_distance
        exponential_weight = 1.5 ** (-0.2 * detour_risk)

        composite_score = linear_weight * exponential_weight

        if composite_score < min_composite_score:
            min_composite_score = composite_score
            next_node = node

    return next_node
