def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    max_dist = max(distances)
    min_dist = min(distances)
    avg_dist = sum(distances) / len(distances)

    weighted_scores = []
    for node in unvisited_nodes:
        dist = distance_matrix[current_node][node]
        max_score = (dist - min_dist) / (max_dist - min_dist) if max_dist != min_dist else 1.0
        min_score = (max_dist - dist) / (max_dist - min_dist) if max_dist != min_dist else 1.0
        weighted_score = 0.7 * max_score + 0.3 * min_score
        weighted_scores.append(weighted_score)

    next_node = unvisited_nodes[weighted_scores.index(max(weighted_scores))]
    return next_node
