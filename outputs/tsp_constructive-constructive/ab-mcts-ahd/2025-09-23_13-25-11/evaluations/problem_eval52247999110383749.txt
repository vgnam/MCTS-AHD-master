def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def heuristic(node):
        # Weighted combination of distances and centroid influence
        dist_current = distance_matrix[current_node][node]
        dist_destination = distance_matrix[node][destination_node]

        # Calculate centroid of unvisited nodes
        centroid = sum(unvisited_nodes) / len(unvisited_nodes)
        centroid_influence = abs(node - centroid)  # Simplified for demo; adjust for actual node positions

        # Combine with weights (adjustable parameters)
        return 0.5 * dist_current + 0.3 * dist_destination + 0.2 * centroid_influence

    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
