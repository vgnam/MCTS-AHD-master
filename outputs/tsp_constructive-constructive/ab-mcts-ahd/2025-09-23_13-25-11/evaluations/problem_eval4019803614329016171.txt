def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    decay_factor = 0.7
    weighted_scores = {}

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weighted_score = (distance_to_node * decay_factor) + (distance_to_dest * (1 - decay_factor))
        weighted_scores[node] = weighted_score

    next_node = max(weighted_scores, key=weighted_scores.get)
    return next_node
