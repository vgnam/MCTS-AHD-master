def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def weighted_distance(node):
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        angle = 1.0 - (abs(current_dist - dest_dist) / (current_dist + dest_dist + 1e-10))
        return 0.7 * current_dist + 0.3 * dest_dist - 0.1 * angle

    next_node = min(unvisited_nodes, key=weighted_distance)
    return next_node
