def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        remaining_nodes = unvisited_nodes - {node}
        if not remaining_nodes:
            return current_dist
        min_future_dist = min(distance_matrix[node][other] for other in remaining_nodes)
        if min_future_dist == 0:
            return current_dist
        ratio = current_dist / min_future_dist
        scale_factor = (len(remaining_nodes)) ** 0.5
        return 0.5 * ratio + 0.5 * (1 / scale_factor)
    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
