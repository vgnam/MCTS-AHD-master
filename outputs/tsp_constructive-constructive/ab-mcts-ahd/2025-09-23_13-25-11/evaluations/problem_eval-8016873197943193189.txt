def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_ratio = len(unvisited_nodes) / (len(unvisited_nodes) + 1)  # Avoid division by zero
    weight_factor = 1 / (1 + math.exp(-10 * (remaining_ratio - 0.5)))  # Sigmoid function

    def weighted_distance(node):
        current_to_next = distance_matrix[current_node][node]
        next_to_dest = distance_matrix[node][destination_node]
        return current_to_next + weight_factor * next_to_dest

    next_node = min(unvisited_nodes, key=weighted_distance)
    return next_node
