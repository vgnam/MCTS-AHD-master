def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining = len(unvisited_nodes)
    alpha = 0.5 * (1 + remaining / (remaining + 1))  # Dynamic weighting factor
    next_node = min(unvisited_nodes, key=lambda node: (
        alpha * distance_matrix[current_node][node] +
        (1 - alpha) * (sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (remaining - 1))
    ))
    return next_node
