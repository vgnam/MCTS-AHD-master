def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    max_dist = max(distances)
    min_dist = min(distances)
    if max_dist == min_dist:
        return max(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    temp = 0.5  # Temperature parameter (adjustable)
    weights = [math.exp(-(max_dist - d) / (temp * (max_dist - min_dist))) for d in distances]
    next_node = random.choices(unvisited_nodes, weights=weights, k=1)[0]
    return next_node
