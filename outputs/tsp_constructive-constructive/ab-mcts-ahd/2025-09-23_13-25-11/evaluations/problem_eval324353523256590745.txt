def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        total_dist = current_dist + dest_dist
        weight = 0.5 + 0.45 * (1 - (dest_dist / total_dist))
        future_potential = min(distance_matrix[node][other] for other in unvisited_nodes - {node}) if unvisited_nodes - {node} else 0
        return weight * current_dist + (1 - weight) * (dest_dist + future_potential)
    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
