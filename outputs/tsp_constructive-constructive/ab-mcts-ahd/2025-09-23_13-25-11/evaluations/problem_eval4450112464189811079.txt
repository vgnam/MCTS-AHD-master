def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)
    weight_future = remaining_nodes / total_nodes
    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        sum_future_dist = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
        if sum_future_dist == 0:
            return current_dist
        ratio = sum_future_dist / (len(unvisited_nodes) - 1)
        return current_dist + weight_future * ratio
    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
