def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    alpha = 1 / (remaining_nodes ** 0.5)  # Dynamic weighting factor

    next_node = min(unvisited_nodes, key=lambda node: (
        (1 - alpha) * (distance_matrix[current_node][node] / sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)) +
        alpha * (-distance_matrix[current_node][node])
    ))
    return next_node
