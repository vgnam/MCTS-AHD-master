def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)
    log_factor = math.log(remaining_nodes + 1) / math.log(total_nodes + 1)
    weight_current = (1 - log_factor) ** 2
    weight_future = log_factor ** 1.5
    penalty_factor = 1 + (1 / (remaining_nodes + 1))
    def heuristic(node):
        current_dist = distance_matrix[current_node][node]
        future_dist = distance_matrix[node][destination_node]
        return (weight_current * current_dist + weight_future * future_dist) * penalty_factor
    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
