def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if len(unvisited_nodes) <= 2:
        next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    else:
        def weighted_distance(node):
            current_to_next = distance_matrix[current_node][node]
            next_to_dest = distance_matrix[node][destination_node]
            weight = 0.5 if len(unvisited_nodes) > 5 else 0.3
            return current_to_next + weight * next_to_dest
        next_node = min(unvisited_nodes, key=weighted_distance)
    return next_node
