def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_ratio = len(unvisited_nodes) / (len(distance_matrix) - 1)
    weight = 1 / (1 + math.exp(-10 * (remaining_ratio - 0.5)))

    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        remaining = unvisited_nodes - {node}
        if not remaining:
            return current_dist
        min_future_dist = min(distance_matrix[node][other] for other in remaining)
        return current_dist + weight * min_future_dist

    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
