def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    num_unvisited = len(unvisited_nodes)
    proximity_weight = 0.5 * (num_unvisited / (num_unvisited + 1))
    alignment_weight = 1 - proximity_weight
    next_node = min(unvisited_nodes, key=lambda node: (
        proximity_weight * distance_matrix[current_node][node] +
        alignment_weight * distance_matrix[node][destination_node] +
        0.2 * (1 / (distance_matrix[node][destination_node] + 1e-6)) * (num_unvisited / (num_unvisited + 1))
    ))
    return next_node
