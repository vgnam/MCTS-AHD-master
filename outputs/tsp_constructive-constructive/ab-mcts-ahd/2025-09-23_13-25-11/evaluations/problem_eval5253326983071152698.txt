def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        if not unvisited_nodes - {node}:
            return current_dist + distance_matrix[node][destination_node]
        future_heuristic = distance_matrix[node][destination_node] * (len(unvisited_nodes) / (len(unvisited_nodes) + 1))
        return current_dist + future_heuristic
    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
