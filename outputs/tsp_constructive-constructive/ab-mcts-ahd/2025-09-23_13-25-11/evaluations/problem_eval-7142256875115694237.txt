def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def heuristic(node):
        current_dist = distance_matrix[current_node][node]
        future_dist = distance_matrix[node][destination_node]
        remaining_nodes = len(unvisited_nodes) - 1
        if remaining_nodes == 0:
            return current_dist
        weight = 1.0 / (1.0 + remaining_nodes)  # Normalized weight
        return current_dist + weight * future_dist
    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
