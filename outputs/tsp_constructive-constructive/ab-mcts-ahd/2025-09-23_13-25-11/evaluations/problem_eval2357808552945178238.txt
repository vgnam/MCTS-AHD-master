def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    weight = 1.0 / (1.0 + total_unvisited)  # Dynamic weight based on remaining nodes

    next_node = min(unvisited_nodes, key=lambda node:
                   (weight * distance_matrix[current_node][node]) +
                   ((1 - weight) * sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)))
    return next_node
