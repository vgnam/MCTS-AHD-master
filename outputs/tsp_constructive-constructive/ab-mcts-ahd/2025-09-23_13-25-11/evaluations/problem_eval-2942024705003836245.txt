def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        remaining_nodes = unvisited_nodes - {node}
        if not remaining_nodes:
            return current_dist
        avg_future_dist = sum(distance_matrix[node][other] for other in remaining_nodes) / len(remaining_nodes)
        weight = 0.7 if len(unvisited_nodes) > len(remaining_nodes) else 0.3
        return current_dist * weight + avg_future_dist * (1 - weight)
    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
