def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    unvisited_count = len(unvisited_nodes)
    weight_immediate = 0.5 + 0.3 * (1 - unvisited_count / len(distance_matrix))
    exploration_weight = 0.3 * (unvisited_count / len(distance_matrix))

    def evaluate_node(node):
        immediate_dist = distance_matrix[current_node][node]
        exploration_term = distance_matrix[node][destination_node] / sum(distance_matrix[node]) if sum(distance_matrix[node]) > 0 else 0
        return weight_immediate * immediate_dist + exploration_weight * exploration_term

    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
