def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    def heuristic(node):
        current_dist = distance_matrix[current_node][node]
        future_dist = distance_matrix[node][destination_node]
        dynamic_weight = 0.3 * (1 - 0.1 * (remaining_nodes / len(distance_matrix)))
        centrality = sum(distance_matrix[node]) / len(distance_matrix)
        return current_dist + dynamic_weight * future_dist + 0.2 * centrality

    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
