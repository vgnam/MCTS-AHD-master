import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_factor = math.exp(-0.3 * (total_unvisited / (total_unvisited + 1))) * random.uniform(0.5, 1.5)
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(1 for neighbor in unvisited_nodes if distance_matrix[node][neighbor] < float('inf')) / total_unvisited
        similarity = sum(1 for neighbor in unvisited_nodes if distance_matrix[neighbor][node] < current_distance) / total_unvisited

        score = (1 - exploration_factor) * (current_distance + 0.3 * future_distance) + exploration_factor * (centrality + 0.2 * similarity)
        score += random.uniform(-0.1, 0.1) * exploration_factor

        if score > best_score:
            best_score = score
            next_node = node
        elif score == best_score:
            if random.random() < 0.5:
                next_node = node

    return next_node
