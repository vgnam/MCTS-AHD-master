importance of the distance from the current node (20%), and resolves ties by choosing the node with the lower total distance to prioritize efficiency.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        total_distance = 0.2 * current_distance + 0.8 * destination_distance

        if total_distance < min_distance:
            min_distance = total_distance
            next_node = node
        elif total_distance == min_distance:
            if total_distance < min_distance:
                next_node = node

    return next_node
