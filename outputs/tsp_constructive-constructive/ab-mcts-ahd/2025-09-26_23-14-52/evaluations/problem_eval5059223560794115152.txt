def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 0.5 * (total_unvisited / (total_unvisited + 1)))
    exploration_factor = 1.0 / (1.0 + 0.3 * (total_unvisited - 1))
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        connectivity = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < current_distance)
        normalized_connectivity = connectivity / (total_unvisited + 1e-6)
        weighted_score = current_distance + 0.8 * future_distance + temperature * (0.7 * connectivity + 0.3 * normalized_connectivity) + exploration_factor * (0.4 * current_distance + 0.6 * future_distance)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if connectivity > sum(1 for n in unvisited_nodes if distance_matrix[next_node][n] < current_distance):
                next_node = node

    return next_node
