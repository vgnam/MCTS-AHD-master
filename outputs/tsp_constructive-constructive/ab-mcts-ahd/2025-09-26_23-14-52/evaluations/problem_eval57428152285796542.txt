def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = 1.0 / len(unvisited_nodes)
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        ratio = current_distance / destination_distance if destination_distance != 0 else float('inf')
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        weighted_score = temperature * (1 / ratio) + (1 - temperature) * (centrality - destination_distance)

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if destination_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
