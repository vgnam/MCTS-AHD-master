import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    exploration_factor = 0.5 + (0.5 * (1 - (total_unvisited / (total_unvisited + 1))))

    destination_x, destination_y = distance_matrix[destination_node]['x'], distance_matrix[destination_node]['y']

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        node_x, node_y = distance_matrix[node]['x'], distance_matrix[node]['y']
        proximity_to_destination = math.sqrt((node_x - destination_x)**2 + (node_y - destination_y)**2)

        weighted_score = (0.2 * current_distance) + (0.5 * future_distance) + (0.3 * proximity_to_destination) + (exploration_factor * random.uniform(0, 1))

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if current_distance < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
