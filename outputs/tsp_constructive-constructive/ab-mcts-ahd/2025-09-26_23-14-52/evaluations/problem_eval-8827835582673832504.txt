def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = 1.0 / len(unvisited_nodes)
    sigmoid_temp = 1.0 / (1.0 + math.exp(-5 * (temperature - 0.5)))
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        penalty = 0.1 * (1.0 / (1.0 + distance_matrix[current_node][node])) if node in unvisited_nodes else 0.0
        weighted_score = (current_distance + penalty) - sigmoid_temp * (centrality - future_distance)

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance > distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
