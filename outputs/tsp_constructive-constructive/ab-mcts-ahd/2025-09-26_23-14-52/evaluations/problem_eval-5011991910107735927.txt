import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    progress_ratio = 1 - (total_unvisited / (total_unvisited + 1))
    sigmoid_factor = 1 / (1 + math.exp(-10 * (progress_ratio - 0.5)))

    best_score = float('-inf')
    next_node = None
    candidates = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        potential_score = (0.3 * current_distance + 0.6 * future_distance) * (1 - sigmoid_factor) + sigmoid_factor * random.uniform(0, 1)

        if potential_score > best_score:
            best_score = potential_score
            next_node = node
            candidates = [node]
        elif potential_score == best_score:
            candidates.append(node)

    if len(candidates) > 1:
        next_node = min(candidates, key=lambda x: distance_matrix[current_node][x] + distance_matrix[x][destination_node])

    return next_node
