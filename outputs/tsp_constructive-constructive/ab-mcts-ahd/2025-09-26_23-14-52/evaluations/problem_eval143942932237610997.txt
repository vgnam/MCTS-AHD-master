def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 if remaining_nodes <= 2 else 0.5
    best_score = float('inf')
    next_node = None
    penalty = {}

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = current_distance + weight_factor * future_distance

        if node in penalty:
            weighted_score += penalty[node]

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    if next_node is not None:
        for node in unvisited_nodes:
            if node != next_node:
                penalty[node] = penalty.get(node, 0) + 0.1

    return next_node
