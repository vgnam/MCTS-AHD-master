def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    novelty_weight = 0.3  # Weight for novelty factor

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        novelty_factor = 1.0 / (1 + len(unvisited_nodes))  # Higher for fewer unvisited nodes
        score = (0.5 * current_distance + 0.3 * destination_distance +
                 novelty_weight * novelty_factor)

        if score < min_score:
            min_score = score
            next_node = node
        elif score == min_score:
            if destination_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
