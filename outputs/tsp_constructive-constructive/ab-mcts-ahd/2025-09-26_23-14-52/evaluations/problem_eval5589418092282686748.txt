import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (total_unvisited / (total_unvisited + 1)))
    exploration_factor = math.exp(-temperature)

    candidates = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        influence_penalty = 1.0 / (1.0 + centrality) if centrality > 0 else 0

        score = current_distance + (1 - temperature) * future_distance + temperature * influence_penalty
        candidates.append((node, score, centrality))

    if random.random() < exploration_factor:
        candidates = sorted(candidates, key=lambda x: x[2], reverse=True)
    else:
        candidates = sorted(candidates, key=lambda x: x[1])

    selected = candidates[0][0]
    if len(candidates) > 1 and random.random() < 0.2:
        selected = random.choice(candidates[1:])[0]

    return next_node
