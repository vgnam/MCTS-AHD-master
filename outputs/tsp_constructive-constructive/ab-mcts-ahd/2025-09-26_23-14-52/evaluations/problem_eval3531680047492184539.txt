def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    exploration_factor = 0.9 - (0.6 * (1 - (total_unvisited / (total_unvisited + 1))))
    weight_future = 0.7 - (0.5 * (1 - (total_unvisited / (total_unvisited + 1))))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = (1 - weight_future) * current_distance + weight_future * future_distance + exploration_factor * random.uniform(0, 1)

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if current_distance < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
