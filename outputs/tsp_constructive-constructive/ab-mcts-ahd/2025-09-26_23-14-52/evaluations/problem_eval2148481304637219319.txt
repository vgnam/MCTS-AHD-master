import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    progress_ratio = (total_unvisited + 1) / (len(distance_matrix) + 1)
    temperature = 1.0 - math.exp(-2.0 * progress_ratio)

    scaling_factor = 1.0 - 0.5 * math.exp(-3.0 * progress_ratio)
    centrality_weight = 0.2 + 0.5 * (1.0 - progress_ratio)

    best_score = float('inf')
    candidates = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited

        weighted_score = (
            current_distance +
            scaling_factor * (future_distance + centrality_weight * centrality)
        )

        candidates.append((node, weighted_score))

    if random.random() < temperature:
        selected = random.choice(candidates)
    else:
        candidates.sort(key=lambda x: x[1])
        selected = candidates[0]

    return next_node
