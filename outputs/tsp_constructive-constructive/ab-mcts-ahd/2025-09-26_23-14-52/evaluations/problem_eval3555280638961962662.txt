def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    weight_factor = 0.7  # Fixed weight for future distance
    penalty_factor = 0.3  # Penalty for revisiting nodes

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        revisit_penalty = penalty_factor * (1 if node in unvisited_nodes else 0)

        score = current_distance + weight_factor * future_distance + revisit_penalty

        if score < best_score:
            best_score = score
            next_node = node
        elif score == best_score:
            if current_distance < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
