def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    temperature = 0.5 * (1 - math.log(total_unvisited + 1) / (total_unvisited + 1))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        weighted_score = current_distance + temperature * (0.6 * current_distance + 0.4 * future_distance) if total_unvisited > len(unvisited_nodes) / 2 else temperature * (0.5 * centrality + 0.5 * future_distance)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
