def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    weight_factor = max(0.1, 1 - (total_unvisited / len(distance_matrix)))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        projected_distance = current_distance + future_distance
        weighted_score = weight_factor * current_distance + (1 - weight_factor) * future_distance

        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node
            min_projected = projected_distance
        elif weighted_score == min_score:
            if projected_distance < min_projected:
                next_node = node
                min_projected = projected_distance

    return next_node
