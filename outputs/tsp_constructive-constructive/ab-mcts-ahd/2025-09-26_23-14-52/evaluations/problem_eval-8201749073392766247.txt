def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    max_distance = max(max(row) for row in distance_matrix)
    density_factor = 1.0 - (remaining_nodes / len(distance_matrix)) ** 2

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        future_dist = distance_matrix[node][destination_node]
        penalty = sum(1.0 / (distance_matrix[node][other] + 1e-6) for other in unvisited_nodes if other != node)
        weighted_score = (1 - density_factor) * current_dist + density_factor * future_dist - 0.5 * penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_dist < distance_matrix[next_node][destination_node]:
                next_node = node
            elif current_dist < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
