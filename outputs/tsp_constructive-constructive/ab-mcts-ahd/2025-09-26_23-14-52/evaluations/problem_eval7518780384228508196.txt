def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (total_unvisited / (total_unvisited + 1)) * 0.9)

    scores = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        novelty = 1.0 / (1.0 + sum(1 for n in unvisited_nodes if n == node)) if total_unvisited > 1 else 0.0

        score = (current_distance + 2 * future_distance) * (1 - novelty) + centrality * novelty
        scores.append(score)

    probabilities = np.exp(-np.array(scores) / temperature)
    probabilities /= probabilities.sum()

    next_node = np.random.choice(unvisited_nodes, p=probabilities)
    return next_node
