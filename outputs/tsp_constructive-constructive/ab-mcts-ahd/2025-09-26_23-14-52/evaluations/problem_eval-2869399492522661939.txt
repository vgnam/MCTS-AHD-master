def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (total_unvisited / (total_unvisited + 1)))
    exploration_factor = 1.0 - temperature
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited

        potential_score = (1 - exploration_factor) * (current_distance + centrality) + exploration_factor * future_distance
        weighted_score = potential_score * (1 + temperature * (0.5 * (centrality / (current_distance + 1e-6))))

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if (centrality / (current_distance + 1e-6)) > (sum(distance_matrix[next_node][n] for n in unvisited_nodes) / (distance_matrix[current_node][next_node] + 1e-6)):
                next_node = node

    return next_node
