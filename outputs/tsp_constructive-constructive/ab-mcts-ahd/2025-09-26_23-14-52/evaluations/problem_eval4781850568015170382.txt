def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = remaining_nodes / (remaining_nodes + 1)  # Dynamic weight based on remaining nodes

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        squared_sum = current_distance**2 + destination_distance**2
        straight_line = distance_matrix[node][destination_node]
        weighted_score = weight * squared_sum + (1 - weight) * straight_line

        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node
        elif weighted_score == min_score:
            if straight_line < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
