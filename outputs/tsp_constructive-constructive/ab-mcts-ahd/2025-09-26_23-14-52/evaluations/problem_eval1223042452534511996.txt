import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    exploration_factor = 1 / (1 + math.exp(-0.5 * (total_unvisited - 5)))

    avg_unvisited_dist = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / total_unvisited

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = 0.45 * current_distance + 0.35 * future_distance + exploration_factor * random.uniform(0.5, 1.5)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if current_distance < avg_unvisited_dist and current_distance < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
