import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    weight_factor = 0.7 * (1 - (total_unvisited / (total_unvisited + 1)) ** 3)
    exploration_factor = 0.2 * (1 - (total_unvisited / (total_unvisited + 1)))

    candidates = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = (current_distance + weight_factor * future_distance) / (1 + current_distance)

        if exploration_factor > 0:
            weighted_score += exploration_factor * random.uniform(0, 1)

        if weighted_score < best_score:
            best_score = weighted_score
            candidates = [node]
        elif weighted_score == best_score:
            candidates.append(node)

    if candidates:
        next_node = random.choice(candidates)

    return next_node
