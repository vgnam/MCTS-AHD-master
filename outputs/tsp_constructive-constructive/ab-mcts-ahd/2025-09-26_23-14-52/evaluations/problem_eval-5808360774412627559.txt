import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_factor = 0.2 + (0.8 * (1 - (total_unvisited / (total_unvisited + 1))))
    destination_distance = distance_matrix[current_node][destination_node]

    candidates = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        score = (0.4 * current_distance + 0.5 * future_distance) * (1 + exploration_factor)
        candidates.append((node, score, current_distance))

    candidates.sort(key=lambda x: x[1], reverse=True)
    best_candidates = [c for c in candidates if c[1] == candidates[0][1]]

    if len(best_candidates) > 1:
        best_candidates.sort(key=lambda x: x[2])
        selected = best_candidates[0][0]
    else:
        selected = best_candidates[0][0]

    if random.random() < exploration_factor:
        selected = random.choice(unvisited_nodes)

    return next_node
