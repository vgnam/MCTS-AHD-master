def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (total_unvisited / len(distance_matrix)))
    node_scores = []

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]

        if dest_dist == 0:
            ratio = float('inf')
        else:
            ratio = current_dist / dest_dist

        centrality = sum(distance_matrix[node]) / (len(distance_matrix) - 1)
        score = (1 - temperature) * ratio + temperature * (1 / centrality)

        node_scores.append((node, score, current_dist, dest_dist))

    if temperature > 0.5:
        selected = min(node_scores, key=lambda x: x[1])
    else:
        selected = min(node_scores, key=lambda x: x[1] * (1 + temperature * (x[2] / (x[3] + 1e-10))))

    return next_node
