import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = 1.0 - math.exp(-0.3 * (total_unvisited / (total_unvisited + 1)))
    alpha = 0.5 + 0.5 * (1 - temperature)
    beta = 0.3 * (1 - temperature)

    candidates = []
    scores = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        score = current_distance + alpha * future_distance + beta * centrality
        candidates.append(node)
        scores.append(score)

    if not candidates:
        return destination_node

    min_score = min(scores)
    max_score = max(scores)
    normalized_scores = [(max_score - s + 1e-6) / (max_score - min_score + 1e-6) for s in scores]

    if temperature > 0.7:
        selected_index = random.choices(range(len(candidates)), weights=normalized_scores, k=1)[0]
    else:
        selected_index = scores.index(min(scores))

    return next_node
