import random
import numpy as np

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_factor = 0.2 * (1.0 - (total_unvisited / (total_unvisited + 1))) + 0.1 * random.uniform(0, 1)

    best_score = float('inf')
    next_node = None
    current_distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    future_distances = [distance_matrix[node][destination_node] for node in unvisited_nodes]
    distance_variance = np.var(current_distances) if len(current_distances) > 1 else 0

    for idx, node in enumerate(unvisited_nodes):
        current_distance = current_distances[idx]
        future_distance = future_distances[idx]
        weighted_score = 0.5 * future_distance + 0.3 * current_distance + 0.2 * (1 / (1 + current_distance)) + exploration_factor * distance_variance

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if current_distance < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
