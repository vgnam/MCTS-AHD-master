import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_decay = math.exp(-0.5 * total_unvisited)
    exploration_factor = 1.0 - exploration_decay

    candidates = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        score = (current_distance + 0.3 * future_distance) * (1 - exploration_factor) + exploration_factor * random.uniform(0, 2)
        candidates.append((node, score))

    candidates.sort(key=lambda x: x[1])
    if len(candidates) > 1 and random.random() < exploration_factor:
        selected = random.choice(candidates[:3])
    else:
        selected = candidates[0]

    return next_node
