def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    node_density = 1.0 / (1.0 + total_unvisited) if total_unvisited > 0 else 0.0
    weight_factor = 1.0 - (1.0 / (1.0 + math.exp(-5.0 * (node_density - 0.5))))

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        penalty = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0

        weighted_score = (1 - weight_factor) * current_distance + weight_factor * future_distance + 0.1 * penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
