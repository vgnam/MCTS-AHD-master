def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    progress = (total_unvisited - len(unvisited_nodes)) / (total_unvisited + 1)
    temperature = 1 / (1 + math.exp(-10 * (progress - 0.5)))

    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        average_unvisited_dist = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        node_potential = future_distance - average_unvisited_dist
        degree = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < float('inf'))

        if progress < 0.5:
            weighted_score = (1 - temperature) * (-current_distance) + temperature * (-node_potential) - 0.5 * degree
        else:
            weighted_score = (1 - temperature) * (-current_distance) + temperature * (node_potential) + 0.5 * degree

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
