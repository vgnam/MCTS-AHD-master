def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_current = 0.6 * (remaining_nodes / (remaining_nodes + 1))
    weight_future = 0.4 * (1 / (remaining_nodes + 1))

    min_weighted_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weighted_distance = weight_current * current_distance + weight_future * distance_to_destination

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node
        elif weighted_distance == min_weighted_distance:
            if distance_matrix[node][destination_node] < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
