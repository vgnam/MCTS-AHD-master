def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weight_current = 2.0 / remaining_nodes
        weight_future = 0.3 * remaining_nodes
        weighted_score = weight_current * current_distance + weight_future * future_distance

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / remaining_nodes
            if avg_distance < sum(distance_matrix[next_node][n] for n in unvisited_nodes) / remaining_nodes:
                next_node = node

    return next_node
