def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    proximity_factor = distance_matrix[current_node][destination_node] / (sum(distance_matrix[current_node]) + 1e-6)
    weight_factor = 0.1 + 0.4 * (1 - proximity_factor) + 0.3 * (1 - (total_unvisited / len(distance_matrix)))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        revisit_penalty = 0.2 * (1 if node in unvisited_nodes else 0)
        weighted_score = current_distance + weight_factor * future_distance + revisit_penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
