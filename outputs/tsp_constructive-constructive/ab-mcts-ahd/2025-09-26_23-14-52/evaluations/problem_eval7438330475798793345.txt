def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        total_distance = current_distance + destination_distance

        # Additional consideration: distance to nearest unvisited neighbor
        nearest_neighbor_distance = min(
            distance_matrix[node][neighbor] for neighbor in unvisited_nodes if neighbor != node
        ) if len(unvisited_nodes) > 1 else 0

        weighted_distance = total_distance + 0.5 * nearest_neighbor_distance

        if weighted_distance < min_distance:
            min_distance = weighted_distance
            next_node = node
        elif weighted_distance == min_distance:
            if destination_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
