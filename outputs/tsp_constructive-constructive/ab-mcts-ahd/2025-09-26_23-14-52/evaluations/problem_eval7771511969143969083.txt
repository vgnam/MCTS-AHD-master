def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 0.5 * (total_unvisited / (total_unvisited + 1)))

    scores = []
    novelty_scores = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0

        novelty = 1.0 / (1.0 + current_distance) if current_distance > 0 else 0
        weighted_score = (1.5 * current_distance + 0.4 * future_distance + 0.1 * avg_distance) * temperature
        scores.append(weighted_score)
        novelty_scores.append(novelty)

    combined_scores = [s * (1 - novelty) for s, novelty in zip(scores, novelty_scores)]

    if temperature > 0.3:
        selected_index = combined_scores.index(min(combined_scores))
    else:
        selected_index = combined_scores.index(min(combined_scores))

    return next_node
