def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    weight = 0.4 if total_unvisited > len(unvisited_nodes) * 0.7 else 0.7

    for node in unvisited_nodes:
        euclidean_dist = distance_matrix[current_node][node]
        inv_unvisited = 1.0 / (total_unvisited + 1)
        future_dist = distance_matrix[node][destination_node]
        closeness_penalty = 0.1 if future_dist < 0.2 * max(distance_matrix[node]) else 0

        hybrid_score = euclidean_dist + weight * (inv_unvisited + closeness_penalty)

        if hybrid_score < min_score:
            min_score = hybrid_score
            next_node = node

    return next_node
