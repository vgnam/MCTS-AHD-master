def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    weight_factor = 1.0 / (1 + total_unvisited)
    temperature = (total_nodes - total_unvisited) / total_nodes
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        weighted_score = (1 - weight_factor) * current_distance + weight_factor * future_distance + temperature * centrality

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if centrality < sum(distance_matrix[next_node][n] for n in unvisited_nodes) / total_unvisited:
                next_node = node

    return next_node
