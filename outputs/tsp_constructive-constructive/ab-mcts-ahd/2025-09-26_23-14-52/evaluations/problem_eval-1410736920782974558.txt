def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_ratio = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        ratio = current_distance / destination_distance if destination_distance != 0 else float('inf')
        total_distance = current_distance + destination_distance
        weighted_distance = 0.5 * current_distance + 0.5 * destination_distance

        if ratio < min_ratio:
            min_ratio = ratio
            next_node = node
            min_total = total_distance
            min_weighted = weighted_distance
        elif ratio == min_ratio:
            if total_distance < min_total:
                next_node = node
                min_total = total_distance
                min_weighted = weighted_distance
            elif total_distance == min_total:
                if weighted_distance < min_weighted:
                    next_node = node
                    min_weighted = weighted_distance
                elif weighted_distance == min_weighted:
                    if destination_distance < distance_matrix[next_node][destination_node]:
                        next_node = node

    return next_node
