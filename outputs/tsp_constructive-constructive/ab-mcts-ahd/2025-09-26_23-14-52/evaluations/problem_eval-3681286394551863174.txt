import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    exploration_temp = 1.0 / (1.0 + math.exp(-(num_unvisited / 10 - 2)))
    current_weight = 0.7 + 0.3 * (1 - exploration_temp)
    future_weight = 0.3 + 0.4 * exploration_temp
    centrality_weight = 0.2 * exploration_temp

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (num_unvisited - 1) if num_unvisited > 1 else 0

        weighted_score = (current_weight * current_distance +
                         future_weight * future_distance +
                         centrality_weight * centrality +
                         exploration_temp * random.uniform(-0.1, 0.1))

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
