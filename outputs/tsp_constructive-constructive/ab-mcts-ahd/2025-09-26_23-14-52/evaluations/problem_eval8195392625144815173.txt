import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_factor = 0.15 * (1 - math.exp(-total_unvisited / 10))

    max_distance = max(max(row) for row in distance_matrix)
    normalized_distance = [[d / max_distance for d in row] for row in distance_matrix]

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = normalized_distance[current_node][node]
        future_distance = normalized_distance[node][destination_node]
        weighted_score = 0.5 * current_distance + 0.35 * future_distance + exploration_factor * random.uniform(0, 1)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < normalized_distance[next_node][destination_node]:
                next_node = node

    return next_node
