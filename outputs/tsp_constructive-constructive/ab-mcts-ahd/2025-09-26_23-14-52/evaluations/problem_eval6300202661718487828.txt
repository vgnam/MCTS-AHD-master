def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        if remaining_nodes > 5:
            weight = 0.7
        elif remaining_nodes > 2:
            weight = 0.5
        else:
            weight = 0.3

        penalty = 0.2 * (future_distance / (current_distance + 1e-10)) ** 2
        weighted_score = weight * current_distance + future_distance + penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if current_distance < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
