def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    dynamic_weight = 0.7 + 0.3 * (1 - num_unvisited / len(distance_matrix))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / num_unvisited
        total_distance = current_distance + dynamic_weight * destination_distance + 0.2 * avg_distance

        if total_distance < min_distance:
            min_distance = total_distance
            next_node = node
        elif total_distance == min_distance:
            if total_distance > min_distance:
                next_node = node

    return next_node
