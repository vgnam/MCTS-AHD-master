def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, memory=None):
    if not unvisited_nodes:
        return destination_node

    if memory is None:
        memory = {node: 0 for node in unvisited_nodes}

    best_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    weight_factor = max(0.4, 1.0 - (num_unvisited / (num_unvisited + 5)))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        memory_factor = memory[node] * 0.2
        weighted_score = (1.0 - weight_factor) * current_distance + weight_factor * future_distance + memory_factor

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    if next_node is not None:
        memory[next_node] += 1

    return next_node
