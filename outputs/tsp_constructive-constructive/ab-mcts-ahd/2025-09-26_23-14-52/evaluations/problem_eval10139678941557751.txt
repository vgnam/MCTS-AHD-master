import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    exploration_decay = 1.0 / (1.0 + math.exp(-(total_unvisited - 5)))
    proximity_penalty = 0.3 * (1.0 / (1.0 + math.exp(-0.5 * distance_matrix[current_node][destination_node])))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        penalty = 0.2 * (1.0 / (1.0 + math.exp(-current_distance))) if current_distance < 0.5 * distance_matrix[current_node][destination_node] else 0
        weighted_score = current_distance + 0.6 * future_distance + exploration_decay * random.uniform(0, 1) + penalty + proximity_penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
