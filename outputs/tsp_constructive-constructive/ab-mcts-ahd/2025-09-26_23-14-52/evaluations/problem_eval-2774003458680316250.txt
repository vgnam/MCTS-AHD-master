import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    weight_factor = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
    exploration_factor = 1.0 - (0.5 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1)))
    current_weight = 1.0
    future_weight = 0.5 + (0.3 * (1.0 - exploration_factor))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        squared_sum = current_distance**2 + future_distance**2
        weighted_score = (current_weight * (weight_factor * current_distance + (1 - weight_factor) * squared_sum)) + (future_weight * future_distance) + exploration_factor * random.uniform(0, 1)

        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node
        elif weighted_score == min_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
