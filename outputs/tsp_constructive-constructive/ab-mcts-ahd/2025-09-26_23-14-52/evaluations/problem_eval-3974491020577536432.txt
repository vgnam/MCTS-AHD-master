def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        ratio = current_distance / (future_distance + 1e-10)
        penalty = 0.2 * (future_distance / (current_distance + 1e-10)) ** 2
        weighted_score = 0.5 * current_distance + ratio - penalty
        weighted_distance = 0.6 * current_distance + 0.4 * future_distance

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
            min_weighted = weighted_distance
        elif weighted_score == best_score:
            if weighted_distance < min_weighted:
                next_node = node
                min_weighted = weighted_distance
            elif weighted_distance == min_weighted:
                if future_distance < distance_matrix[next_node][destination_node]:
                    next_node = node

    return next_node
