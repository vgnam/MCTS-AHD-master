import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = 0.5 * (total_unvisited / (total_unvisited + 1)) ** 3
    current_weight = 0.8 - 0.5 * (total_unvisited / (total_unvisited + 1))
    future_weight = 0.2 + 0.5 * (total_unvisited / (total_unvisited + 1))

    scores = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = current_weight * current_distance + future_weight * future_distance
        scores.append((node, weighted_score))

    if temperature > 0:
        exp_scores = [math.exp(-score / temperature) for _, score in scores]
        sum_exp = sum(exp_scores)
        probabilities = [exp / sum_exp for exp in exp_scores]
        next_node = random.choices([node for node, _ in scores], weights=probabilities, k=1)[0]
    else:
        next_node = min(scores, key=lambda x: x[1])[0]

    return next_node
