import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    progress_factor = 1 - (total_unvisited / (total_unvisited + 1))
    sigmoid_factor = 1 / (1 + math.exp(-5 * (progress_factor - 0.5)))

    best_score = float('-inf')
    next_node = None
    penalty = 0.1 * (1 - sigmoid_factor)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        weighted_score = (sigmoid_factor * current_distance) + ((1 - sigmoid_factor) * future_distance)
        weighted_score += penalty * random.uniform(0, 1)

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance > distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
