import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    exploration_factor = 1.0 - (0.5 * (total_unvisited / (total_unvisited + 1)))
    current_weight = 1.0
    future_weight = 0.5 + (0.3 * (1.0 - exploration_factor))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        combined_score = current_weight * current_distance + future_weight * future_distance + exploration_factor * random.uniform(0, 1)
        sum_score = current_distance + future_distance

        if combined_score < min_score:
            min_score = combined_score
            next_node = node
        elif combined_score == min_score:
            if sum_score < (distance_matrix[current_node][next_node] + distance_matrix[next_node][destination_node]):
                next_node = node
            elif sum_score == (distance_matrix[current_node][next_node] + distance_matrix[next_node][destination_node]):
                if future_distance < distance_matrix[next_node][destination_node]:
                    next_node = node

    return next_node
