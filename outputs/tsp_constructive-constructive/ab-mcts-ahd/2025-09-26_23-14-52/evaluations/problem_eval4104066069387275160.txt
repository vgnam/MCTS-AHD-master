def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    weight_factor = 1.0 - (total_unvisited / (total_unvisited + 2)) ** 1.5

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        proximity_penalty = 1.0 / (1.0 + current_distance)
        normalized_score = (current_distance + weight_factor * future_distance) / (1 + future_distance + proximity_penalty)

        if normalized_score > best_score:
            best_score = normalized_score
            next_node = node
        elif normalized_score == best_score:
            if current_distance < distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
