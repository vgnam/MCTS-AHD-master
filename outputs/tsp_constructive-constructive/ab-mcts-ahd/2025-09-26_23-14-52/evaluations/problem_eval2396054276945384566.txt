def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    temperature = 1.0 - math.exp(-0.3 * (total_unvisited / (total_unvisited + 1)))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(1 for neighbor in unvisited_nodes if distance_matrix[node][neighbor] < float('inf')) / total_unvisited
        exploration_factor = temperature * (1 - centrality) * random.uniform(0.5, 1.5)
        weighted_score = (current_distance + 0.3 * future_distance) * (1 - temperature) + exploration_factor

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
