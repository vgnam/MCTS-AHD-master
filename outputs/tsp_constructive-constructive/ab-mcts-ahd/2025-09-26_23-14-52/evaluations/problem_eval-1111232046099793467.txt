def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_weighted = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        ratio = current_distance / destination_distance if destination_distance != 0 else float('inf')
        weighted_distance = 0.7 * current_distance + 0.3 * destination_distance

        if weighted_distance < min_weighted:
            min_weighted = weighted_distance
            next_node = node
            min_ratio = ratio
        elif weighted_distance == min_weighted:
            if ratio < min_ratio:
                next_node = node
                min_ratio = ratio
            elif ratio == min_ratio:
                if destination_distance < distance_matrix[next_node][destination_node]:
                    next_node = node

    return next_node
