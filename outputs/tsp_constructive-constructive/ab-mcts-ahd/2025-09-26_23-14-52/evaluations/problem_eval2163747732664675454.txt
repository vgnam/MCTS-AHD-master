def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = 1.0 / (1.0 + 0.1 * total_unvisited)
    exploration_factor = 0.5 * (1.0 - temperature)

    scores = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 0
        weighted_score = (1.0 * current_distance + 0.5 * future_distance + 0.2 * avg_distance) * (1.0 - exploration_factor)
        scores.append((node, weighted_score))

    probabilities = []
    sum_exp_scores = sum(math.exp(-score[1] / temperature) for score in scores)
    for node, score in scores:
        probability = math.exp(-score[1] / temperature) / sum_exp_scores
        probabilities.append((node, probability))

    rand_val = random.random()
    cumulative_prob = 0.0
    for node, prob in probabilities:
        cumulative_prob += prob
        if rand_val <= cumulative_prob:
            return node
    return next_node
