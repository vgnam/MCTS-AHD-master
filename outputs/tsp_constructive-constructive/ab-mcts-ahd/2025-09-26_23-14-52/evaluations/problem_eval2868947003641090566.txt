def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        total_distance = current_distance + destination_distance

        # Calculate the angle between current_node, node, and destination_node
        # Using the dot product formula to compute the angle
        vec1 = (distance_matrix[current_node][node], 0)
        vec2 = (distance_matrix[node][destination_node], 0)
        dot_product = vec1[0] * vec2[0] + vec1[1] * vec2[1]
        magnitude1 = (vec1[0]**2 + vec1[1]**2)**0.5
        magnitude2 = (vec2[0]**2 + vec2[1]**2)**0.5
        angle = 0 if magnitude1 == 0 or magnitude2 == 0 else dot_product / (magnitude1 * magnitude2)

        # Combine distance and angle to form a score
        score = total_distance / (1 + angle)

        if score < min_score:
            min_score = score
            next_node = node
        elif score == min_score:
            if destination_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
