def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    max_ratio = -float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        ratio = destination_distance / current_distance if current_distance != 0 else float('inf')
        weighted_distance = 0.4 * current_distance + 0.6 * destination_distance

        if ratio > max_ratio:
            max_ratio = ratio
            next_node = node
            min_weighted = weighted_distance
        elif ratio == max_ratio:
            if weighted_distance < min_weighted:
                next_node = node
                min_weighted = weighted_distance
            elif weighted_distance == min_weighted:
                if destination_distance < distance_matrix[next_node][destination_node]:
                    next_node = node

    return next_node
