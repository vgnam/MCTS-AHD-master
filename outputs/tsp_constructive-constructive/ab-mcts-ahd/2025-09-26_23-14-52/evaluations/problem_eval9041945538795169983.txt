import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_factor = 0.9 * (total_unvisited / (total_unvisited + 1)) ** 2

    candidates = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        exploration_bias = exploration_factor * math.sqrt(random.uniform(0, 1))

        weighted_score = 0.45 * current_distance + 0.35 * future_distance + 0.2 * exploration_bias
        candidates.append((node, weighted_score, current_distance))

    candidates.sort(key=lambda x: (x[1], x[2]))

    if len(candidates) > 1 and random.random() < 0.3:
        return random.choice(candidates[:3])[0]
    else:
        return next_node
