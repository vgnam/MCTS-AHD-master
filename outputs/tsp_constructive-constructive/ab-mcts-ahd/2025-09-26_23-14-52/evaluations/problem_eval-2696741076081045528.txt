def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 0.9 * (total_unvisited / (total_unvisited + 1)))
    scores = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        degree = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < float('inf'))
        exploration_score = (1 - temperature) * (-current_distance) + temperature * (0.6 * centrality + 0.4 * degree)
        exploitation_score = -future_distance
        combined_score = 0.7 * exploration_score + 0.3 * exploitation_score
        scores.append((node, combined_score))

    if not scores:
        return destination_node

    max_score = max(score for _, score in scores)
    candidates = [node for node, score in scores if score == max_score]

    if len(candidates) == 1:
        return candidates[0]
    else:
        return next_node
