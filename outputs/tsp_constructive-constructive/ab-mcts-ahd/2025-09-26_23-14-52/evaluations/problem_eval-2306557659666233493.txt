import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_factor = math.exp(-0.3 * (total_unvisited / (total_unvisited + 1)))
    novelty_penalty = {node: 0.1 * random.random() for node in unvisited_nodes}
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        connectivity = sum(1 for neighbor in unvisited_nodes if distance_matrix[node][neighbor] < float('inf')) / total_unvisited
        novelty = novelty_penalty[node]

        weighted_score = (0.6 * (1 / (1 + current_distance)) + 0.3 * (1 / (1 + future_distance))) * (1 - exploration_factor) - novelty

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if connectivity > sum(1 for neighbor in unvisited_nodes if distance_matrix[next_node][neighbor] < float('inf')) / total_unvisited:
                next_node = node

    return next_node
