def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (total_unvisited / (total_unvisited + 2)))
    weight_factor = 1.0 - (total_unvisited / (total_unvisited + 1)) ** 2

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        normalized_score = (current_distance + weight_factor * future_distance) / (1 + future_distance)
        adjusted_score = (1 - temperature) * (-current_distance) + temperature * normalized_score

        if adjusted_score > best_score:
            best_score = adjusted_score
            next_node = node
        elif adjusted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
