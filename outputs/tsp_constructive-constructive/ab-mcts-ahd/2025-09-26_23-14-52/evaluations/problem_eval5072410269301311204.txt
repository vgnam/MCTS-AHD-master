def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_progress = 1.0 - (total_unvisited / (total_unvisited + 1))
    temperature = 0.5 * (1.0 - exploration_progress)
    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        avg_distance_to_others = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (total_unvisited - 1) if total_unvisited > 1 else 0
        distance_penalty = 0.3 * avg_distance_to_others
        weighted_score = (exploration_progress * current_distance + (1.0 - exploration_progress) * future_distance) + temperature * distance_penalty

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if avg_distance_to_others < sum(distance_matrix[next_node][n] for n in unvisited_nodes if n != next_node) / (total_unvisited - 1) if total_unvisited > 1 else 0:
                next_node = node

    return next_node
