def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (total_unvisited / len(distance_matrix)))
    candidates = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        ratio = current_distance / destination_distance if destination_distance != 0 else float('inf')
        weighted_distance = temperature * current_distance + (1 - temperature) * destination_distance
        candidates.append((node, ratio, weighted_distance))

    candidates.sort(key=lambda x: (x[1], x[2]))

    if len(candidates) == 1:
        return candidates[0][0]

    probabilities = [1.0 / (i + 1) for i in range(len(candidates))]
    probabilities = [p / sum(probabilities) for p in probabilities]
    selected_index = np.random.choice(len(candidates), p=probabilities)
    return next_node
