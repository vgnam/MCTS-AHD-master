import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    max_unvisited = max(1, total_unvisited)  # Avoid division by zero
    weight_factor = 1 / (1 + math.exp(-0.1 * (total_unvisited - max_unvisited / 2)))
    exploration_factor = 0.2 * (1 - total_unvisited / max_unvisited)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = (current_distance + weight_factor * future_distance) / (1 + 0.5 * future_distance) + exploration_factor * random.uniform(0, 1)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if future_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
