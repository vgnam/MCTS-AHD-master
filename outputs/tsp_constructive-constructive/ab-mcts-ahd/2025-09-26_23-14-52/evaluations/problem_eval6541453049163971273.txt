def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (total_unvisited ** 0.5) / ((total_unvisited + 1) ** 0.5))
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / total_unvisited
        path_potential = sum(distance_matrix[n][m] for n in unvisited_nodes for m in unvisited_nodes if n != m) / (total_unvisited * (total_unvisited - 1))
        exploration_factor = (1 - temperature) * centrality * path_potential
        exploitation_factor = temperature * (current_distance + future_distance)
        combined_score = exploration_factor / (exploitation_factor + 1e-6)

        if combined_score > best_score:
            best_score = combined_score
            next_node = node
        elif combined_score == best_score:
            if centrality * path_potential > sum(distance_matrix[next_node][n] for n in unvisited_nodes) / total_unvisited * sum(distance_matrix[n][m] for n in unvisited_nodes for m in unvisited_nodes if n != m) / (total_unvisited * (total_unvisited - 1)):
                next_node = node

    return next_node
