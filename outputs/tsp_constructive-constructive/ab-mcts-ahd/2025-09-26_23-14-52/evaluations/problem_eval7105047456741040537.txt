def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        weight_current = 1.0 / (remaining_nodes ** 2 + 1)
        weight_future = 1.0 - weight_current

        penalty = 0.2 * (current_distance / (future_distance + 1e-10)) ** 2
        score = (weight_future * future_distance) - (weight_current * current_distance) - penalty

        if score > best_score:
            best_score = score
            next_node = node
        elif score == best_score:
            if current_distance > distance_matrix[current_node][next_node]:
                next_node = node

    return next_node
