def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 - (0.5 * (remaining_nodes / len(distance_matrix)))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        total_distance = current_distance + weight_factor * destination_distance

        if total_distance < min_distance:
            min_distance = total_distance
            next_node = node
        elif total_distance == min_distance:
            node_centrality = sum(distance_matrix[node]) / len(distance_matrix[node])
            next_node_centrality = sum(distance_matrix[next_node]) / len(distance_matrix[next_node])
            if node_centrality < next_node_centrality:
                next_node = node

    return next_node
