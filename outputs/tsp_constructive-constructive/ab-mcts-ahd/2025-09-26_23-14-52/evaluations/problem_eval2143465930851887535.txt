import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = 1.0 - (0.9 * (1.0 - (total_unvisited / len(distance_matrix))))

    node_popularity = {node: 0 for node in unvisited_nodes}
    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        # Novel distance metric with temperature
        distance_score = (current_distance + future_distance) / (1.0 + temperature)

        # Novelty bonus and diversity penalty
        novelty_bonus = 1.0 / (1.0 + node_popularity[node])
        path_diversity = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / max(1, len(unvisited_nodes)-1)

        # Combined score with randomness
        combined_score = (distance_score * (1.0 - temperature)) + (novelty_bonus * temperature) - (0.1 * path_diversity) + random.uniform(-0.05, 0.05)

        if combined_score > best_score:
            best_score = combined_score
            next_node = node
            node_popularity[node] += 1

    return next_node
