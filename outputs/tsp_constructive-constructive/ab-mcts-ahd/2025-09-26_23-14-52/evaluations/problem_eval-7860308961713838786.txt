import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = 1.0 / (1.0 + math.exp(-0.5 * (total_unvisited - 5)))  # Sigmoid-based temperature

    best_score = float('-inf')
    next_node = None
    candidates = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        regret = sum(max(0, distance_matrix[node][n] - current_distance) for n in unvisited_nodes if n != node) / (total_unvisited - 1)

        weighted_score = (0.5 * current_distance + 0.3 * future_distance + 0.2 * regret) + temperature * random.uniform(-0.1, 0.1)

        if weighted_score > best_score:
            best_score = weighted_score
            next_node = node
            candidates = [node]
        elif weighted_score == best_score:
            candidates.append(node)

    if len(candidates) > 1:
        next_node = random.choice(candidates)

    return next_node
