def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # +1 for the current node
    current_weight = 0.5 + 0.2 * (remaining_nodes / total_nodes)
    destination_weight = 1 - current_weight

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Penalty for revisiting nodes (if applicable)
        penalty = 0.1 * (1 if node == current_node else 0)

        score = (current_weight * current_distance +
                 destination_weight * destination_distance +
                 penalty)

        if score < min_score:
            min_score = score
            next_node = node
        elif score == min_score:
            if destination_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
