def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_weighted_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        avg_future_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0
        weighted_distance = 0.6 * current_distance + 0.4 * avg_future_distance

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node
        elif weighted_distance == min_weighted_distance:
            if avg_future_distance > distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
