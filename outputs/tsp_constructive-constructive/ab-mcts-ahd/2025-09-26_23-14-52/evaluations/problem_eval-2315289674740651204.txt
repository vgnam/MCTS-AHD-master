import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    exploration_factor = 0.20 * (1 - math.exp(-total_unvisited / (total_unvisited + 1)))

    node_scores = []
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = 0.5 * current_distance + 0.3 * future_distance + exploration_factor * random.uniform(0, 1)
        node_scores.append((node, weighted_score))

    node_scores.sort(key=lambda x: x[1])
    ranked_nodes = [node for node, _ in node_scores]

    temperature = 1.0 / (1 + total_unvisited)
    selection_probabilities = [math.exp(-i * temperature) for i in range(len(ranked_nodes))]
    selection_probabilities = [p / sum(selection_probabilities) for p in selection_probabilities]

    next_node = random.choices(ranked_nodes, weights=selection_probabilities, k=1)[0]
    return next_node
