def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        if remaining_nodes < 5:
            weighted_score = 0.3 * current_distance + 1.7 * future_distance
        else:
            weighted_score = 0.5 * current_distance + 1.5 * future_distance

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if (current_distance / future_distance) < (distance_matrix[current_node][next_node] / distance_matrix[next_node][destination_node]):
                next_node = node

    return next_node
