def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_product = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    balance_factor = max(0.1, (total_unvisited / len(distance_matrix)))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        product = current_distance * destination_distance
        adjusted_product = balance_factor * product + (1 - balance_factor) * (current_distance + destination_distance)

        if adjusted_product < min_product:
            min_product = adjusted_product
            next_node = node
        elif adjusted_product == min_product:
            if destination_distance < distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
