import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    exploration_factor = 1.0 - (0.7 * (total_unvisited / (total_unvisited + 1)))

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = 0.25 * current_distance + 0.6 * future_distance + exploration_factor * random.uniform(0.15, 0.25)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            min_distance = min(distance_matrix[node][n] for n in unvisited_nodes if n != node)
            next_min_distance = min(distance_matrix[next_node][n] for n in unvisited_nodes if n != next_node)
            if min_distance < next_min_distance:
                next_node = node

    return next_node
