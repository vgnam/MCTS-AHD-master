def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1
    progress_factor = (total_nodes - len(unvisited_nodes)) / total_nodes
    weight_factor = 1.0 - progress_factor
    future_weight = progress_factor

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = (weight_factor * current_distance) + (future_weight * future_distance)

        if weighted_score < best_score:
            best_score = weighted_score
            next_node = node
        elif weighted_score == best_score:
            if (current_distance < distance_matrix[next_node][current_node]) or (future_distance < distance_matrix[next_node][destination_node]):
                next_node = node

    return next_node
