import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    temperature = math.exp(-0.3 * (total_unvisited / (total_unvisited + 1)))
    scores = []

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(1 for neighbor in unvisited_nodes if distance_matrix[node][neighbor] < float('inf')) / total_unvisited
        distance_score = (current_distance + 0.7 * future_distance) * (1 - temperature)
        centrality_score = temperature * (1 - centrality) * random.uniform(0.5, 1.5)
        total_score = distance_score + centrality_score
        scores.append((node, total_score))

    scores.sort(key=lambda x: x[1])
    selected_node = scores[0][0]

    if len(scores) > 1 and random.random() < temperature:
        selected_node = random.choices(
            [node for node, score in scores],
            weights=[1 / (score + 1e-6) for node, score in scores],
            k=1
        )[0]

    return next_node
