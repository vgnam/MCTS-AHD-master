def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    
    distances_to_unvisited = [distance_matrix[current_node][node] for node in unvisited_nodes]
    max_distance = max(distances_to_unvisited)
    farthest_node = unvisited_nodes[distances_to_unvisited.index(max_distance)]
    
    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        avg_distance = sum(distances_to_unvisited) / len(distances_to_unvisited)
        threshold = avg_distance + (max_distance - avg_distance) * 0.3
        weight = 1 / (1 + (destination_distance / threshold) ** 2)
        next_node = farthest_node if weight < 0.5 else destination_node
    else:
        next_node = farthest_node
    
    return next_node
