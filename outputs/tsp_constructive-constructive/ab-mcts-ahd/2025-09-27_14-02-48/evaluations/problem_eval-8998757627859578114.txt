import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    exploration_factor = 0.5
    step_size = 0.05
    cooling_rate = 0.95

    min_distance = float('inf')
    nearest_neighbor = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            nearest_neighbor = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
    else:
        destination_distance = float('inf')

    while exploration_factor > 0.01:
        if random.random() < exploration_factor:
            next_node = random.choice(list(unvisited_nodes))
        else:
            if destination_distance < min_distance:
                next_node = destination_node
            else:
                next_node = nearest_neighbor

        if next_node not in unvisited_nodes:
            exploration_factor -= step_size
            continue

        if next_node == destination_node or random.random() < (min_distance - distance_matrix[current_node][next_node]) / (exploration_factor * 10):
            return next_node

        exploration_factor -= step_size

    return next_node
