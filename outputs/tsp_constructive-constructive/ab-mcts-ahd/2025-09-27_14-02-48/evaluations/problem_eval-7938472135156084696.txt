def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    
    # Calculate the average distance to other unvisited nodes
    sum_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    avg_distance = sum_distance / len(unvisited_nodes)
    
    max_score = float('-inf')
    next_node = None
    
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        score = (1 / distance_to_current) * distance_to_destination * (distance_to_destination / avg_distance)
        
        if score > max_score:
            max_score = score
            next_node = node
    
    # Special handling for the destination node
    if destination_node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][destination_node]
        if distance_to_current < distance_matrix[current_node][next_node]:
            next_node = destination_node
    
    return next_node
