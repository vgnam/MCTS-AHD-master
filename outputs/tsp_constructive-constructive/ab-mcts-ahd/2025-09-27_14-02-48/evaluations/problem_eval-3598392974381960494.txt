def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = list(unvisited_nodes)
    if destination_node in candidates:
        candidates.append(destination_node)

    weights = []
    for node in candidates:
        remaining_nodes = unvisited_nodes - {node}
        if destination_node in remaining_nodes:
            remaining_nodes.remove(destination_node)

        if not remaining_nodes:
            total = distance_matrix[current_node][node] + distance_matrix[node][destination_node]
        else:
            total = distance_matrix[current_node][node]
            for next_node_candidate in remaining_nodes:
                total += distance_matrix[node][next_node_candidate]
            total += distance_matrix[next_node_candidate][destination_node]

        weights.append(1.0 / total if total > 0 else float('inf'))

    if sum(weights) == 0:
        return candidates[0]

    next_node = random.choices(candidates, weights=weights, k=1)[0]
    return next_node
