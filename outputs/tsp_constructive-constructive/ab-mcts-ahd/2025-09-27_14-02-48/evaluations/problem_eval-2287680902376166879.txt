import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    
    temperature = 100
    cooling_rate = 0.95
    
    while temperature > 1:
        k = max(2, int(len(unvisited_nodes) * (temperature / 100)))
        nearest_neighbors = sorted(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])[:k]
        
        min_distance = float('inf')
        nearest_neighbor = None
        for node in unvisited_nodes:
            distance = distance_matrix[current_node][node]
            if distance < min_distance:
                min_distance = distance
                nearest_neighbor = node
        
        if destination_node in unvisited_nodes:
            destination_distance = distance_matrix[current_node][destination_node]
        else:
            destination_distance = float('inf')
        
        if random.random() < temperature / 100:
            next_node = random.choice(nearest_neighbors)
        else:
            if destination_distance < min_distance:
                next_node = destination_node
            else:
                next_node = nearest_neighbor
        
        if next_node not in unvisited_nodes:
            temperature *= cooling_rate
            continue
        
        priority = 1 if next_node == destination_node else 0
        if random.random() < math.exp((min_distance - distance_matrix[current_node][next_node] + priority) / temperature):
            return next_node
        
        temperature *= cooling_rate
    
    return next_node
