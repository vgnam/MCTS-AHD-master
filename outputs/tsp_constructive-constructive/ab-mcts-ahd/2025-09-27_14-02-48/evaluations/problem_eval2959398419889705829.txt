import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    
    distances = {node: distance_matrix[current_node][node] for node in unvisited_nodes}
    destination_distance = distance_matrix[current_node][destination_node] if destination_node in unvisited_nodes else float('inf')
    max_distance = max(distances.values())
    
    closest_nodes = [node for node, distance in distances.items() if distance >= max_distance * 0.8]
    scores = {}
    for node in closest_nodes:
        score = distances[node] 
        if node == destination_node:
            score *= 0.5  # Decrease the score for the destination node
        scores[node] = score
    
    total_score = sum(scores.values())
    probabilities = {node: (1 - (score / total_score)) / (len(scores) - 1) for node, score in scores.items()}
    
    next_node = random.choices(list(probabilities.keys()), weights=probabilities.values(), k=1)[0]
    
    if destination_distance < distances[next_node]:
        next_node = destination_node
    
    return next_node
