import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = 100
    cooling_rate = 0.95
    min_total = float('inf')
    next_node = None

    while temperature > 1:
        candidate_nodes = list(unvisited_nodes)
        if destination_node in candidate_nodes:
            candidate_nodes.append(destination_node)

        for node in candidate_nodes:
            remaining_nodes = unvisited_nodes - {node}
            if destination_node in remaining_nodes:
                remaining_nodes.remove(destination_node)

            if not remaining_nodes:
                total = distance_matrix[current_node][node] + distance_matrix[node][destination_node]
            else:
                total = distance_matrix[current_node][node]
                for next_node_candidate in remaining_nodes:
                    total += distance_matrix[node][next_node_candidate]
                total += distance_matrix[next_node_candidate][destination_node]

            if total < min_total or (random.random() < math.exp((min_total - total) / temperature)):
                min_total = total
                next_node = node

        if next_node is not None:
            return next_node

        temperature *= cooling_rate

    if next_node is None:
        next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    return next_node
