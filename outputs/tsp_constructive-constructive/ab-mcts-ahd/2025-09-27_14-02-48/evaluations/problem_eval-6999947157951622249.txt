def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    max_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        normalized_distance_to_current = distance_to_current / max(1, max(distance_matrix[current_node][n] for n in unvisited_nodes))
        normalized_distance_to_destination = distance_to_destination / max(1, max(distance_matrix[n][destination_node] for n in unvisited_nodes))
        score = 0.7 * (1 - normalized_distance_to_current) + 0.3 * (1 - normalized_distance_to_destination)

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
