import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = 50
    distances = {node: distance_matrix[current_node][node] for node in unvisited_nodes}
    min_distance = min(distances.values())

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
    else:
        destination_distance = float('inf')

    weights = {node: math.exp(-distance_matrix[current_node][node] / temperature) for node in unvisited_nodes}
    total_weight = sum(weights.values())
    probabilities = {node: weight / total_weight for node, weight in weights.items()}
    next_node = random.choices(list(unvisited_nodes), weights=list(probabilities.values()), k=1)[0]

    acceptance_threshold = 0.9 - 0.1 * (distance_matrix[current_node][next_node] / min_distance)
    if next_node == destination_node or random.random() < acceptance_threshold:
        return next_node

    return next_node
