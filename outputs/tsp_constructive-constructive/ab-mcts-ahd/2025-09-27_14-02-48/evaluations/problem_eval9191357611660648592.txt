def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = unvisited_nodes.copy()
    if destination_node in candidates:
        candidates.remove(destination_node)

    if not candidates:
        return destination_node

    best_node = None
    best_score = float('inf')

    for node in candidates:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        total_increase = current_to_node + node_to_dest

        if total_increase < best_score:
            best_score = total_increase
            best_node = node

    if destination_node in unvisited_nodes:
        dest_score = distance_matrix[current_node][destination_node]
        if best_node is None or dest_score < best_score:
            return destination_node

    return next_node
