import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = 50
    cooling_rate = 0.95
    novelty_weight = 0.3
    recent_nodes = []

    while temperature > 0.1:
        novelty_scores = {}
        for node in unvisited_nodes:
            distance = distance_matrix[current_node][node]
            novelty = 1.0 - (1.0 / (1.0 + math.exp(-(len(recent_nodes) - recent_nodes.count(node)))))
            novelty_scores[node] = distance + novelty_weight * novelty

        if not novelty_scores:
            next_node = random.choice(list(unvisited_nodes))
        else:
            next_node = min(novelty_scores, key=novelty_scores.get)

        if next_node not in unvisited_nodes:
            temperature *= cooling_rate
            continue

        if next_node == destination_node or random.random() < math.exp((temperature - distance_matrix[current_node][next_node]) / (temperature * 0.5)):
            recent_nodes.append(next_node)
            if len(recent_nodes) > 5:
                recent_nodes.pop(0)
            return next_node

        temperature *= cooling_rate

    return next_node
