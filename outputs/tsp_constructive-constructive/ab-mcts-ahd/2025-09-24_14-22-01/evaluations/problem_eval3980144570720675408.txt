def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_total_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        scaling_factor = 1 + (num_unvisited / (num_unvisited + 1))  # Dynamic scaling based on remaining nodes
        total_score = (immediate_distance * scaling_factor) + (estimated_distance_to_destination * (1 / scaling_factor))
        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node
    return next_node
