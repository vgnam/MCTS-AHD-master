def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    unvisited_count = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        if unvisited_count > 1:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (unvisited_count - 1)
        else:
            avg_distance = 0
        if unvisited_count > 2:
            weight_immediate = 0.4
            weight_potential = 0.3
            weight_avg = 0.3
        else:
            weight_immediate = 0.7
            weight_potential = 0.2
            weight_avg = 0.1
        total_cost = weight_immediate * immediate_distance + weight_potential * potential_distance + weight_avg * avg_distance
        if total_cost < min_cost:
            min_cost = total_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
