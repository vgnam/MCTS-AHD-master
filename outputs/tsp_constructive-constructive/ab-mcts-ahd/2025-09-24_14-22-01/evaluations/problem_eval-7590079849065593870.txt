def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = (remaining_nodes / total_nodes) ** 2
    proximity_threshold = 0.3 * max(distance_matrix[current_node][node] for node in unvisited_nodes)

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        penalty = 0.2 * (proximity_threshold / immediate_distance) if immediate_distance < proximity_threshold else 0.0
        cost = (exploration_factor * immediate_distance) + ((1 - exploration_factor) * potential_distance) + penalty
        if cost < min_cost:
            min_cost = cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
