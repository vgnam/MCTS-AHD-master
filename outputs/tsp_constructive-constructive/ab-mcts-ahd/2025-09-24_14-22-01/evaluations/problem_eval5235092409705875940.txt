def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, beta=0.6):
    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / max(1, len(unvisited_nodes) - 1)
        weighted_cost = beta * immediate_distance + (1 - beta) * avg_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
