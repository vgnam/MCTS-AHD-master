import random
    import math
    probabilities = []
    total_weight = 0.0
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 * (remaining_nodes / (remaining_nodes + 1))
        weighted_cost = immediate_distance + dynamic_weight * potential_distance
        if node in unvisited_nodes and node != current_node:
            weighted_cost += 1.0
        probability = 1.0 / (weighted_cost + 1e-6)  # Avoid division by zero
        probabilities.append(probability)
        total_weight += probability

    if not probabilities:
        return destination_node

    normalized_probabilities = [p / total_weight for p in probabilities]
    next_node = random.choices(unvisited_nodes, weights=normalized_probabilities, k=1)[0]

    return next_node
