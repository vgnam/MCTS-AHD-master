def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1
    base_weight = 0.7
    decay_factor = 0.3
    weight = base_weight * (remaining_nodes ** decay_factor) / (remaining_nodes ** decay_factor + 1)

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        avg_distance_per_node = (immediate_distance + potential_distance) / 2
        combined_cost = (immediate_distance * (1 - weight) + potential_distance * weight) * (1 + (remaining_nodes / len(unvisited_nodes)))
        if combined_cost < min_cost:
            min_cost = combined_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
