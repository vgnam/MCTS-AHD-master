def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        connectivity_heuristic = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / num_unvisited if num_unvisited > 0 else 0
        penalty = 0.1 * connectivity_heuristic if connectivity_heuristic > 2 * sum(distance_matrix[current_node][n] for n in unvisited_nodes) / num_unvisited else 0
        total_score = 0.5 * distance_to_current + 0.3 * distance_to_destination + 0.2 * connectivity_heuristic - penalty
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
