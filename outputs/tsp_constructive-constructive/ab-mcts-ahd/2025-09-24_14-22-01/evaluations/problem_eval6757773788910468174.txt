def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    total_nodes = len(distance_matrix)
    visited_nodes = total_nodes - len(unvisited_nodes)
    ratio = visited_nodes / total_nodes if total_nodes > 0 else 0
    weight = 1.0 - (ratio ** 0.5)  # Non-linear adjustment for smoother transition
    min_total_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        # Normalize distances by the maximum possible distance in the matrix
        max_distance = max(max(row) for row in distance_matrix)
        normalized_current = current_to_node / max_distance
        normalized_node_to_dest = node_to_dest / max_distance
        total_distance = (1 - weight) * normalized_current + weight * normalized_node_to_dest
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
