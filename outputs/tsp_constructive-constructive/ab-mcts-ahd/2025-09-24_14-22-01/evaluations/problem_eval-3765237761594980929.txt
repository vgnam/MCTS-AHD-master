def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1

    if remaining_nodes == 0:
        return destination_node

    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / len(unvisited_nodes)
    weight = 0.5 + 0.4 * (remaining_nodes / (remaining_nodes + 1)) ** 2 - 0.2 * (avg_distance_to_dest / max(distance_matrix[destination_node]))

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        penalty = 1.0 if node in unvisited_nodes else 1.2
        weighted_cost = weight * immediate_distance + (1 - weight) * potential_distance * penalty

        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
