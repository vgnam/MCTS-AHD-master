import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        base_weight = 0.5 * (1 - math.exp(-0.1 * remaining_nodes))  # Non-linear weight adjustment
        lookahead_factor = 0.2 * math.sqrt(remaining_nodes)  # Anticipate future optimizations
        weighted_cost = immediate_distance + base_weight * potential_distance + lookahead_factor * immediate_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
