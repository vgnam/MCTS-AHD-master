def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1 if destination_node in unvisited_nodes else len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        heuristic_factor = (remaining_nodes + 1) / (remaining_nodes + 2) if remaining_nodes > 0 else 1.0
        penalty = 0.1 if node in unvisited_nodes and node != destination_node else 0
        total_cost = (immediate_distance + heuristic_factor * potential_distance + penalty) / (remaining_nodes + 1)
        if total_cost < min_cost:
            min_cost = total_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
