def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.9 - (0.1 * (remaining_nodes / len(distance_matrix)))
        penalty_factor = 1.0 + (0.1 * (1 / (remaining_nodes + 1)))
        weighted_cost = dynamic_weight * immediate_distance + (1 - dynamic_weight) * potential_distance
        weighted_cost *= penalty_factor
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    return next_node
