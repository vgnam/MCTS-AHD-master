def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    weight_immediate = 0.7 if remaining_nodes > 1 else 0.4
    weight_estimated = 1.0 - weight_immediate
    min_total_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        centrality_penalty = sum(distance_matrix[node]) / len(distance_matrix[node]) * 0.2
        total_distance = (weight_immediate * immediate_distance +
                          weight_estimated * estimated_distance_to_destination +
                          centrality_penalty)
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
