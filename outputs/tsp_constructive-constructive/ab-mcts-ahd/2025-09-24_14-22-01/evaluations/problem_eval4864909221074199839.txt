def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    if num_unvisited == 0:
        return destination_node
    weight_immediate = 0.5 + 0.2 * (1 - num_unvisited / len(unvisited_nodes))
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        # Calculate angle factor (simplified as dot product approximation)
        angle_factor = 1 - (distance_matrix[current_node][destination_node] - immediate_distance - potential_distance) / (2 * distance_matrix[current_node][destination_node])
        weighted_cost = weight_immediate * immediate_distance + (1 - weight_immediate) * potential_distance + 0.2 * angle_factor
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
