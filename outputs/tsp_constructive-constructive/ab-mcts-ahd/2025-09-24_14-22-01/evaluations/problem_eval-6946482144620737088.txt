def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = 0.3 + (0.7 * (remaining_nodes / (remaining_nodes + 1)))
    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / len(unvisited_nodes)
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weighted_immediate = distance_to_current * (1 + centrality)
        weighted_potential = distance_to_destination * (1 - centrality)
        exploration_factor = 1 / (1 + distance_to_destination)
        combined_score = (weight * (weighted_immediate + weighted_potential) / 2) + ((1 - weight) * exploration_factor)
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
