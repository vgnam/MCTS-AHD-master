def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        exploration_factor = 1.0 - (remaining_nodes / (remaining_nodes + 1))  # Increases as nodes are visited
        deviation_penalty = 1.0 + (immediate_distance / (destination_distance + 1e-6)) ** 2  # Penalizes large deviations
        combined_score = (1 - exploration_factor) * immediate_distance + exploration_factor * destination_distance * deviation_penalty
        if combined_score < best_score:
            best_score = combined_score
            next_node = node
    return next_node
