def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    total_nodes = len(unvisited_nodes) + 1
    visited_fraction = 1 - (len(unvisited_nodes) / total_nodes)
    immediate_weight = 0.3 + 0.7 * visited_fraction
    potential_weight = 0.7 - 0.4 * visited_fraction

    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = immediate_weight * immediate_distance + potential_weight * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    return next_node
