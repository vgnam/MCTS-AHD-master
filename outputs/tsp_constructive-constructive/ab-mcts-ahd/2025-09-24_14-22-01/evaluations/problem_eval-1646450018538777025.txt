def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1 / (1 + math.exp(-0.1 * (remaining_nodes - 5)))  # Sigmoid-based dynamic weighting
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        weighted_score = (1 - weight_factor) * immediate_distance + weight_factor * destination_distance
        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node

    return next_node
