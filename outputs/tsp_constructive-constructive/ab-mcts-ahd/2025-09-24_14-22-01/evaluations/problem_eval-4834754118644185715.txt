def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes) - (1 if destination_node in unvisited_nodes else 0)
    if remaining_nodes == 0:
        return destination_node

    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]

        if remaining_nodes <= 2:
            weight_immediate = 0.8
            weight_potential = 0.2
        else:
            weight_immediate = 0.5
            weight_potential = 0.5

        weighted_cost = weight_immediate * immediate_distance + weight_potential * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
