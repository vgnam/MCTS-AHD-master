import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node
    weight = 1.0 - math.exp(-0.5 * remaining_nodes)  # dynamic weight based on remaining nodes
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        combined_score = (1 - weight) * distance_to_node + weight * (distance_to_dest * math.log(remaining_nodes + 1))
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
