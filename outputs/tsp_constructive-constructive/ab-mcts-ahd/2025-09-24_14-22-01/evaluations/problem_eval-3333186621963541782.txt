def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight = 0.6 if remaining_nodes > 1 else 0.3  # Adjust weight dynamically
    avg_distance_to_dest = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / remaining_nodes
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        scaled_destination_score = math.log(distance_to_destination + 1) / math.log(avg_distance_to_dest + 1)  # Logarithmic scaling
        combined_score = distance_to_node + weight * scaled_destination_score
        if combined_score < best_score:
            best_score = combined_score
            next_node = node
    return next_node
