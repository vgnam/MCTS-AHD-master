def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    exploration_weight = 0.5 + 0.2 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1))  # Dynamic weight

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        exploration_factor = 1 / (1 + potential_distance)
        hybrid_cost = (1 - exploration_weight) * (immediate_distance * potential_distance) + exploration_weight * exploration_factor
        if hybrid_cost < min_cost:
            min_cost = hybrid_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
