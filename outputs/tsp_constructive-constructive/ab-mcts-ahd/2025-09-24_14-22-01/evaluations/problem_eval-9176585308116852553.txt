def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    progress = (len(distance_matrix) - remaining_nodes) / len(distance_matrix)
    weight_factor = 1 / (1 + math.exp(-10 * (progress - 0.5)))
    min_score = float('inf')
    next_node = None
    penalty = {}

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_return_distance = distance_matrix[node][destination_node]
        penalty[node] = penalty.get(node, 0) + 1
        score = immediate_distance + weight_factor * estimated_return_distance + 0.1 * penalty[node]
        if score < min_score:
            min_score = score
            next_node = node

    penalty[next_node] = 0
    return next_node
