def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_unvisited = len(unvisited_nodes)
    min_utility = float('-inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (total_unvisited - 1) if total_unvisited > 1 else 0
        weighted_cost = 0.4 * immediate_distance + 0.5 * potential_distance + 0.1 * avg_distance
        utility = -weighted_cost / (1 + (total_unvisited / len(distance_matrix)))
        if utility > min_utility:
            min_utility = utility
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
