def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    max_score = -float('inf')
    next_node = None
    n = len(distance_matrix)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        centrality_penalty = sum(distance_matrix[node]) / (n - 1)  # Average distance to all other nodes
        weighted_score = (immediate_distance * potential_distance) / (centrality_penalty + 1e-10)  # Avoid division by zero
        if weighted_score > max_score:
            max_score = weighted_score
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
