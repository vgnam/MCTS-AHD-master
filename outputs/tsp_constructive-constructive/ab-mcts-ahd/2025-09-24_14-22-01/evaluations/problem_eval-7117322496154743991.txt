def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    alpha = 0.7 if remaining_nodes > 2 else 0.3
    beta = 0.3 if remaining_nodes > 2 else 0.7

    min_cost = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]

        if immediate_distance < 0.1 * distance_matrix[current_node][destination_node]:
            penalty = 1.5
        else:
            penalty = 1.0

        weighted_cost = (alpha * immediate_distance + beta * potential_distance) * penalty

        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    return next_node
