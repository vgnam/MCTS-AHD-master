def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node
    temperature = max(0.1, 1.0 / remaining_nodes)
    candidates = []
    weights = []
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        cost = immediate_distance + temperature * potential_distance
        candidates.append(node)
        weights.append(1.0 / (cost + 1e-6))
    if not candidates:
        return destination_node
    total_weight = sum(weights)
    normalized_weights = [w / total_weight for w in weights]
    next_node = np.random.choice(candidates, p=normalized_weights)
    return next_node
