import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / remaining_nodes if remaining_nodes > 0 else 0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_remaining_distance = distance_matrix[node][destination_node]

        if remaining_nodes > 2:
            weight_immediate = 0.6
            weight_remaining = 0.4
        else:
            weight_immediate = 0.3
            weight_remaining = 0.7

        cost = (weight_immediate * immediate_distance) + (weight_remaining * estimated_remaining_distance) - (centrality * immediate_distance)

        if cost < min_cost:
            min_cost = cost
            next_node = node

    return next_node
