def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node

    current_weight = 0.6 + 0.4 * (0.8 ** (remaining_nodes - 1))
    destination_weight = 0.3 * (1 - (0.9 ** (remaining_nodes - 1)))
    future_weight = 0.1 * (1 - (0.95 ** (remaining_nodes - 1)))

    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        future_score = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / max(1, len(unvisited_nodes) - 1)
        score = (current_weight * distance_to_node +
                 destination_weight * distance_to_destination +
                 future_weight * future_score)
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
