def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_total_distance = float('inf')
    next_node = None
    alpha = 0.6  # Weight for distance to current node
    beta = 0.3   # Weight for distance to destination node
    gamma = 0.1  # Weight for closest node to current
    closest_node = None
    min_closest_distance = float('inf')
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        if distance_to_current < min_closest_distance:
            min_closest_distance = distance_to_current
            closest_node = node
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        is_closest = 1.0 if node == closest_node else 0.0
        total_distance = (alpha * distance_to_current +
                          beta * distance_to_destination +
                          gamma * is_closest)
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
