def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = unvisited_nodes - {destination_node}
    if not remaining_nodes:
        return destination_node

    remaining_count = len(remaining_nodes)
    weight_immediate = 0.7
    weight_potential = 0.3

    for node in remaining_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_score = (weight_immediate * immediate_distance) + (weight_potential * potential_distance)
        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
