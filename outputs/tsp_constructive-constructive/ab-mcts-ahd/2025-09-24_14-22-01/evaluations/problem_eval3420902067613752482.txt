def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        # Dynamic weight adjustment based on remaining nodes
        weight = 0.7 - (0.5 / (remaining_nodes + 1))  # Adjusts from 0.7 to ~0.2
        combined_score = distance_to_node + weight * distance_to_destination
        if combined_score < best_score:
            best_score = combined_score
            next_node = node
    return next_node
