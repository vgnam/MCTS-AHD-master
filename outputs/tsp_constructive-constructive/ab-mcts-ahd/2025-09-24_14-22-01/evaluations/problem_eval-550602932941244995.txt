def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_return_distance = distance_matrix[node][destination_node]
        avg_unvisited_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / remaining_nodes if remaining_nodes > 1 else 0
        dynamic_weight = 0.1 * (1 - (remaining_nodes / len(unvisited_nodes))) if len(unvisited_nodes) > 0 else 0
        score = (0.5 - dynamic_weight) * immediate_distance + 0.3 * estimated_return_distance + (0.2 + dynamic_weight) * avg_unvisited_distance
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
