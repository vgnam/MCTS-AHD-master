def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        if node == destination_node:
            continue

        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_distance = immediate_distance * (1 + centrality) + potential_distance * (1 - centrality)

        if weighted_distance < min_cost:
            min_cost = weighted_distance
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
