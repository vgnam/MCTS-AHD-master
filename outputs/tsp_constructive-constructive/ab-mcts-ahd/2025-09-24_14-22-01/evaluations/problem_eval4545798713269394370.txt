import random
    import math
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node
    avg_immediate = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes
    avg_potential = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / remaining_nodes
    exploration_factor = math.exp(-0.5 * remaining_nodes / len(unvisited_nodes + [current_node]))
    probabilities = []
    for node in unvisited_nodes:
        if node == destination_node:
            probabilities.append(0)
            continue
        immediate = distance_matrix[current_node][node]
        potential = distance_matrix[node][destination_node]
        normalized_immediate = immediate / avg_immediate
        normalized_potential = potential / avg_potential
        cost = (normalized_immediate * (1 - exploration_factor)) + (normalized_potential * exploration_factor)
        probabilities.append(1 / (cost + 1e-6))
    probabilities = [p / sum(probabilities) for p in probabilities]
    next_node = random.choices(unvisited_nodes, weights=probabilities, k=1)[0]
    return next_node
