def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    current_to_dest = distance_matrix[current_node][destination_node]
    max_distance = max(max(row) for row in distance_matrix)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        normalized_immediate = immediate_distance / max_distance
        normalized_potential = potential_distance / max_distance
        weight_factor = 1 / (1 + math.exp(-current_to_dest + 0.5 * max_distance))
        weighted_cost = (1 - weight_factor) * normalized_immediate + weight_factor * normalized_potential
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
