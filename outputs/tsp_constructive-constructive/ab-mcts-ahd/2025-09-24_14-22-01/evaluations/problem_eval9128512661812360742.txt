import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    total_unvisited_nodes = len(unvisited_nodes)
    max_immediate = max(distance_matrix[current_node])

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 * (1 - (len(unvisited_nodes) / total_unvisited_nodes)) + 0.5 * (immediate_distance / max_immediate)
        combined_score = immediate_distance + dynamic_weight * potential_distance
        scores.append((node, combined_score))

    if not scores:
        return destination_node

    nodes, scores = zip(*scores)
    total_score = sum(scores)
    probabilities = [1 - (s / total_score) for s in scores]
    probabilities = [p / sum(probabilities) for p in probabilities]

    next_node = random.choices(nodes, weights=probabilities, k=1)[0]
    return next_node
