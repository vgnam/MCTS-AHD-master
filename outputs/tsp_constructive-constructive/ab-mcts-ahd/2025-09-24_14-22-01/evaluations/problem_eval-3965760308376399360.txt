def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1
    weight_immediate = 0.6 + 0.4 * (remaining_nodes / (remaining_nodes + 1))
    penalty_factor = 0.5 / (remaining_nodes + 1)

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        penalty = penalty_factor * potential_distance
        normalized_cost = (immediate_distance * potential_distance) - penalty
        weighted_cost = weight_immediate * immediate_distance + (1 - weight_immediate) * normalized_cost
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
