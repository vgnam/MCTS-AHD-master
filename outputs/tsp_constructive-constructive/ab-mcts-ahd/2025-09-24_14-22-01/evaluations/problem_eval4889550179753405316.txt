def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None
    exploration_weight = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
    exploitation_weight = 1 - exploration_weight
    min_total_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        total_distance = (exploration_weight * immediate_distance) + (exploitation_weight * estimated_distance_to_destination)
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
