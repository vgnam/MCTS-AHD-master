def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        if remaining_nodes > 1:
            weight = 1.0 / (remaining_nodes ** 1.5) if remaining_nodes > 2 else 0.5
        else:
            weight = 0.0
        penalty = 0.1 * immediate_distance if immediate_distance < 0.2 * max(distance_matrix[current_node]) else 0
        weighted_cost = (1 - weight) * immediate_distance + weight * potential_distance + penalty
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
