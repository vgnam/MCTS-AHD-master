def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_cost = float('inf')
    next_node = None
    remaining = len(unvisited_nodes)
    weight_immediate = 0.7 + (0.3 * (remaining / len(distance_matrix))) if remaining > 1 else 0.0
    weight_potential = 1.0 - weight_immediate

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = weight_immediate * immediate_distance + weight_potential * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
