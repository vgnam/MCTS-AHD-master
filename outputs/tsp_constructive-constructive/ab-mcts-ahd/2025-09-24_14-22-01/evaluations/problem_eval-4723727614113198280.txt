def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    best_score = float('inf')
    next_node = None
    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / remaining_nodes if remaining_nodes > 0 else 0
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weight = 0.5 - (0.2 * (remaining_nodes / (remaining_nodes + 1)))
        combined_score = (distance_to_node * (1 + centrality)) + (weight * distance_to_destination * (1 - centrality))
        if combined_score < best_score:
            best_score = combined_score
            next_node = node
    return next_node
