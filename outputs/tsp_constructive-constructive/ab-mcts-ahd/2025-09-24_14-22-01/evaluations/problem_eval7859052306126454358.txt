def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1
    weight = 0.4 + (0.6 * (remaining_nodes / (remaining_nodes + 1)))
    penalty_factor = 1.0

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        if potential_distance < 0.5 * distance_matrix[current_node][destination_node]:
            penalty_factor = 1.2
        else:
            penalty_factor = 1.0
        weighted_cost = weight * immediate_distance + (1 - weight) * potential_distance * penalty_factor

        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
