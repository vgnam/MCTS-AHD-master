def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    base_weight = 0.7 if remaining_nodes > 2 else 0.9  # higher weight for destination in later steps
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        exploration_penalty = 1.0 if node in unvisited_nodes else 1.2  # penalize revisits
        combined_score = (base_weight * distance_to_dest + (1 - base_weight) * distance_to_node) * exploration_penalty
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
