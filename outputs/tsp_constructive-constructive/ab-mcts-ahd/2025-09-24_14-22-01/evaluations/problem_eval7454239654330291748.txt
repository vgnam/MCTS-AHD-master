def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_return_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 - (0.2 / (1 + remaining_nodes))
        score = immediate_distance + dynamic_weight * estimated_return_distance
        centrality = sum(distance_matrix[node]) / len(distance_matrix[node])
        adjusted_score = score + 0.1 * centrality
        if adjusted_score < min_score:
            min_score = adjusted_score
            next_node = node
    return next_node
