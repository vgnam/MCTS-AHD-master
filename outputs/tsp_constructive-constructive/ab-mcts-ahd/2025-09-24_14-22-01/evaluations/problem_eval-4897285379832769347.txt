def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    proximity_weight = remaining_nodes / total_nodes
    long_term_weight = 1 - proximity_weight

    best_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = 0.2 * (1 / (distance_to_node + 1e-6))  # Penalty for nodes close to current node
        combined_score = proximity_weight * distance_to_node + long_term_weight * distance_to_destination + penalty
        if combined_score < best_score:
            best_score = combined_score
            next_node = node

    return next_node
