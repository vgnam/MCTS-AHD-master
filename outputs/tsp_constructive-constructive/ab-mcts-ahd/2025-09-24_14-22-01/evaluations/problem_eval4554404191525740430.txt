def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    visited_nodes = total_nodes - remaining_nodes
    avg_distance = sum(distance_matrix[current_node]) / total_nodes if visited_nodes > 0 else 1.0

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weight_factor = (remaining_nodes + 1) / (total_nodes + 1) * (1 - (visited_nodes / total_nodes))
        weighted_cost = immediate_distance + (potential_distance * (1 - weight_factor))
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
