def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    weight_immediate = 1.0 / (1.0 + num_unvisited)
    weight_potential = 1.0 - weight_immediate
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = (weight_immediate * immediate_distance) + (weight_potential * potential_distance)
        penalty = 1.0 if node in unvisited_nodes and node != destination_node else 0.0
        total_cost = weighted_cost + penalty
        if total_cost < min_cost:
            min_cost = total_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
