def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    dynamic_weight = 0.5 + (0.5 * (remaining_nodes / total_nodes))  # Adjusts weight based on remaining nodes

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        penalty = 0.2 * (total_nodes - remaining_nodes)  # Penalty for revisiting nodes
        combined_score = distance_to_node + dynamic_weight * distance_to_destination - penalty
        if combined_score < best_score:
            best_score = combined_score
            next_node = node
    return next_node
