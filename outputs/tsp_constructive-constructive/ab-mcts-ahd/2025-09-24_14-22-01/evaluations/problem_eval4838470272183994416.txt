def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_total_cost = float('inf')
    next_node = None
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        deviation = abs(current_to_node - avg_distance)
        total_cost = current_to_node + node_to_dest + deviation * (1 + centrality)

        if total_cost < min_total_cost:
            min_total_cost = total_cost
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
