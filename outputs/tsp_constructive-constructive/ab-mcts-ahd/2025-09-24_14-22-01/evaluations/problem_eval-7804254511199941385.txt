def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_total_distance = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        if remaining_nodes <= 2:  # Prioritize immediate distance when few nodes left
            total_distance = 3 * immediate_distance + estimated_distance_to_destination
        else:
            total_distance = immediate_distance + 2 * estimated_distance_to_destination  # Balance global and local
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
