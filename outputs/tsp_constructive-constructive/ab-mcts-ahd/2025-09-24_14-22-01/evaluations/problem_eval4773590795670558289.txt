def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    candidates = []
    total_prob = 0.0
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        foresighted_distance = distance_matrix[node][destination_node]
        exploration_factor = (remaining_nodes / (remaining_nodes + 1)) ** 2
        weighted_cost = (1 - exploration_factor) * immediate_distance + exploration_factor * foresighted_distance
        prob = 1 / (weighted_cost + 1e-6)
        candidates.append((node, prob))
        total_prob += prob
    if not candidates:
        return destination_node
    rand_val = random.random() * total_prob
    cumulative_prob = 0.0
    for node, prob in candidates:
        cumulative_prob += prob
        if rand_val <= cumulative_prob:
            return node
    return next_node
