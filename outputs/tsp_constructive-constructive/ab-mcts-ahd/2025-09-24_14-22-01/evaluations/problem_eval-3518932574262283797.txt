defaults to the destination only if no other nodes remain.}

```python
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node]) / len(distance_matrix[node])
        score = 0.3 * immediate_distance + 0.3 * potential_distance + 0.4 * centrality
        if score > max_score:
            max_score = score
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
