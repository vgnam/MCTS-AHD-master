def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    exploration_factor = len(unvisited_nodes) / len(distance_matrix)
    risk_factor = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
    alpha = 0.5 * exploration_factor + 0.5 * risk_factor

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = 0.6 * immediate_distance + 0.4 * potential_distance
        exploration_bonus = exploration_factor * (1 - (immediate_distance / sum(distance_matrix[current_node])))
        refined_cost = weighted_cost * (1 - alpha) + exploration_bonus * alpha
        if refined_cost < min_cost:
            min_cost = refined_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
