def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = [node for node in unvisited_nodes if node != destination_node]
    avg_distance = sum(distance_matrix[current_node][node] for node in remaining_nodes) / len(remaining_nodes) if remaining_nodes else 0
    for node in remaining_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        distance_ratio = immediate_distance / avg_distance if avg_distance > 0 else 1.0
        exploration_factor = 1 / (1 + potential_distance)
        weighted_cost = 0.3 * immediate_distance + 0.2 * distance_ratio + 0.2 * exploration_factor + 0.3 * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
