def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    alpha = 0.5
    exploration_factor = len(unvisited_nodes) / (len(unvisited_nodes) + len(distance_matrix))
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        if immediate_distance == 0 or potential_distance == 0:
            angular_cost = float('inf')
        else:
            angular_cost = abs(immediate_distance - potential_distance) / (immediate_distance + potential_distance)
        distance_cost = (immediate_distance + potential_distance) / 2
        weighted_cost = (angular_cost * alpha + distance_cost * (1 - alpha)) * (1 + exploration_factor * (node in unvisited_nodes))
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
