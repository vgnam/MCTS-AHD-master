def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 1:
        return destination_node if unvisited_nodes[0] == destination_node else unvisited_nodes[0]

    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weight = 1 / (1 + math.exp(-0.1 * (remaining_nodes - 5)))
        weighted_cost = weight * immediate_distance + (1 - weight) * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
