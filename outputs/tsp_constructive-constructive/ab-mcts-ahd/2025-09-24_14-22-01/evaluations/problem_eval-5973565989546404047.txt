def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(unvisited_nodes) + 1
    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weight = 1 / (1 + math.exp(-(remaining_nodes / total_nodes - 0.5) * 10))
        node_degree = sum(1 for n in unvisited_nodes if n != node and distance_matrix[node][n] < float('inf'))
        total_cost = (1 - weight) * immediate_distance + weight * potential_distance + (0.1 * node_degree)
        if total_cost < min_cost:
            min_cost = total_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
