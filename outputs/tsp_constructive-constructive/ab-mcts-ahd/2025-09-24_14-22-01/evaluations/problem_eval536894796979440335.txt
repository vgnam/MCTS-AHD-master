def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        diversity_factor = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (total_unvisited - 1 if total_unvisited > 1 else 1)
        connectivity_factor = sum(1 for other in unvisited_nodes if distance_matrix[node][other] < 2 * immediate_distance) / total_unvisited
        weighted_cost = (0.5 * immediate_distance) + (0.3 * diversity_factor) + (0.2 * connectivity_factor)
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
