def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None

    if not unvisited_nodes:
        return destination_node

    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / len(unvisited_nodes)
    dest_attraction = 1 / (distance_matrix[current_node][destination_node] + 1e-6)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        cost = immediate_distance * (1 + centrality) + 0.5 * dest_distance * dest_attraction

        if cost < min_cost:
            min_cost = cost
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
