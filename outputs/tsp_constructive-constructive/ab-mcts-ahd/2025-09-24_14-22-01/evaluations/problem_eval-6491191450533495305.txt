def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)
    ratio = remaining_nodes / total_nodes if total_nodes > 0 else 0
    weight_immediate = 1 / (1 + math.exp(5 * (ratio - 0.5)))
    weight_potential = 1 - weight_immediate
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = weight_immediate * immediate_distance + weight_potential * potential_distance
        if immediate_distance > 1.5 * avg_distance:
            weighted_cost += 0.3 * immediate_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
