def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_total_distance = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    alpha = 0.9 - 0.2 * (remaining_nodes / 10)  # Decrease alpha as nodes decrease
    beta = 0.1 + 0.2 * (remaining_nodes / 10)     # Increase beta as nodes decrease
    penalty_factor = 1.1 if remaining_nodes < 5 else 1.0  # Penalize revisits in final stages

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        total_distance = alpha * distance_to_current + beta * distance_to_destination
        total_distance *= penalty_factor if node in unvisited_nodes else 1.0  # Apply penalty if revisiting
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
