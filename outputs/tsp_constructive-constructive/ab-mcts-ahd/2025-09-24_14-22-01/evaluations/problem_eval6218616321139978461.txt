def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_value = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_unvisited_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = 0.7 * (1 - (remaining_nodes / total_unvisited_nodes)) + 0.3 * (distance_to_current / max(distance_matrix[current_node]))
        penalty = 0.2 * (distance_to_current - distance_to_destination) if distance_to_current > 1.5 * distance_to_destination else 0
        combined_value = distance_to_current + dynamic_weight * distance_to_destination + penalty
        if combined_value < min_value:
            min_value = combined_value
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
