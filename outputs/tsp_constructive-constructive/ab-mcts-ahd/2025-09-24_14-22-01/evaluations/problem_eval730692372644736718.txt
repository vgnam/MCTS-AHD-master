def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    avg_unvisited_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    min_cost = float('inf')
    next_node = None

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        exploration_factor = (avg_unvisited_distance - immediate_distance) / (avg_unvisited_distance + 1e-6)
        total_cost = immediate_distance + 0.6 * potential_distance + 0.2 * exploration_factor
        if total_cost < min_cost:
            min_cost = total_cost
            next_node = node

    return next_node
