def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node
    total_unvisited = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    avg_distance = total_unvisited / remaining_nodes if remaining_nodes > 0 else 0
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weight_factor = 1 / (1 + math.exp(-0.5 * (remaining_nodes - 1)))
        weighted_cost = immediate_distance * (potential_distance ** weight_factor) + (avg_distance * (1 - weight_factor))
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
