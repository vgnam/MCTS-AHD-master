def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        total_unvisited_distance = sum(distance_matrix[node][unvisited] for unvisited in unvisited_nodes if unvisited != destination_node)
        dynamic_weight = 0.1 + (0.8 - 0.1) * (1.0 - remaining_nodes / len(unvisited_nodes))
        weighted_cost = immediate_distance + dynamic_weight * total_unvisited_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
