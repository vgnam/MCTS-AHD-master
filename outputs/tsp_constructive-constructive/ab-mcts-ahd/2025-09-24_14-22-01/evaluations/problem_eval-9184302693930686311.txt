def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    base_exploration_weight = 0.5

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        exploration_factor = 1 / (1 + potential_distance)
        adaptive_weight = base_exploration_weight * (1 + potential_distance / sum(distance_matrix[node]))

        weighted_cost = (1 - adaptive_weight) * immediate_distance + adaptive_weight * (immediate_distance * potential_distance * exploration_factor)
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
