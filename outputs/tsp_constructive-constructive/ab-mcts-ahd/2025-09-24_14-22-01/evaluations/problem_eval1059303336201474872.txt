def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_cost = float('inf')
    next_node = None
    future_weight = 1.2
    immediate_weight = 0.3
    fixed_threshold = 1.3

    for node in unvisited_nodes:
        if node == destination_node:
            continue

        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]

        # Linear path potential metric
        path_potential = immediate_weight * immediate_distance + future_weight * potential_distance

        # Fixed threshold penalty
        if immediate_distance > fixed_threshold:
            penalty = 1.5 + (immediate_distance - fixed_threshold) * 0.2
            path_potential *= penalty

        if path_potential < min_cost:
            min_cost = path_potential
            next_node = node

    return next_node
