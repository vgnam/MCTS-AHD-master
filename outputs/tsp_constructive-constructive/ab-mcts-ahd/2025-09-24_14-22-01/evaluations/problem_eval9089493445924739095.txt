def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes) - 1
    weight = 0.5 + (0.5 * (remaining_nodes / total_nodes))

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        straight_line_distance = distance_matrix[current_node][destination_node]
        deviation_penalty = abs(immediate_distance + potential_distance - straight_line_distance)
        combined_cost = (immediate_distance * potential_distance * weight) + (deviation_penalty * (1 - weight))
        if combined_cost < min_cost:
            min_cost = combined_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
