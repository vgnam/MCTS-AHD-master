def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        diversity_factor = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (len(unvisited_nodes) - 1 if len(unvisited_nodes) > 1 else 1)
        weighted_product = (0.4 * immediate_distance) * (0.5 * potential_distance) * (0.1 * diversity_factor)
        if weighted_product < min_cost:
            min_cost = weighted_product
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
