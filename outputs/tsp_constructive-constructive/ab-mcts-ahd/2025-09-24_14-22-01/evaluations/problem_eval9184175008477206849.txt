def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight_immediate = 0.7 if remaining_nodes > 2 else 0.9
    weight_potential = 0.3 if remaining_nodes > 2 else 0.1

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = weight_immediate * immediate_distance + weight_potential * potential_distance

        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
        elif weighted_cost == min_cost:
            node_degree = sum(1 for n in unvisited_nodes if distance_matrix[node][n] > 0)
            current_degree = sum(1 for n in unvisited_nodes if distance_matrix[next_node][n] > 0)
            if node_degree > current_degree:
                next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
