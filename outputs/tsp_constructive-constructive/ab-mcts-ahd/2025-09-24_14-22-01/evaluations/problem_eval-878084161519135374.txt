def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    temperature = 0.1
    penalty = 1.5
    min_cost = float('inf')
    next_node = None
    candidates = []

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        if node in unvisited_nodes and node != current_node:
            adjusted_cost = immediate_distance * (1 + penalty * (1 - len(unvisited_nodes) / len(distance_matrix)))
            candidates.append((node, adjusted_cost))

    if candidates:
        probabilities = [1 / (cost ** (1 / temperature)) for _, cost in candidates]
        total_prob = sum(probabilities)
        probabilities = [p / total_prob for p in probabilities]
        next_node = random.choices([node for node, _ in candidates], weights=probabilities, k=1)[0]
    else:
        next_node = destination_node

    return next_node
