import math
    import random

    temperature = 0.5  # Controls exploration vs exploitation
    scores = []
    total_score = 0.0

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        # Combine immediate distance and long-term heuristic (inverse of node_to_dest)
        score = math.exp(-current_to_node / temperature) * (1.0 / (1.0 + node_to_dest))
        scores.append(score)
        total_score += score

    if total_score == 0:
        return random.choice(unvisited_nodes)

    # Normalize scores and select probabilistically
    normalized_scores = [s / total_score for s in scores]
    next_node = random.choices(unvisited_nodes, weights=normalized_scores, k=1)[0]

    return next_node
