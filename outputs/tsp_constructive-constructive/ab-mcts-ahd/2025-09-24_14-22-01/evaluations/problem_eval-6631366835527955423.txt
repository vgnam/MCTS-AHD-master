def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 1:
        return unvisited_nodes.pop()
    local_weight = 0.6 + 0.1 * (10 - remaining_nodes) / 10
    global_weight = 1 - local_weight
    min_total_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        total_distance = local_weight * immediate_distance + global_weight * estimated_distance_to_destination
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
