def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    current_to_destination = distance_matrix[current_node][destination_node]
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        proximity_factor = 1 - (potential_distance / current_to_destination) if current_to_destination > 0 else 0
        weighted_cost = immediate_distance + (0.5 + 0.4 * proximity_factor) * potential_distance
        detour_penalty = immediate_distance * (1 + 0.5 * (potential_distance / current_to_destination)) if current_to_destination > 0 else immediate_distance
        total_cost = weighted_cost + detour_penalty
        if total_cost < min_cost:
            min_cost = total_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
