def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    max_cost = -float('inf')
    next_node = None
    remaining_nodes = [node for node in unvisited_nodes if node != destination_node]

    if not remaining_nodes:
        return destination_node

    for node in remaining_nodes:
        immediate_distance = distance_matrix[current_node][node]
        avg_future_distance = sum(distance_matrix[node][other] for other in remaining_nodes if other != node) / max(1, len(remaining_nodes) - 1)
        weighted_cost = immediate_distance + 0.3 * avg_future_distance

        if weighted_cost > max_cost:
            max_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
