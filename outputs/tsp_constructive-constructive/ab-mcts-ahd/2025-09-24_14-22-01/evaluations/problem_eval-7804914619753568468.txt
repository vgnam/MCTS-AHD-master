def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / len(unvisited_nodes)
    avg_immediate = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 * (1 - (remaining_nodes / (remaining_nodes + 1)))
        deviation = abs(immediate_distance - avg_immediate)
        penalty = 1.0 + deviation * (1 - centrality)
        combined_score = immediate_distance + dynamic_weight * destination_distance * penalty
        if combined_score < best_score:
            best_score = combined_score
            next_node = node
    return next_node
