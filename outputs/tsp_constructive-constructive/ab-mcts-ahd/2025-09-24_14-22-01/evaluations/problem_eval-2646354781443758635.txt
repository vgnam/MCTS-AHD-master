def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        if remaining_nodes > 1:
            weight_immediate = 0.7 - 0.2 * (remaining_nodes / total_nodes)
            weight_potential = 1.0 - weight_immediate
            weighted_cost = weight_immediate * immediate_distance + weight_potential * potential_distance
        else:
            weighted_cost = 0.3 * immediate_distance + 0.9 * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
