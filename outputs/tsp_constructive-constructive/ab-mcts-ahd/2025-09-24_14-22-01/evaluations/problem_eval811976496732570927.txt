def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    total_nodes = len(distance_matrix)
    remaining_nodes = len(unvisited_nodes) - 1
    gamma = remaining_nodes / total_nodes

    for node in unvisited_nodes:
        if node == destination_node:
            continue

        immediate_distance = distance_matrix[current_node][node]
        centrality = sum(distance_matrix[node]) / len(distance_matrix[node])
        potential_distance = distance_matrix[node][destination_node]
        exploration_factor = 1 / (1 + potential_distance)

        dynamic_weight = 0.1 * (1 - gamma)
        score = 0.6 * immediate_distance + 0.3 * centrality + dynamic_weight * exploration_factor

        if score > max_score:
            max_score = score
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
