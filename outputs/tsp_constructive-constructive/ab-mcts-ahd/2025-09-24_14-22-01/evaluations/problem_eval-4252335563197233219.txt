def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        diversity_factor = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (remaining_nodes - 1 if remaining_nodes > 1 else 1)
        exploration_factor = (remaining_nodes / (remaining_nodes + 1)) * (1 - (remaining_nodes - 1) / remaining_nodes)
        weighted_cost = (0.5 * immediate_distance) + (0.3 * (1 - exploration_factor) * potential_distance) + (0.2 * (1 + exploration_factor) * diversity_factor)
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
