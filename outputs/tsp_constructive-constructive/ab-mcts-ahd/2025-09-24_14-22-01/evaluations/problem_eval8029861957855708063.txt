def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1
    exploration_factor = 0.3 + 0.7 * (remaining_nodes / (remaining_nodes + 1))
    penalty_factor = 0.6 * (1 - remaining_nodes / (remaining_nodes + 1))

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        distance_ratio = immediate_distance / (potential_distance + 1e-10)
        exploration_term = exploration_factor * distance_ratio
        penalty = penalty_factor * immediate_distance
        weighted_cost = immediate_distance + exploration_term - penalty
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
