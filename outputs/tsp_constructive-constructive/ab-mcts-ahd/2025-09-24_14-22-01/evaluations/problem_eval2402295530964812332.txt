def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        if remaining_nodes > 2:
            # Calculate average distance to other unvisited nodes
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node and other != destination_node) / (remaining_nodes - 2)
            weighted_cost = 0.6 * immediate_distance + 0.3 * potential_distance + 0.1 * avg_distance
        else:
            weighted_cost = 0.4 * immediate_distance + 0.6 * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
