def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes = len(unvisited_nodes)
    exploration_weight = max(0.1, 1.0 - (0.9 * (1.0 / (1.0 + remaining_nodes))))
    convergence_weight = 1.0 - exploration_weight
    candidate_nodes = [node for node in unvisited_nodes if node != destination_node]
    if not candidate_nodes:
        return destination_node
    scores = []
    for node in candidate_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        exploration_score = immediate_distance
        convergence_score = potential_distance
        combined_score = (exploration_weight * exploration_score) + (convergence_weight * convergence_score)
        penalty = 1.0 + (0.1 * (1.0 / (1.0 + distance_matrix[current_node][node])))
        scores.append(combined_score * penalty)
    next_node = candidate_nodes[scores.index(min(scores))]
    return next_node
