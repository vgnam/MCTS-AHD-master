def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node and remaining_nodes > 1:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        dynamic_weight = 1.0 / (1.0 + 0.1 * remaining_nodes)
        weighted_cost = (1.5 - dynamic_weight) * immediate_distance + (0.5 + dynamic_weight) * potential_distance
        if node == destination_node:
            weighted_cost += 0.2 * immediate_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
