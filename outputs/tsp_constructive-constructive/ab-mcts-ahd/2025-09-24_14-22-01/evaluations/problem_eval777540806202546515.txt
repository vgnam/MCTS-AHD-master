def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node
    weight_immediate = 0.5 + 0.1 * (remaining_nodes / (remaining_nodes + 1))
    weight_return = 0.3 + 0.1 * (remaining_nodes / (remaining_nodes + 1))
    weight_avg = 0.2 + 0.2 * (1 / (remaining_nodes + 1))
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_return_distance = distance_matrix[node][destination_node]
        avg_unvisited_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / remaining_nodes
        score = weight_immediate * immediate_distance + weight_return * estimated_return_distance + weight_avg * avg_unvisited_distance
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
