def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    destination_weight = 0.3  # Fixed weight for destination prioritization
    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if node == destination_node:
            weighted_cost = immediate_distance * (1 - destination_weight)
        else:
            weighted_cost = immediate_distance * (1 + destination_weight)
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
