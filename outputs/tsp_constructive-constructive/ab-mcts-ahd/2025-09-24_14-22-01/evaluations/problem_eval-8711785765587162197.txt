def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1  # +1 for the current node
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weight_ratio = remaining_nodes / total_nodes
        weight = 0.5 * (1 + weight_ratio)  # Dynamic weight between 0.5 and 1.0
        weighted_cost = immediate_distance + weight * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
