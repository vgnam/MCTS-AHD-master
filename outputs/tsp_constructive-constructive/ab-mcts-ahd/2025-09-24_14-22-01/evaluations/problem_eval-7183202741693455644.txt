import math
import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = max(1, len(unvisited_nodes) / (len(unvisited_nodes) + 1))
    node_scores = []

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        novelty_bonus = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node and other != destination_node) / (len(unvisited_nodes) - 1 if len(unvisited_nodes) > 1 else 1)
        score = (1 / (1 + immediate_distance)) * (1 / (1 + potential_distance)) * (1 + 0.1 * novelty_bonus)
        node_scores.append((node, score))

    if not node_scores:
        return destination_node

    probabilities = [math.exp(score / temperature) for _, score in node_scores]
    total_prob = sum(probabilities)
    normalized_probs = [p / total_prob for p in probabilities]
    next_node = random.choices([node for node, _ in node_scores], weights=normalized_probs, k=1)[0]

    return next_node
