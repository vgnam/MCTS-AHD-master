def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node

    progress = 1 - (remaining_nodes / (remaining_nodes + 1))
    dynamic_weight = 1 / (1 + math.exp(-10 * (progress - 0.5)))

    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        weighted_score = dynamic_weight * immediate_distance + (1 - dynamic_weight) * destination_distance
        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node
    return next_node
