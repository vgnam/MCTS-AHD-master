def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    total_nodes = len(unvisited_nodes) + 1  # +1 for current_node
    remaining_nodes = len(unvisited_nodes)
    dynamic_weight = 0.8 * (remaining_nodes / total_nodes) if remaining_nodes > 0 else 0.8

    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = immediate_distance + dynamic_weight * potential_distance
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
