def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_total_score = float('inf')
    next_node = None
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
    weight_factor = 0.7 if len(unvisited_nodes) > 3 else 0.9
    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        distance_deviation = abs(current_to_node - avg_distance)
        remaining_nodes = unvisited_nodes - {node}
        potential_reduction = sum(min(distance_matrix[node][n], distance_matrix[current_node][n]) for n in remaining_nodes) if remaining_nodes else 0
        total_score = (current_to_node + node_to_dest) * weight_factor + distance_deviation + potential_reduction
        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node
    return next_node
