def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / remaining_nodes
        weight_current = 0.3 + (0.4 * (1 / (remaining_nodes + 1)))
        weight_destination = 0.3 + (0.4 * (remaining_nodes / (remaining_nodes + 1)))
        weight_centrality = 0.4 - (0.2 * (remaining_nodes / (remaining_nodes + 1)))
        combined_score = (weight_current * distance_to_current) + \
                         (weight_destination * distance_to_destination) + \
                         (weight_centrality * centrality)
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
