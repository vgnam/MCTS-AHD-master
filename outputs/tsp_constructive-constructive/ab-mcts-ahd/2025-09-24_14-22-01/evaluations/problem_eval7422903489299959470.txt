def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node
    avg_unvisited_distance = sum(distance_matrix[node][destination_node] for node in unvisited_nodes) / remaining_nodes
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_distance = distance_matrix[node][destination_node]
        ratio = immediate_distance / (estimated_distance + 1e-10)
        weight_immediate = 0.6 * (1 - ratio) + 0.4 * (remaining_nodes / len(unvisited_nodes))
        weight_estimated = 0.6 * ratio + 0.4 * (remaining_nodes / len(unvisited_nodes))
        penalty = 1.0 / (remaining_nodes + 1) if immediate_distance > 1.5 * avg_unvisited_distance else 0.0
        score = (weight_immediate * immediate_distance) + (weight_estimated * estimated_distance) + (penalty * immediate_distance)
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
