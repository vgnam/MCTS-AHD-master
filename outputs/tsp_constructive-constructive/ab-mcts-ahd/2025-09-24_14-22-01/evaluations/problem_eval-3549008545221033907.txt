def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (remaining_nodes - 1) if remaining_nodes > 1 else 0
        weight_immediate = 0.5 + 0.5 * (remaining_nodes / len(unvisited_nodes + [current_node, destination_node]))
        weight_potential = 0.3 + 0.2 * (remaining_nodes / len(unvisited_nodes + [current_node, destination_node]))
        weight_avg = 0.2
        sum_cost = (weight_immediate * immediate_distance) + (weight_potential * potential_distance) + (weight_avg * avg_distance)
        if sum_cost < min_cost:
            min_cost = sum_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
