def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1
    weight = 0.5 - (0.4 * (remaining_nodes / (remaining_nodes + 1)))
    node_density = len(unvisited_nodes) / sum(distance_matrix[current_node][node] for node in unvisited_nodes if node != current_node) if unvisited_nodes else 0

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_immediate = immediate_distance * (1 + node_density)
        weighted_potential = potential_distance * (1 - node_density)
        combined_weight = weight * weighted_immediate + (1 - weight) * weighted_potential

        if combined_weight < min_cost:
            min_cost = combined_weight
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
