def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1
    if remaining_nodes <= 0:
        return destination_node
    weight = 0.5 * (1 - (remaining_nodes / (remaining_nodes + 1)) ** 0.5)
    current_to_dest = distance_matrix[current_node][destination_node]
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        proximity_penalty = max(0, (current_to_dest - immediate_distance) / current_to_dest) if current_to_dest > 0 else 0
        combined_score = (1 - weight) * immediate_distance + weight * potential_distance + 0.2 * proximity_penalty
        if combined_score < best_score:
            best_score = combined_score
            next_node = node
    return next_node
