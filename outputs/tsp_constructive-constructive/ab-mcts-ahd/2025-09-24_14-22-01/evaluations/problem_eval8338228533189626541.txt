def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    total_unvisited = len(unvisited_nodes)
    if total_unvisited == 0:
        return destination_node

    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if total_unvisited <= 2:
            weight = 1.0
        else:
            weight = 0.3 + 0.7 * (total_unvisited / len(distance_matrix))

        normalized_distance = (distance_to_current / max(distance_matrix[current_node])) + weight * (distance_to_destination / max(distance_matrix[node]))
        if normalized_distance < min_score:
            min_score = normalized_distance
            next_node = node

    return next_node
