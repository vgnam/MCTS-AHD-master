def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    if num_unvisited == 1:
        return destination_node
    weight_immediate = 0.3 + 0.4 * (num_unvisited / (num_unvisited + 1))
    weight_potential = 0.7 - 0.4 * (num_unvisited / (num_unvisited + 1))
    penalty = 0.2 * (1 / num_unvisited)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        weighted_cost = (weight_immediate * immediate_distance +
                         weight_potential * potential_distance -
                         penalty * (1 if node in unvisited_nodes else 0))
        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
