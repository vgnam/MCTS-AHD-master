def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    remaining_nodes = len(unvisited_nodes) - 1 if destination_node in unvisited_nodes else len(unvisited_nodes)
    dynamic_threshold = 0.6 if remaining_nodes > 2 else 0.8
    min_cost = float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        normalized_cost = immediate_distance / (potential_distance + 1e-6)
        if normalized_cost < dynamic_threshold:
            next_node = node
            break
    if next_node is None:
        next_node = destination_node
    return next_node
