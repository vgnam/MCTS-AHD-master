def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0
    base_weight = 0.3 + 0.7 * (1 - remaining_ratio)  # increases toward 1.0 as remaining nodes decrease
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        proximity_penalty = 0.2 * (1 - distance_to_dest / max(distance_matrix[node])) if distance_matrix[node] else 0
        combined_score = (1 - base_weight) * distance_to_node + base_weight * distance_to_dest - proximity_penalty
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
