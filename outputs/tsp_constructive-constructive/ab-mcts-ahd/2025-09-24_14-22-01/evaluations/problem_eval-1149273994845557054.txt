def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        dynamic_weight = 0.7 * (remaining_nodes / (remaining_nodes + 2))  # Weight decreases faster
        direct_path = distance_matrix[current_node][destination_node]
        penalty = 1.0 if immediate_distance > 1.5 * direct_path else 1.0  # Tighter penalty threshold
        combined_score = immediate_distance * (1 + dynamic_weight) + dynamic_weight * destination_distance * penalty
        if combined_score < best_score:
            best_score = best_score
            next_node = node
    return next_node
