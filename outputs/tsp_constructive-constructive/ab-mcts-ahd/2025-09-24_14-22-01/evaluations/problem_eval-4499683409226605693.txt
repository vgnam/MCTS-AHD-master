def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1
    total_nodes = len(distance_matrix)

    for node in unvisited_nodes:
        if node == destination_node:
            continue

        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]

        centrality = sum(distance_matrix[node]) / (total_nodes - 1)

        exploitation_factor = (total_nodes - remaining_nodes) / total_nodes

        weighted_cost = 0.5 * immediate_distance + \
                       0.3 * centrality + \
                       0.2 * potential_distance * (1 - exploitation_factor)

        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
