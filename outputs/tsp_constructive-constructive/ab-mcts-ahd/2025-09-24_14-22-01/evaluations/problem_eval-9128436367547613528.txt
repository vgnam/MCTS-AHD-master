def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    centrality = sum(1 / (distance_matrix[current_node][node] + 1e-6) for node in unvisited_nodes) / len(unvisited_nodes)
    weight = 0.3 + (0.7 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1)))
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        weighted_score = (0.7 * immediate_distance * (1 + centrality) + 0.3 * future_distance * (1 - centrality)) * weight
        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node
    return next_node
