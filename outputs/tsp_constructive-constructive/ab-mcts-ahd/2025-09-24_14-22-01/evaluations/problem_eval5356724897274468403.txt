def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    num_unvisited = len(unvisited_nodes)
    if num_unvisited == 0:
        return destination_node
    weight_immediate = max(0.5, 0.8 - 0.3 * (1 - (num_unvisited / len(distance_matrix))))
    weight_estimated = 1 - weight_immediate
    min_total_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        estimated_distance_to_destination = distance_matrix[node][destination_node]
        penalty = 1 + 0.1 * (len(distance_matrix) - num_unvisited) / len(distance_matrix)
        total_distance = weight_immediate * immediate_distance + weight_estimated * estimated_distance_to_destination * penalty
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node
    return next_node
