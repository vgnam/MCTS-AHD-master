def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_value = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        dynamic_weight = 0.5 * (1 - (remaining_nodes / len(unvisited_nodes)))
        combined_value = distance_to_current + dynamic_weight * distance_to_destination
        if combined_value < min_value:
            min_value = combined_value
            next_node = node
    if next_node is None:
        next_node = destination_node
    else:
        min_distance = float('inf')
        closest_node = None
        for node in unvisited_nodes:
            if node == destination_node:
                continue
            distance = distance_matrix[current_node][node]
            if distance < min_distance:
                min_distance = distance
                closest_node = node
        if closest_node is not None and min_distance < min_value:
            next_node = closest_node
    return next_node
