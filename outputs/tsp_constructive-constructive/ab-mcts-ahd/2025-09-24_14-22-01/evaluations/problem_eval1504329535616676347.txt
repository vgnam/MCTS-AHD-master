def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight_factor = (remaining_nodes ** 0.5) / (1.0 + remaining_nodes) if remaining_nodes > 0 else 1.0
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        dynamic_cost = weight_factor * immediate_distance + (1 - weight_factor) * potential_distance
        if dynamic_cost < min_cost:
            min_cost = dynamic_cost
            next_node = node
    if next_node is None:
        next_node = destination_node
    return next_node
