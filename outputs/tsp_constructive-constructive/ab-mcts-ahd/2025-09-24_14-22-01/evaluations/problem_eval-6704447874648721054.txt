def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    base_weight = 0.3 + 0.4 * (1 / (1 + math.exp(-0.5 * (remaining_nodes - 5))))

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        immediate_distance = distance_matrix[current_node][node]
        potential_distance = distance_matrix[node][destination_node]
        distance_to_dest = distance_matrix[current_node][destination_node]
        penalty = 0.1 * (1 - (distance_to_dest / (distance_matrix[0][0] + 1e-6)))

        weighted_cost = base_weight * immediate_distance + (1 - base_weight) * potential_distance + penalty

        if weighted_cost < min_cost:
            min_cost = weighted_cost
            next_node = node

    if next_node is None:
        next_node = destination_node
    return next_node
