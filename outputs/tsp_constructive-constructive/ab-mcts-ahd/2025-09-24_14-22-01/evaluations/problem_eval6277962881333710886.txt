def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    min_score = float('inf')
    next_node = None
    alpha = 0.6  # Weight for immediate distance
    beta = 0.4    # Weight for distance to destination
    gamma = 0.2   # Dynamic adjustment factor for path optimization
    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        combined_score = (alpha * distance_to_current) + (beta * distance_to_destination) + (gamma * (distance_to_current / (distance_to_destination + 1e-10)))
        if combined_score < min_score:
            min_score = combined_score
            next_node = node
    return next_node
