def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining = len(unvisited_nodes)
    weight = 1 / (1 + remaining)  # Dynamic weight based on remaining nodes
    next_node = min(unvisited_nodes, key=lambda node: (distance_matrix[current_node][node] * (1 - weight) + weight * sum(distance_matrix[node][other] for other in unvisited_nodes)) * (1 / (1 + distance_matrix[current_node][node])))
    return next_node
