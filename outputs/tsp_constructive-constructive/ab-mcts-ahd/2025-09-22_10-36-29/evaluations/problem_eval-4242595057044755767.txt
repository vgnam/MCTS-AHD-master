def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = []
    for node in unvisited_nodes:
        if node == destination_node:
            return node
        distance = distance_matrix[current_node][node]
        candidates.append((node, distance))

    if not candidates:
        return destination_node

    candidates.sort(key=lambda x: x[1])

    selected_node = None
    cumulative_weights = []
    total_weight = 0.0

    for node, distance in candidates:
        weight = 1.0 / (distance + 1e-10)
        total_weight += weight
        cumulative_weights.append((node, total_weight))

    if not cumulative_weights:
        return destination_node

    rand_val = random.uniform(0, total_weight)
    for node, weight in cumulative_weights:
        if rand_val <= weight:
            selected_node = node
            break

    return next_node
