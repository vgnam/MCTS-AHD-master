def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if len(unvisited_nodes) % 2 == 0:
        best_node = None
        best_distance = float('inf')
        for node in unvisited_nodes:
            distance = distance_matrix[current_node][node]
            if node == destination_node:
                return node
            if distance < best_distance:
                best_distance = distance
                best_node = node
    else:
        best_node = None
        best_score = -float('inf')
        for node in unvisited_nodes:
            if node == destination_node:
                return node
            min_future_distance = min(distance_matrix[node][next_node] for next_node in unvisited_nodes if next_node != node)
            score = min_future_distance
            if score > best_score:
                best_score = score
                best_node = node

    return next_node
