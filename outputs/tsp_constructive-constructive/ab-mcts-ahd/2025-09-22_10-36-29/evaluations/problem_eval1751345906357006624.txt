def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = []
    weights = []

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        if node == destination_node:
            future_dist = 0
        else:
            future_dist = min(distance_matrix[node][other] for other in unvisited_nodes - {node} if (unvisited_nodes - {node}))

        total_cost = current_dist + future_dist
        candidates.append(node)
        weights.append(1 / (total_cost + 1e-10))

    next_node = random.choices(candidates, weights=weights, k=1)[0]
    return next_node
