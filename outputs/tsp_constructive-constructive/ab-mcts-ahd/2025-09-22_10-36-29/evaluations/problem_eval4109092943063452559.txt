def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        dest_distance = distance_matrix[current_node][destination_node]
        other_nodes = [node for node in unvisited_nodes if node != destination_node]

        if not other_nodes:
            return destination_node

        min_other_distance = min(distance_matrix[current_node][node] for node in other_nodes)
        prob = 0.5 * (1 - (dest_distance / (dest_distance + min_other_distance)))

        if random.random() < prob:
            return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    return next_node
