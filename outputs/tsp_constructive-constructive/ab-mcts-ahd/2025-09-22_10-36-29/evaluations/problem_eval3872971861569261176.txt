def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        if node == destination_node:
            avg_future_dist = 0
        else:
            remaining_nodes = unvisited_nodes - {node}
            if not remaining_nodes:
                avg_future_dist = distance_matrix[node][destination_node]
            else:
                avg_future_dist = sum(distance_matrix[node][other] for other in remaining_nodes) / len(remaining_nodes)

        score = (avg_future_dist - current_dist) / (current_dist + 1e-10)

        if score > best_score:
            best_score = score
            best_node = node

    return next_node
