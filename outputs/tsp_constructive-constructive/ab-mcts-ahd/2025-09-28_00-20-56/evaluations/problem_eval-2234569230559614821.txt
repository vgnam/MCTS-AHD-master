def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_total_distance = float('inf')
    best_ratio = -1
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        total_distance = current_distance + remaining_distance

        if current_distance == 0:
            ratio = float('inf')
        else:
            ratio = remaining_distance / current_distance

        if total_distance < min_total_distance or (total_distance == min_total_distance and ratio > best_ratio):
            min_total_distance = total_distance
            best_ratio = ratio
            next_node = node

    if destination_node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][destination_node]
        dynamic_threshold = min_total_distance * 0.75 if min_total_distance != float('inf') else float('inf')
        if direct_distance <= dynamic_threshold:
            next_node = destination_node

    return next_node
