def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    harmonic_sum = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    threshold_factor = 0.8 - 0.05 * (num_unvisited / len(distance_matrix))  # Dynamic threshold

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        
        if current_distance == 0 or remaining_distance == 0:
            total_distance = float('inf')
        else:
            total_distance = 2 / ((1 / current_distance) + (1 / remaining_distance))  # Harmonic mean

        if total_distance < harmonic_sum:
            harmonic_sum = total_distance
            next_node = node

    if destination_node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][destination_node]
        if direct_distance <= harmonic_sum * threshold_factor:
            next_node = destination_node

    return next_node
