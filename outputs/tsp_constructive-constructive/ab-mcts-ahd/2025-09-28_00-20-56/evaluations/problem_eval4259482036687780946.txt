def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_score(node):
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        weight = 0.6 if len(unvisited_nodes) > 4 else 0.4
        lookahead_distance = min(distance_matrix[node][other_node] + distance_matrix[other_node][destination_node] for other_node in unvisited_nodes if other_node != node) if len(unvisited_nodes) > 1 else remaining_distance
        return weight * remaining_distance + (1 - weight) * lookahead_distance + current_distance

    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
