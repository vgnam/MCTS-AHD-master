def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_score(node):
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        total_tour_length = sum(distance_matrix[current_node][other_node] for other_node in unvisited_nodes)
        distance_traveled_so_far = sum(distance_matrix[other_node][current_node] for other_node in visited_nodes if other_node != current_node)
        return current_distance + 0.1 * total_tour_length + 0.05 * distance_traveled_so_far

    visited_nodes = set(distance_matrix.keys()) - unvisited_nodes
    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
