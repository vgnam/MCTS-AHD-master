def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            next_dist = min(distance_matrix[node][n] for n in unvisited_nodes if n != node)
            lookahead_dist = next_dist / distance_matrix[node][destination_node]
        else:
            lookahead_dist = distance_matrix[node][destination_node]
        return current_dist + 0.3 * lookahead_dist

    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
