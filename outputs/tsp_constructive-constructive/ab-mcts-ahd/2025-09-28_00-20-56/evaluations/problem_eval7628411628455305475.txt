def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    min_total_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        
        if current_distance == 0:
            ratio = float('inf')
        else:
            ratio = remaining_distance / current_distance
        
        threshold = 0.9 - 0.05 * (num_unvisited / (num_unvisited + 1))
        weight = 0.7 if num_unvisited <= 2 else 0.7 + (0.3 * num_unvisited / len(unvisited_nodes))
        
        total_distance = current_distance * (1 / ratio) + (weight * remaining_distance)
        
        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node

    if destination_node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][destination_node]
        threshold = 0.8 if num_unvisited > 3 else 0.6
        if direct_distance <= min_total_distance * threshold:
            next_node = destination_node

    return next_node
