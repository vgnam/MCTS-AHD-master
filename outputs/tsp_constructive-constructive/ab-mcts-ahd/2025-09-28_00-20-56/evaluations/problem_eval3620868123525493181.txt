def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    remaining_distance_to_destination = distance_matrix[current_node][destination_node]
    dynamic_threshold_factor = 1.5 - (len(unvisited_nodes) / len(distance_matrix))

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    # Prioritize destination node if it's unvisited and within a dynamic distance threshold
    if destination_node in unvisited_nodes:
        if remaining_distance_to_destination <= min_distance * dynamic_threshold_factor:
            next_node = destination_node

    return next_node
