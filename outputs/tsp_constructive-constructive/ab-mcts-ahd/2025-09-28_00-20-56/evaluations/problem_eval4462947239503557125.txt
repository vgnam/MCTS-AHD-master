def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        remaining_dist = distance_matrix[node][destination_node]
        num_unvisited = len(unvisited_nodes)

        if current_dist == 0:
            ratio = float('inf')
        else:
            ratio = remaining_dist / current_dist

        threshold = 0.9 - 0.05 * (num_unvisited / (num_unvisited + 1))

        if node == destination_node and current_dist <= ratio * threshold:
            return -float('inf')

        lookahead_score = (num_unvisited * current_dist + remaining_dist) * (1 / ratio)
        return 0.7 * current_dist + 0.3 * lookahead_score

    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
