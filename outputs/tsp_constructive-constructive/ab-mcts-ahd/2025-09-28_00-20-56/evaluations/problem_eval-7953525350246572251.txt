def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def evaluate_node(node):
        current_dist = distance_matrix[current_node][node]
        avg_dist_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        density_factor = len(unvisited_nodes) / (len(unvisited_nodes) + len(distance_matrix))
        penalty = (1 - density_factor) * avg_dist_to_unvisited
        return 0.6 * current_dist + 0.4 * (density_factor * current_dist) + penalty

    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
