def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_remaining_distance = sum(distance_matrix[node][destination_node] for node in unvisited_nodes)
    avg_remaining_distance = total_remaining_distance / len(unvisited_nodes)

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        immediate_dist = distance_matrix[current_node][node]
        remaining_dist = distance_matrix[node][destination_node]
        adjusted_remaining_dist = remaining_dist * (avg_remaining_distance / remaining_dist) ** 2
        total_score = immediate_dist + 0.5 * adjusted_remaining_dist

        if total_score < min_distance:
            min_distance = total_score
            next_node = node

    destination_distance = distance_matrix[current_node][destination_node]
    if destination_node in unvisited_nodes and destination_distance <= min_distance * 1.2:  # Dynamic threshold
        next_node = destination_node

    return next_node
