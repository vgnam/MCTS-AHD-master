def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = -1
    next_node = None

    for node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        centrality = sum(1 for neighbor in unvisited_nodes if distance_matrix[node][neighbor] < float('inf')) / len(unvisited_nodes)

        score = 0.6 * (1 / (1 + direct_distance)) + 0.4 * centrality

        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        direct_distance = distance_matrix[current_node][destination_node]
        if direct_distance <= best_score * 0.7:
            next_node = destination_node

    return next_node
