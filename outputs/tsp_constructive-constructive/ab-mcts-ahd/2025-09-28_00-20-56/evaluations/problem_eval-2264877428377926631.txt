def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_score(node):
        num_unvisited = len(unvisited_nodes)
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]

        if current_distance == 0:
            ratio = float('inf')
        else:
            ratio = remaining_distance / current_distance

        threshold = 0.9 - 0.05 * (num_unvisited / (num_unvisited + 1))
        if node == destination_node and current_distance <= ratio * threshold:
            return -float('inf')

        score = (num_unvisited * current_distance + remaining_distance) * (1 / ratio)
        return score

    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
