def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    destination_distance = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    # Calculate dynamic threshold based on remaining distances
    if destination_node in unvisited_nodes:
        remaining_distances = [distance_matrix[node][destination_node] for node in unvisited_nodes]
        avg_remaining_distance = sum(remaining_distances) / len(remaining_distances) if remaining_distances else 0
        dynamic_threshold = 1.2 + (destination_distance / (avg_remaining_distance + 1e-6)) * 0.5

        if destination_distance <= min_distance * dynamic_threshold:
            next_node = destination_node

    return next_node
