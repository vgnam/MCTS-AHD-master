def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_score(node):
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        detour_penalty = 0
        if unvisited_nodes:
            avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes) / len(unvisited_nodes)
            detour_penalty = max(0, avg_distance - current_distance)
        return current_distance + (0.6 * remaining_distance) + (0.4 * detour_penalty)

    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
