def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_total_distance = float('inf')
    next_node = None
    destination_distance = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        total_distance = current_distance + remaining_distance * 1.2  # Penalize nodes too far from destination

        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node

    # Prioritize destination if it's unvisited and the path to it is within 70% of the min total distance
    if destination_node in unvisited_nodes:
        if destination_distance <= min_total_distance * 0.7:
            next_node = destination_node

    return next_node
