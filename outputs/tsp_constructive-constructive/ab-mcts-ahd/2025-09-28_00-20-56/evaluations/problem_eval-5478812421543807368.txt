def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    remaining_distance_to_destination = distance_matrix[current_node][destination_node]

    adaptive_priority_factor = 1 / (1 + remaining_distance_to_destination / (num_unvisited * 50 + 1))

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance * adaptive_priority_factor:
            next_node = node
            break

    if next_node is None:
        for node in unvisited_nodes:
            distance = distance_matrix[current_node][node]
            if distance < min_distance:
                min_distance = distance
                next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance < min_distance:
            next_node = destination_node

    return next_node
