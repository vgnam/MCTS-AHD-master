def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
    min_distance = min(distances)
    avg_distance = sum(distances) / len(distances)
    closest_node = unvisited_nodes[distances.index(min_distance)]

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        dynamic_probability = min(1.0, (avg_distance / (destination_distance + 1e-6)) ** 0.5)
        if random.random() < dynamic_probability:
            return destination_node

    return next_node
