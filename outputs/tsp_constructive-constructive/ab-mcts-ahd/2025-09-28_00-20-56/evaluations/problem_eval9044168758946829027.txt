def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def calculate_score(node):
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        proximity_factor = 0
        for other_node in unvisited_nodes:
            if other_node != node:
                proximity_factor += (distance_matrix[current_node][other_node] - distance_matrix[node][other_node]) / (distance_matrix[current_node][other_node] + 1e-6)
        detour_penalty = (current_distance + remaining_distance) * (1 + abs(proximity_factor))
        return detour_penalty

    next_node = min(unvisited_nodes, key=calculate_score)
    return next_node
