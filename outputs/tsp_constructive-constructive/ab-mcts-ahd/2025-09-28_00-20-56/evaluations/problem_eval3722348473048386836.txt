def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    if destination_node in unvisited_nodes:
        unvisited_distances = [distance_matrix[current_node][node] for node in unvisited_nodes]
        avg_distance = sum(unvisited_distances) / len(unvisited_distances)
        destination_distance = distance_matrix[current_node][destination_node]

        if destination_distance <= avg_distance * 1.3:  # Adaptive threshold
            return destination_node

    min_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    return next_node
