def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = {}
    min_distance = float('inf')

    for node in unvisited_nodes:
        proximity_distance = distance_matrix[current_node][node]
        scores[node] = 1 / (proximity_distance + 1)  # Higher score for closer nodes
        if proximity_distance < min_distance:
            min_distance = proximity_distance

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance <= min_distance * 1.5:
            scores[destination_node] += (1.5 - (destination_distance / min_distance))  # Boost score for destination

    next_node = max(scores, key=scores.get)
    return next_node
