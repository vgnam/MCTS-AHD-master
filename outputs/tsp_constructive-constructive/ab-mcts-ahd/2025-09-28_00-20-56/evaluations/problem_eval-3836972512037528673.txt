def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def evaluate_node(node):
        # Immediate distance (60% weight)
        current_dist = distance_matrix[current_node][node]
        # Penalty for revisiting nodes (40% weight)
        penalty = 1.0 if node == destination_node and len(unvisited_nodes) > 1 else 0.0
        # Combine distances
        return 0.6 * current_dist + 0.4 * penalty

    next_node = min(unvisited_nodes, key=evaluate_node)
    return next_node
