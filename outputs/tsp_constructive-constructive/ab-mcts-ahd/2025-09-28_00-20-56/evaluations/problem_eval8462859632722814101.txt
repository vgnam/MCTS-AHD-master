def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)
    remaining_distance_to_destination = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination_from_node = distance_matrix[node][destination_node]
        future_travel_cost = sum(distance_matrix[node][unvisited] for unvisited in unvisited_nodes if unvisited != node)
        score = (1 / distance_to_node) + (1 / remaining_distance_to_destination) - (future_travel_cost / (num_unvisited * 100 + 1))
        if score > best_score:
            best_score = score
            next_node = node

    if destination_node in unvisited_nodes and distance_matrix[current_node][destination_node] < (1 / best_score):
        next_node = destination_node

    return next_node
