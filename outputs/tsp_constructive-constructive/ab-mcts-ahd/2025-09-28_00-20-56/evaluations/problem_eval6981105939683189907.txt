def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_total_distance = float('inf')
    next_node = None
    destination_in_unvisited = destination_node in unvisited_nodes

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        remaining_distance = distance_matrix[node][destination_node]
        penalty = (remaining_distance - distance_matrix[current_node][destination_node]) ** 2
        total_distance = current_distance + remaining_distance + penalty

        if total_distance < min_total_distance:
            min_total_distance = total_distance
            next_node = node

    if destination_in_unvisited:
        direct_distance = distance_matrix[current_node][destination_node]
        dynamic_threshold = 0.7 + 0.1 * (len(unvisited_nodes) / len(distance_matrix))
        if direct_distance <= min_total_distance * dynamic_threshold:
            next_node = destination_node

    return next_node
