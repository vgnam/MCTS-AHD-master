def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def evaluate_path(node):
        if not unvisited_nodes - {node}:
            return distance_matrix[current_node][node] + distance_matrix[node][destination_node]
        next_closest = min(unvisited_nodes - {node}, key=lambda n: distance_matrix[node][n])
        return distance_matrix[current_node][node] + distance_matrix[node][next_closest]

    next_node = min(unvisited_nodes, key=lambda node: evaluate_path(node))
    return next_node
