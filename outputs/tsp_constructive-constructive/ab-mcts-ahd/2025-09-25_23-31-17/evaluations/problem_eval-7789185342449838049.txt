def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    alpha = 1.0 if total_unvisited == 1 else (total_unvisited / (total_unvisited + 1)) ** 0.5

    def weighted_score(node):
        local_cost = distance_matrix[current_node][node]
        global_cost = distance_matrix[node][destination_node]
        return alpha * local_cost + (1 - alpha) * global_cost

    next_node = min(unvisited_nodes, key=weighted_score)
    return next_node
