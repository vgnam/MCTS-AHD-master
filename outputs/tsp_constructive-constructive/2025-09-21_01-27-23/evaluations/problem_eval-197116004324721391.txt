def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_weighted_score = float('inf')
    next_node = None

    # Dynamic weight factor based on remaining unvisited nodes
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.5 if remaining_nodes > 2 else 0.7  # Higher weight for destination when few nodes left

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        # Weighted score combining proximity to current and destination
        weighted_score = (1 - weight_factor) * current_distance + weight_factor * destination_distance

        if weighted_score < min_weighted_score:
            min_weighted_score = weighted_score
            next_node = node

    return next_node
