def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_score = float('-inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        dest_distance = distance_matrix[node][destination_node]
        progress_factor = 1 - (len(unvisited_nodes) / (len(unvisited_nodes) + 1))  # Normalized progress factor
        score = (1 - progress_factor) * current_distance + progress_factor * dest_distance  # Weighted score

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
