def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    weight = 0.8  # Higher weight for distance to current node (closer to No.2's emphasis)

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node
        elif distance == min_distance:
            # If distances are equal, choose the node closer to the destination, weighted by 0.8
            if weight * distance_matrix[node][destination_node] < weight * distance_matrix[next_node][destination_node]:
                next_node = node

    return next_node
