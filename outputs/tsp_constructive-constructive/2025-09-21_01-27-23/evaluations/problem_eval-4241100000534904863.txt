def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.5 * (1 + (remaining_nodes / (remaining_nodes + 1)))  # Dynamic weight adjustment

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        weighted_score = (weight_factor * distance_to_current) + ((1 - weight_factor) * distance_to_dest)

        if weighted_score < min_score:
            min_score = weighted_score
            next_node = node

    return next_node
