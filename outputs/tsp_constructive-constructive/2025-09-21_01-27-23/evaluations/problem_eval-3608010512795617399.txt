def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]

        # Calculate a combined score considering current distance, destination distance, and neighbor connectivity
        neighbors = [n for n in unvisited_nodes if n != node]
        if neighbors:
            avg_neighbor_dist = sum(distance_matrix[node][n] for n in neighbors) / len(neighbors)
            score = current_dist + 0.5 * dest_dist + 0.2 * avg_neighbor_dist
        else:
            score = current_dist + 0.5 * dest_dist

        if score < min_distance:
            min_distance = score
            next_node = node

    return next_node
