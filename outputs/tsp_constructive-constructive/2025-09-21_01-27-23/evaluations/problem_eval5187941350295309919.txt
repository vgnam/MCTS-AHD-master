def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    alpha = 0.7  # Weight for current node proximity
    beta = 0.3   # Weight for destination proximity
    decay = 0.9  # Time decay factor

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        score = alpha * current_dist + beta * dest_dist * decay

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
