def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node
        elif distance == min_distance:
            # If distances are equal, choose the node with the smallest average distance to unvisited nodes
            avg_distance_new = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / max(1, len(unvisited_nodes) - 1)
            avg_distance_current = sum(distance_matrix[next_node][other] for other in unvisited_nodes if other != next_node) / max(1, len(unvisited_nodes) - 1)
            if avg_distance_new < avg_distance_current:
                next_node = node

    return next_node
