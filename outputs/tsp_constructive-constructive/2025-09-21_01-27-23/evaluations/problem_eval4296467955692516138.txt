def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    current_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]

        # Weighted score: prioritize closer nodes but also consider distance to destination
        weight = 0.7 if current_to_dest > 0.5 * max(distance_matrix[current_node]) else 0.3
        score = (1 - weight) * current_to_node + weight * node_to_dest

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
