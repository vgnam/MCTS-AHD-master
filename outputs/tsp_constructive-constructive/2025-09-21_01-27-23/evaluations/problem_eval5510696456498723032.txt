def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')

    # Calculate weight based on the number of remaining nodes
    remaining_nodes = len(unvisited_nodes)
    weight_current = 1.0 / (1.0 + remaining_nodes)  # Decrease weight as more nodes remain
    weight_dest = 1.0 - weight_current

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        # Weighted score combining both distances
        score = weight_current * distance_to_current + weight_dest * distance_to_dest

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
