def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        dest_dist = distance_matrix[node][destination_node]
        weight = 0.5 * (1 + (dest_dist / (current_dist + dest_dist + 1e-6)))  # Dynamic weight
        score = weight * current_dist + (1 - weight) * dest_dist

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
