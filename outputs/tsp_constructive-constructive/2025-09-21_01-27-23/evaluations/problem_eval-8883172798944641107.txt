def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    # Calculate weight based on remaining nodes and proximity to destination
    remaining_nodes = len(unvisited_nodes)
    weight = 0.5 if remaining_nodes > 1 else 0.8  # Higher weight for destination when few nodes remain

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Score combines weighted distances to current and destination
        score = (1 - weight) * distance_to_current + weight * distance_to_destination

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
