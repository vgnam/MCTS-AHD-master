def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node
        elif distance == min_distance:
            # If distances are equal, choose the node with the smallest ratio of distance to destination over distance to current node
            ratio_current = distance_matrix[current_node][node] / (distance_matrix[node][destination_node] + 1e-10)  # Avoid division by zero
            ratio_next = distance_matrix[current_node][next_node] / (distance_matrix[next_node][destination_node] + 1e-10)
            if ratio_current < ratio_next:
                next_node = node

    return next_node
