def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node
        elif distance == min_distance:
            if distance_matrix[node][destination_node] < distance_matrix[next_node][destination_node]:
                next_node = node

    # Penalize nodes closer to destination than current node
    if next_node and distance_matrix[next_node][destination_node] < distance_matrix[current_node][destination_node]:
        next_node = min(
            unvisited_nodes,
            key=lambda node: distance_matrix[current_node][node] + distance_matrix[node][destination_node]
        )

    return next_node
