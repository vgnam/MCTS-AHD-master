def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        proximity_penalty = distance_to_dest / (distance_to_current + 1e-6)  # Avoid division by zero

        # Weighted score: prioritize proximity to current node, balance with distance to destination, penalize nodes too close to destination
        score = distance_to_current + 0.7 * distance_to_dest + 0.4 * proximity_penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
