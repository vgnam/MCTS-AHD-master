def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    candidates = []
    remaining_count = len(unvisited_nodes)
    weight = 0.3 if remaining_count > 2 else 0.1  # Adjust weight based on remaining nodes
    for node in unvisited_nodes:
        next_distance = distance_matrix[current_node][node]
        if remaining_count > 1:
            remaining_nodes = unvisited_nodes - {node}
            locality = 1.0 / (sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes) + 1e-6)
            total_distance = next_distance + weight * locality
        else:
            total_distance = next_distance
        candidates.append((node, total_distance))
    next_node, _ = min(candidates, key=lambda x: x[1])
    return next_node
