def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    candidates = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        if len(unvisited_nodes) > 1:
            remaining_nodes = unvisited_nodes - {node}
            locality = 1.0 / (sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes) + 1e-6)
        else:
            locality = 1.0
        score = distance * (1.0 + 0.5 * (degree + 1e-6) * locality)
        candidates.append((node, score))
    next_node, _ = min(candidates, key=lambda x: x[1])
    return next_node
