def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def heuristic_score(node):
        immediate_dist = distance_matrix[current_node][node]
        remaining_nodes = unvisited_nodes - {node}
        lookahead_savings = 0

        if remaining_nodes:
            for n in remaining_nodes:
                direct = distance_matrix[node][n]
                via_node = distance_matrix[node][destination_node] + distance_matrix[destination_node][n]
                lookahead_savings += max(0, direct - via_node)

        return immediate_dist - 0.3 * lookahead_savings

    next_node = min(unvisited_nodes, key=heuristic_score)
    return next_node
