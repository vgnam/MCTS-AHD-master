def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    candidates = []
    total_nodes = len(unvisited_nodes) + 1
    for node in unvisited_nodes:
        next_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining_nodes = unvisited_nodes - {node}
            avg_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes)
            weight = 0.3 * (0.9 ** (total_nodes - len(remaining_nodes)))
            total_distance = next_distance + weight * avg_distance + 0.01 * (next_distance + avg_distance) * (0.5 - random.random())
        else:
            total_distance = next_distance
        candidates.append((node, total_distance))
    next_node, _ = min(candidates, key=lambda x: x[1])
    return next_node
