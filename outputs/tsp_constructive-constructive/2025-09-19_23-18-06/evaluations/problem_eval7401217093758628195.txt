def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def adjusted_score(node):
        distance = distance_matrix[current_node][node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        if not unvisited_nodes:
            locality = 1.0
        else:
            locality = 1.0 / (sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) + 1e-6)
        return distance * (1.0 + 0.5 * (1.0 / (degree + 1e-6))) * locality

    next_node = min(unvisited_nodes, key=adjusted_score)
    return next_node
