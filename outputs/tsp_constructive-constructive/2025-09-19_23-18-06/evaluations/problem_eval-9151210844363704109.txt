def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining_nodes = unvisited_nodes - {node}
            future_distances = [distance_matrix[node][n] for n in remaining_nodes if n != node]
            future_distances_sorted = sorted(future_distances)
            avg_future_distance = sum(future_distances_sorted[:3]) / 3 if len(future_distances_sorted) >= 3 else sum(future_distances_sorted) / len(future_distances_sorted)
            total_score = 0.6 * immediate_distance + 0.4 * avg_future_distance
        else:
            total_score = immediate_distance
        candidates.append((node, total_score))

    next_node, _ = min(candidates, key=lambda x: x[1])
    return next_node
