def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    def average_distance_to_remaining(node, nodes):
        if not nodes:
            return 0.0
        total = 0.0
        for n in nodes:
            total += distance_matrix[node][n]
        return total / len(nodes)

    candidates = []
    for node in unvisited_nodes:
        direct_dist = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining = unvisited_nodes - {node}
            avg_dist = average_distance_to_remaining(node, remaining)
            score = 0.6 * direct_dist + 0.4 * avg_dist
        else:
            score = direct_dist
        candidates.append((node, score))

    next_node, _ = min(candidates, key=lambda x: x[1])
    return next_node
