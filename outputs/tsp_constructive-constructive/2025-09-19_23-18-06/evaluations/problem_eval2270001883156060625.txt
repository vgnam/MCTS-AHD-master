def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = []
    total_weight = 0.0

    for node in unvisited_nodes:
        immediate_dist = distance_matrix[current_node][node]
        degree = sum(1 for d in distance_matrix[node] if d > 0)
        connectivity = degree / (len(unvisited_nodes) - 1) if len(unvisited_nodes) > 1 else 1.0
        score = (1.0 / (immediate_dist + 1e-6)) * (0.5 + 0.5 * connectivity)
        candidates.append((node, score))
        total_weight += score

    if total_weight == 0:
        return min(unvisited_nodes, key=lambda x: distance_matrix[current_node][x])

    rand_val = random.random() * total_weight
    cumulative = 0.0

    for node, score in candidates:
        cumulative += score
        if rand_val <= cumulative:
            return node

    return next_node
