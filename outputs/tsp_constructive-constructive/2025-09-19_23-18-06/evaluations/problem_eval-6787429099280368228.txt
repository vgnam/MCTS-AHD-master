def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    candidates = []
    n_unvisited = len(unvisited_nodes)
    for node in unvisited_nodes:
        next_distance = distance_matrix[current_node][node]
        if n_unvisited > 1:
            remaining_nodes = unvisited_nodes - {node}
            avg_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes)
            weight = 1 / (1 + math.exp(-0.5 * (n_unvisited - 5)))
            total_distance = weight * next_distance + (1 - weight) * avg_distance
        else:
            total_distance = next_distance
        candidates.append((node, total_distance))
    next_node, _ = min(candidates, key=lambda x: x[1])
    return next_node
