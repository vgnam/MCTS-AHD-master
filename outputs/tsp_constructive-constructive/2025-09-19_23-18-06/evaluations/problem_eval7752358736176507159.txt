def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    candidates = []
    remaining_count = len(unvisited_nodes)
    temperature = max(0.1, 1.0 - (remaining_count / (remaining_count + 3)))

    for node in unvisited_nodes:
        immediate_dist = distance_matrix[current_node][node]
        if remaining_count == 1:
            total_score = immediate_dist
        else:
            remaining_nodes = unvisited_nodes - {node}
            connectivity_score = sum(distance_matrix[node][n] for n in remaining_nodes) / (remaining_count - 1)
            degree_centrality = sum(1 for n in remaining_nodes if distance_matrix[node][n] < connectivity_score)
            exploration_bonus = temperature * (degree_centrality / (remaining_count - 1))
            total_score = (1 - temperature) * immediate_dist + temperature * (connectivity_score - exploration_bonus)
        candidates.append((node, total_score))

    next_node, _ = min(candidates, key=lambda x: x[1])
    return next_node
