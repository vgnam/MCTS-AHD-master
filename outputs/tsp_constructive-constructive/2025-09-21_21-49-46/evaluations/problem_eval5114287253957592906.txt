def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0
    weight_factor = 1 - remaining_ratio ** 2

    min_score = float('inf')
    next_node = None
    historical_penalty = {}

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        penalty = historical_penalty.get(node, 0)
        combined_score = (1 - weight_factor) * distance_to_current + weight_factor * distance_to_dest + penalty

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    if next_node is not None:
        historical_penalty[next_node] = historical_penalty.get(next_node, 0) + 0.1 * distance_matrix[current_node][next_node]

    return next_node
