def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    total_distance = 0
    count = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        total_distance += distance
        if distance < min_distance:
            min_distance = distance
            next_node = node

    average_distance = total_distance / count if count > 0 else float('inf')

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        threshold = average_distance * (1.2 - 0.1 * (destination_distance / (total_distance + 1e-6)))
        if destination_distance < threshold:
            next_node = destination_node
        else:
            temperature = 0.5 * (1 - (min_distance / (average_distance + 1e-6)))
            if random.random() < temperature:
                next_node = random.choice(unvisited_nodes)

    return next_node
