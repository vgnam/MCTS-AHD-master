def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]
        angular_progress = dist_dest / dist_current if dist_current != 0 else 1.0

        if len(unvisited_nodes) > 1:
            avg_dist = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (len(unvisited_nodes) - 1)
        else:
            avg_dist = 0

        score = angular_progress + 0.5 * avg_dist + dist_current

        if score < min_score:
            min_score = score
            next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        destination_score = destination_distance / distance_matrix[destination_node][destination_node] if distance_matrix[destination_node][destination_node] != 0 else 1.0
        if destination_score < min_score:
            next_node = destination_node

    return next_node
