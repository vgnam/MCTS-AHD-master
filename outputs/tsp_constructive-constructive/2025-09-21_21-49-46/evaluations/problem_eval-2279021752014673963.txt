def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        dynamic_weight = min(1.0, 0.5 + (0.5 * len(unvisited_nodes) / (len(unvisited_nodes) + 1)))
        score = (angular_progress - dist_current) + dynamic_weight * dist_dest

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
