def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    total_nodes = len(unvisited_nodes) + 1
    visited_ratio = (total_nodes - len(unvisited_nodes)) / total_nodes

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        if len(unvisited_nodes) > 1:
            avg_dist = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (len(unvisited_nodes) - 1)
        else:
            avg_dist = 0

        weighted_angular = angular_progress * (0.6 + 0.4 * visited_ratio)
        weighted_distance = dist_current * (0.4 - 0.4 * visited_ratio)
        weighted_avg = avg_dist * 0.3
        score = weighted_angular - weighted_distance + weighted_avg

        if node in [current_node, destination_node]:
            score *= 0.7

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
