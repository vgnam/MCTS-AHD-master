def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    min_angular_momentum = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node
            dist_dest = distance_matrix[node][destination_node]
            min_angular_momentum = dist_dest / distance if distance != 0 else 1.0
        elif distance == min_distance:
            dist_dest = distance_matrix[node][destination_node]
            angular_momentum = dist_dest / distance if distance != 0 else 1.0
            if angular_momentum < min_angular_momentum:
                min_angular_momentum = angular_momentum
                next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        if destination_distance < min_distance:
            next_node = destination_node

    return next_node
