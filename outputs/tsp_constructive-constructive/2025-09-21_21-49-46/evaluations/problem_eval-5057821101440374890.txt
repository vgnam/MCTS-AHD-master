def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if len(unvisited_nodes) > 1:
            avg_dist = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (len(unvisited_nodes) - 1)
            density_weight = 1.0 / len(unvisited_nodes)
            penalty = max(distance_matrix[current_node][other] for other in unvisited_nodes if other != node) - dist_current
        else:
            avg_dist = 0
            density_weight = 0
            penalty = 0

        score = dist_current + dist_dest + density_weight * avg_dist - 0.2 * penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
