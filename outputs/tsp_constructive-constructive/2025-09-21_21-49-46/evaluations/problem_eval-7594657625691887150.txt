def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        weighted_efficiency = (1 / dist_current) * (1 + remaining_ratio)
        score = weighted_efficiency - (angular_progress * 0.3)

        if node in [current_node, destination_node]:
            score *= 0.5

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
