def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        # Dynamic weighting based on proximity to destination
        proximity_factor = 1.0 / (1.0 + dist_dest)
        score = dist_current + (0.3 + 0.4 * proximity_factor) * (1 / angular_progress)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
