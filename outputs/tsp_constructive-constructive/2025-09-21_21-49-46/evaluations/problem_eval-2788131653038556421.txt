def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_distance = float('inf')
    next_node = None
    total_nodes = len(unvisited_nodes) + 1
    exploration_weight = 1.0 - (total_nodes - len(unvisited_nodes)) / total_nodes

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        novelty_bonus = (1.0 / (1.0 + distance)) * exploration_weight

        if distance - novelty_bonus < min_distance:
            min_distance = distance - novelty_bonus
            next_node = node

    if destination_node in unvisited_nodes:
        destination_distance = distance_matrix[current_node][destination_node]
        novelty_bonus_dest = (1.0 / (1.0 + destination_distance)) * exploration_weight
        if destination_distance - novelty_bonus_dest < min_distance:
            next_node = destination_node

    return next_node
