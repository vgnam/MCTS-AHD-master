def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    total_nodes = len(unvisited_nodes) + 1
    visited_ratio = (total_nodes - len(unvisited_nodes)) / total_nodes
    dest_weight = 1.0 + (1.0 / (len(unvisited_nodes) + 1))

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        weighted_angular = angular_progress * (visited_ratio ** 2)
        combined_score = (dist_current + dest_weight * (1.0 - angular_progress)) * 0.5 + weighted_angular * 0.5

        if node in [current_node, destination_node]:
            combined_score *= 0.5

        if combined_score > max_score:
            max_score = combined_score
            next_node = node

    return next_node
