def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0
    time_decay = 1 - (1 - remaining_ratio) ** 2

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        exploration_factor = (1 - remaining_ratio) * (distance_to_dest / (distance_matrix[current_node][destination_node] + 1e-10))
        combined_score = (1 - time_decay) * distance_to_current + time_decay * distance_to_dest + exploration_factor

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
