def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    remaining_nodes = len(unvisited_nodes)
    progress_weight = 1.0 + (remaining_nodes / (remaining_nodes + 1))

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        if len(unvisited_nodes) > 1:
            avg_dist = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (len(unvisited_nodes) - 1)
        else:
            avg_dist = 0

        score = (0.5 * angular_progress - 0.3 * dist_current - 0.2 * avg_dist) * progress_weight

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
