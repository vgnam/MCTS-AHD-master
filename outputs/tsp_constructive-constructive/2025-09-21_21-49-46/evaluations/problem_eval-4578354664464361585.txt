def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes) + 1
    remaining_ratio = len(unvisited_nodes) / total_nodes if total_nodes > 0 else 0.0
    weight_current = 0.6 * remaining_ratio + 0.4
    weight_dest = 0.4 * (1 - remaining_ratio) + 0.3

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        decay_factor = 0.9 ** (1 / (remaining_ratio + 0.1))
        combined_score = (weight_current * distance_to_current) + (weight_dest * distance_to_dest * decay_factor)

        if node in unvisited_nodes and distance_matrix[current_node][node] > 0:
            combined_score += 0.15 * distance_to_current * (1 - decay_factor)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
