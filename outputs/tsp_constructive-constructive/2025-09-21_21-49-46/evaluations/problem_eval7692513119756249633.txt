def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1  # Includes current node
    visited_ratio = 1.0 - (remaining_nodes / total_nodes)  # Ratio of visited nodes to total nodes
    exploration_factor = 1.0 / (2 ** (remaining_nodes / total_nodes))  # Decaying exploration factor
    dest_weight = 1.0 + (2.0 * visited_ratio)  # Weight increases with visited nodes

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        combined_score = (exploration_factor * distance_to_current) + (dest_weight * distance_to_dest)

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
