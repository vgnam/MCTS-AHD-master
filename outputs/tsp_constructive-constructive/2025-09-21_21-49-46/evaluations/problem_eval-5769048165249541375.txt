def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.6 + 0.3 * (1 / (1 + remaining_nodes))  # Adjusts between 0.6 and 0.9

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        max_distance_to_remaining = max(distance_matrix[node][n] for n in unvisited_nodes if n != node)

        penalty = 0.4 * max_distance_to_remaining

        combined_score = distance_to_current + weight_factor * distance_to_dest + penalty

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
