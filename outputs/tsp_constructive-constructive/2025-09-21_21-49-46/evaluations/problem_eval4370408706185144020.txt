import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        # Normalized scoring with dynamic threshold
        threshold = 0.5 + (0.5 * (remaining_nodes / (remaining_nodes + 1)))
        normalized_score = (angular_progress * (1 / (1 + dist_current))) * threshold
        score = normalized_score - (dist_current * (1 - threshold))

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
