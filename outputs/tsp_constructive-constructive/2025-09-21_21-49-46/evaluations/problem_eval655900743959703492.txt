def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, visited_count=None):
    if not unvisited_nodes:
        return destination_node

    if visited_count is None:
        visited_count = {node: 0 for node in unvisited_nodes}

    next_node = None
    max_score = -float('inf')

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        novelty_factor = 1.0 / (1.0 + visited_count.get(node, 0))
        score = angular_progress * dist_dest * novelty_factor

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
