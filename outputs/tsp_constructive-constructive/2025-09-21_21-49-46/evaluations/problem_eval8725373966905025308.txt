def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_path_length = sum(distance_matrix[current_node][destination_node] for node in unvisited_nodes)
    next_node = None
    max_score = -float('inf')

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]
        remaining_dist = distance_matrix[current_node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        angular_weight = 0.7 - 0.3 * (remaining_dist / total_path_length)
        distance_penalty = dist_current * (1 + 0.5 * (remaining_dist / total_path_length))

        score = angular_weight * angular_progress - 0.3 * distance_penalty

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
