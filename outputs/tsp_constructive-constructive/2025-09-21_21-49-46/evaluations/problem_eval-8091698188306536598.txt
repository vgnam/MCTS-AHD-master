import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    total_nodes = len(unvisited_nodes) + 1
    visited_ratio = (total_nodes - len(unvisited_nodes)) / total_nodes
    exploration_weight = math.sqrt(1.0 - visited_ratio)

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        novelty_bonus = (1.0 / (1.0 + dist_current)) * exploration_weight * 2.0

        score = angular_progress + novelty_bonus - dist_current * 0.05

        if node == destination_node:
            score *= 2.0

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
