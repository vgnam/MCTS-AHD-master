def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if num_unvisited > 1:
            avg_dist = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / (num_unvisited - 1)
            distances = [distance_matrix[node][other] for other in unvisited_nodes if other != node]
            variance = sum((d - avg_dist) ** 2 for d in distances) / (num_unvisited - 1)
        else:
            avg_dist = 0
            variance = 0

        dynamic_weight = 0.5 + 0.4 * (num_unvisited / len(distance_matrix))
        score = dist_current + dist_dest + dynamic_weight * avg_dist + 0.2 * variance

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
