import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        # Dynamic weighting based on proximity to destination
        proximity_weight = 1 / (1 + math.exp(-(dist_dest - 5)))  # Threshold for proximity
        score = (angular_progress * proximity_weight) + (dist_dest * (1 - proximity_weight))

        if score > max_score:
            max_score = score
            next_score = node

    return next_node
