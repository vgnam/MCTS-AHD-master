import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        novelty_bonus = 0.2 * (1.0 / (1.0 + dist_current))

        weight_angular = 0.6
        weight_dist = 0.4

        combined_score = (weight_angular * angular_progress) + (weight_dist * dist_current) + novelty_bonus

        if node in [current_node, destination_node]:
            combined_score += 0.1 * dist_current

        if combined_score < min_score:
            min_score = combined_score
            next_node = node

    return next_node
