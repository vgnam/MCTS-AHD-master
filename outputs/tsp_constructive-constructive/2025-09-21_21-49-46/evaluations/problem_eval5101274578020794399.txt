def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    dist_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        dist_current = distance_matrix[current_node][node]
        dist_dest = distance_matrix[node][destination_node]

        if dist_current == 0:
            angular_progress = 1.0
        else:
            angular_progress = dist_dest / dist_current

        if dist_to_dest == 0:
            weight = 0.5
        else:
            weight = 0.7 if dist_dest > dist_to_dest * 0.5 else 0.5

        score = weight * angular_progress - (1 - weight) * dist_current * (1 + 0.2 * (dist_dest / dist_to_dest))

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
