def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_node_to_destination = distance_matrix[node][destination_node]

        # Heuristic factor: prioritize nodes closer to the current node's position relative to destination
        heuristic_factor = (distance_to_node - distance_node_to_destination) / max(distance_matrix[current_node][destination_node], 1)

        # Weighted score combining distances and heuristic factor
        score = 0.6 * distance_to_node + 0.3 * distance_node_to_destination + 0.1 * heuristic_factor

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
