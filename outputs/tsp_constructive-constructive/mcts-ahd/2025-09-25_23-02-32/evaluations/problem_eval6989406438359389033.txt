def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            score = distance * 0.7  # Higher priority for destination
        else:
            # Penalize nodes that are too far to encourage closer visits
            penalty = 1 + 0.1 * (distance / (sum(distance_matrix[current_node]) / len(distance_matrix[current_node])))
            score = distance * penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
