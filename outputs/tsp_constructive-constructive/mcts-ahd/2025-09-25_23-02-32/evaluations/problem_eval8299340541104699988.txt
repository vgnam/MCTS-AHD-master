def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_node_to_destination = distance_matrix[node][destination_node]

        # Calculate centrality score: sum of distances from current node to all other unvisited nodes
        centrality_score = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node)

        # Combine immediate distance, distance to destination, and centrality
        score = distance_to_node + 0.5 * distance_node_to_destination + 0.3 * centrality_score

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
