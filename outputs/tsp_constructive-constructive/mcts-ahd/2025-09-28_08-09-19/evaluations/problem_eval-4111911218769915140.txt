def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]

        lookahead_depth = min(5, (remaining_count ** 2) // 10) if remaining_count > 5 else 1
        remaining_nodes = unvisited_nodes - {node}

        avg_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes) if remaining_nodes else 0

        connectivity = sum(1 for n in remaining_nodes if distance_matrix[node][n] < 1.1 * avg_distance)
        connectivity_factor = 1.0 + (connectivity / remaining_count) * 0.2

        weight = 0.7 * immediate_distance + 0.3 * (avg_distance * (1.0 / connectivity_factor))

        score = weight

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
