def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = float('inf')
        else:
            euclidean_distance = (distance_to_current ** 2 + distance_to_destination ** 2) ** 0.5
            density_penalty = 1 / (len(unvisited_nodes) + 1)
            revisit_penalty = 1 / (1 + sum(1 for n in unvisited_nodes if n == current_node))

            score = (1 / (euclidean_distance + 1e-6)) * (1 - density_penalty) * revisit_penalty

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
