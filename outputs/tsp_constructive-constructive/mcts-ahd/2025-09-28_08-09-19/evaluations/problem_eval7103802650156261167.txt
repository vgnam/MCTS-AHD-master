def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)
    remaining_distance = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        dynamic_factor = 0.5 + (0.5 * (1 - (remaining_distance / (total_unvisited * max(distance_matrix[current_node][node] for node in unvisited_nodes)))))
        inverse_factor = 1.5 - (0.5 * (remaining_distance / (total_unvisited * max(distance_matrix[node][destination_node] for node in unvisited_nodes))))

        score = (distance_to_current ** dynamic_factor) + (distance_to_destination ** inverse_factor)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
