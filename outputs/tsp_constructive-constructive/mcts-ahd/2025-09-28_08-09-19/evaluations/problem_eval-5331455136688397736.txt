def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        if len(unvisited_nodes) == 1:
            avg_distance = 0
        else:
            distances = [distance_matrix[node][n] for n in unvisited_nodes if n != node]
            avg_distance = sum(distances) / (len(unvisited_nodes) - 1)
            penalty = max(distances) - min(distances) if len(distances) > 1 else 0
            weight = 1 / len(unvisited_nodes)
            avg_distance = avg_distance * (1 - weight) + penalty * weight

        score = distance_to_current + 0.7 * avg_distance

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
