import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = 1.0 - (remaining_nodes / (remaining_nodes + 1)) * 0.7
    temperature = max(0.1, 1.0 - (remaining_nodes / len(distance_matrix)))

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_score = 0

        remaining_nodes_after = unvisited_nodes - {node}
        if remaining_nodes_after:
            connectivity = sum(1 for n in remaining_nodes_after if distance_matrix[node][n] < immediate_distance * 1.5)
            lookahead_score = connectivity / len(remaining_nodes_after)

        immediate_weight = 0.6 + 0.2 * exploration_factor
        lookahead_weight = 0.4 * (1.0 - exploration_factor)

        score = immediate_weight * immediate_distance + lookahead_weight * (1 - lookahead_score) * temperature

        if score < min_score:
            min_score = score
            next_node = node

    if random.random() < 0.1 * temperature:
        next_node = random.choice(list(unvisited_nodes))

    return next_node
