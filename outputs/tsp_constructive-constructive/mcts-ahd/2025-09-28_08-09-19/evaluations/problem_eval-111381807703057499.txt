def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_all = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

        connectivity = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < 1.2 * avg_distance_to_all)
        connectivity_factor = 1.0 + (1.0 / (remaining_nodes + 1)) * connectivity

        weight = 1.0 + (1.0 / (remaining_nodes + 1)) * connectivity_factor

        score = (distance_to_current * 0.4 + avg_distance_to_all * 0.6) * weight

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
