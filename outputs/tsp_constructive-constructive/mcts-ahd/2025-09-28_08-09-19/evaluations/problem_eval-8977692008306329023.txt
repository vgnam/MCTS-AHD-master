def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = float('inf')
        else:
            remaining_nodes = len(unvisited_nodes)
            lambda_param = 1 - (1 / (remaining_nodes + 1))
            weighted_distance = lambda_param * distance_to_destination + (1 - lambda_param) * distance_to_current
            score = weighted_distance / remaining_nodes

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
