def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        if remaining_nodes == 1:
            avg_local_distance = 0
        else:
            avg_local_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (remaining_nodes - 1)

        avg_global_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / remaining_nodes

        weight = 0.5 + 0.5 * (remaining_nodes / (remaining_nodes + 1))
        score = distance_to_current + weight * avg_local_distance + (1 - weight) * avg_global_distance

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
