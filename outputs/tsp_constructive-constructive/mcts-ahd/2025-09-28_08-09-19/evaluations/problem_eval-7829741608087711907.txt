def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = 1.0 / (1.0 + len(unvisited_nodes))  # Decreases as more nodes are visited
    scores = []

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        if len(unvisited_nodes) == 1:
            global_factor = 0
        else:
            global_factor = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (len(unvisited_nodes) - 1)

        score = distance_to_current + (temperature * global_factor)
        scores.append((node, score))

    # Select node with minimum score
    next_node, _ = min(scores, key=lambda x: x[1])
    return next_node
