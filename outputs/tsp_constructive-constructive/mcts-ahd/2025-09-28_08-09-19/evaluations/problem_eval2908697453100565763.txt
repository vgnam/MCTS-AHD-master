def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        detour_penalty = distance_to_current + distance_to_destination - distance_matrix[current_node][destination_node]

        future_accessibility = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0

        score = (0.5 * distance_to_current) + (0.3 * detour_penalty) + (0.2 * future_accessibility)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
