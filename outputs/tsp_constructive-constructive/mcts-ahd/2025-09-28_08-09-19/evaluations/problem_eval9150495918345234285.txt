def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]
        avg_distance_to_all = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

        distance_penalty = (distance_to_current + distance_to_dest) * (remaining_nodes / total_nodes)

        connectivity = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < 1.2 * avg_distance_to_all)
        clustering_factor = 1.0 + (connectivity / (total_nodes - 1)) * 0.3

        score = distance_penalty + (avg_distance_to_all * 0.5) * clustering_factor

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
