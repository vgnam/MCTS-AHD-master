def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_all = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

        proximity_weight = 1.0 + (remaining_nodes / total_nodes) * 0.8
        distance_penalty = 1.0 + (avg_distance_to_all / sum(distance_matrix[node][n] for n in range(len(distance_matrix)) if n != node)) * 0.5

        score = distance_to_current * proximity_weight * distance_penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
