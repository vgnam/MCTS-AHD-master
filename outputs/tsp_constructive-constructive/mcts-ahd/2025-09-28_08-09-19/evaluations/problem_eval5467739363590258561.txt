def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / (1.0 + remaining_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        if len(unvisited_nodes) == 1:
            centrality = 0
        else:
            centrality = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (len(unvisited_nodes) - 1)

        max_distance = max(distance_to_current, centrality, 1.0)
        normalized_current = distance_to_current / max_distance
        normalized_centrality = centrality / max_distance

        score = (normalized_current * (1.0 - temperature)) + (normalized_centrality * temperature)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
