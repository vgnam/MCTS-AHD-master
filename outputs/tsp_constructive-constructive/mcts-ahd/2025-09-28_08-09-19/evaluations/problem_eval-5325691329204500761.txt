def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_count = len(unvisited_nodes)
    lookahead_depth = min(3, remaining_count // 2) if remaining_count > 2 else 1
    dynamic_weight = 1.0 / (1.0 + remaining_count)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        remaining_nodes = unvisited_nodes - {node}

        if remaining_nodes:
            avg_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes)
        else:
            avg_distance = 0

        score = 0.4 * immediate_distance + 0.6 * dynamic_weight * (immediate_distance - avg_distance)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
