import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = math.log(1 + remaining_nodes) / remaining_nodes if remaining_nodes > 0 else 0

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        sum_distance_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node)
        total_score = (1 - weight_factor) * distance_to_current + weight_factor * sum_distance_to_unvisited

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
