def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    scores = []

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = float('inf')
        else:
            score = (1.0 / (distance_to_current ** 2)) * (1.0 / (distance_to_destination ** 0.5))

        scores.append((node, score))

    total_score = sum(score for _, score in scores)
    if total_score == 0:
        return unvisited_nodes[0]

    probabilities = [score / total_score for _, score in scores]
    next_node = random.choices([node for node, _ in scores], weights=probabilities, k=1)[0]

    return next_node
