def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1
    visited_ratio = 1 - (remaining_nodes / total_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

        connectivity = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < 1.2 * avg_distance)
        connectivity_factor = 1.0 + (connectivity / (total_nodes - 1)) * 0.3

        centrality_weight = 0.3 * (1 - visited_ratio)
        immediate_weight = 0.6 - 0.1 * visited_ratio

        score = immediate_weight * immediate_distance + centrality_weight * (avg_distance * connectivity_factor)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
