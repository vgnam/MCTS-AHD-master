def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        if len(unvisited_nodes) == 1:
            avg_distance = 0
        else:
            avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)

        # Static exploration weight
        exploration_weight = 0.4

        # Different penalty structure
        penalty = 0.3 * distance_to_current if distance_to_current > 1.5 * avg_distance else 0

        score = (1 - exploration_weight) * distance_to_current + exploration_weight * avg_distance + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
