def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    progress_bias = len(unvisited_nodes) / total_nodes

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        centrality = sum(distance_matrix[node][n] for n in range(len(distance_matrix))) / len(distance_matrix)
        score = (1 - progress_bias) * distance_to_current + progress_bias * centrality

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
