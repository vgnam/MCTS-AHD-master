def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        hub_potential = sum(distance_matrix[node][n] for n in unvisited_nodes) / (remaining_nodes if remaining_nodes else 1)

        connectivity_density = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < 1.2 * hub_potential)
        dynamic_weight = (1.0 + (remaining_nodes / total_nodes) ** 2) * (1.0 + (connectivity_density / total_nodes) * 0.8)

        score = (immediate_distance + hub_potential) * dynamic_weight

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
