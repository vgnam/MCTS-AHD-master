def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = -float('inf')
    remaining_count = len(unvisited_nodes)
    total_nodes = remaining_count + 1
    temperature = 0.5 + 0.5 * (remaining_count / total_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        remaining_nodes = unvisited_nodes - {node}

        if remaining_nodes:
            avg_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes)
            node_degree = sum(1 for n in remaining_nodes if distance_matrix[node][n] < 1.5 * avg_distance)
            connectivity_penalty = 1.0 + (node_degree / remaining_count) * 0.5
        else:
            avg_distance = 0
            node_degree = 0
            connectivity_penalty = 1.0

        distance_reward = -immediate_distance * (1.0 - temperature)
        degree_reward = node_degree * temperature * 0.3

        score = distance_reward + degree_reward
        score /= connectivity_penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
