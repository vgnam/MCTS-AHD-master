def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0

        degree = sum(1 for n in unvisited_nodes if distance_matrix[node][n] > 0)
        degree_factor = 1.0 + (degree / (total_nodes - 1)) * 0.5
        weight = 1.0 + (remaining_nodes / total_nodes) * (1.0 / (1.0 + degree_factor))

        score = (distance_to_current + avg_distance_to_unvisited) * weight

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
