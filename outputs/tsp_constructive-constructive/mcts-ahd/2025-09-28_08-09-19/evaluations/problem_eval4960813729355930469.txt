def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_possible_nodes = remaining_nodes + 1
    exploration_weight = 0.7 * (remaining_nodes / total_possible_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        future_potential = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / remaining_nodes if remaining_nodes > 1 else 0

        score = (1 - exploration_weight) * distance_to_current + exploration_weight * future_potential

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
