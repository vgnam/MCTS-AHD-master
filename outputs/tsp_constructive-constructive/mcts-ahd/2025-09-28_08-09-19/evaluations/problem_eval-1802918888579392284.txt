def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 0.5 + 0.5 * (remaining_nodes / (remaining_nodes + 2))

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0

        immediate_weight = 0.6 * weight_factor
        future_weight = 0.3 * (1.0 - weight_factor)
        penalty_weight = 0.4 * (1.0 - future_weight)

        penalty = penalty_weight * (distance_to_destination / (1.0 + distance_to_current)) if distance_to_current > 0 else 0
        score = immediate_weight * distance_to_current + future_weight * avg_future_distance - penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
