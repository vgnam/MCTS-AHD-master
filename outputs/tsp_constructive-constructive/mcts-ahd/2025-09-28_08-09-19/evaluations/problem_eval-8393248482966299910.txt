def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_total_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + remaining_nodes)
    lookahead_factor = 0.5 / (1.0 + remaining_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0
        lookahead_score = sum(distance_matrix[n][node] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0
        total_score = (1 - weight_factor - lookahead_factor) * distance_to_current + weight_factor * avg_distance_to_unvisited + lookahead_factor * lookahead_score

        if total_score < min_total_score:
            min_total_score = total_score
            next_node = node

    return next_node
