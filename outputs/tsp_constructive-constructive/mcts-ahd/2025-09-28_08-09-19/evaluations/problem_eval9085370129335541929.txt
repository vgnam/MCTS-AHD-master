def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1
    weight_factor = 1.0 / (1.0 + remaining_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_distance_to_all = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

        connectivity = sum(1 for n in unvisited_nodes if distance_matrix[node][n] < 1.1 * avg_distance_to_all)
        connectivity_factor = 1.0 + (connectivity / total_nodes) * 0.4

        weighted_distance = (0.6 * distance_to_current) + (0.2 * weight_factor * avg_distance_to_all)
        score = weighted_distance * connectivity_factor

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
