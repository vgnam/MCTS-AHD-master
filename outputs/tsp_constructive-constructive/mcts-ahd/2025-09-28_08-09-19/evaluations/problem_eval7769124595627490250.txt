def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]

        # Fixed lookahead depth of 2
        lookahead_depth = 2
        remaining_nodes = unvisited_nodes - {node}

        if remaining_nodes:
            avg_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes)
        else:
            avg_distance = 0

        # Weighted score: 60% of avg_distance, 40% of (1 / immediate_distance)
        score = 0.6 * avg_distance + 0.4 * (1 / immediate_distance if immediate_distance != 0 else 0)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
