def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    decay_factor = 0.7
    weight_factor = 1.0 / (1.0 + remaining_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        immediate_weight = (1.0 - weight_factor)
        global_weight = 0.5 + weight_factor
        penalty_weight = 0.3 * (1.0 - weight_factor)

        penalty = penalty_weight * distance_to_destination if remaining_nodes > 1 else 0

        score = immediate_weight * distance_to_current * (distance_to_destination ** decay_factor) - global_weight * penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
