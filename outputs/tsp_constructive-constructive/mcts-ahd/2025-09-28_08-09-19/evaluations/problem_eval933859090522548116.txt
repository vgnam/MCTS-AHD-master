def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_iterations = len(unvisited_nodes) + 1
    current_iteration = total_iterations - len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        if len(unvisited_nodes) == 1:
            avg_distance = 0
        else:
            avg_distance = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes)

        decay_factor = 1 - (current_iteration / total_iterations)
        score = (decay_factor * distance_to_current) + ((1 - decay_factor) * avg_distance)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
