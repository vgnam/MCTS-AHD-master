def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    total_nodes = len(unvisited_nodes) + 1
    visited_ratio = 1 - (len(unvisited_nodes) / total_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        avg_future_distance = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes) if unvisited_nodes else 0

        weight_factor = 0.5 + 0.5 * (1 - visited_ratio)
        score = weight_factor * distance_to_current + (1 - weight_factor) * avg_future_distance

        if avg_future_distance > 1.5 * distance_to_current:
            score *= 1.1

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
