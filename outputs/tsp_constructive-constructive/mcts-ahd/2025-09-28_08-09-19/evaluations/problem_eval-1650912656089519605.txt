def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    total_nodes = remaining_nodes + 1

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        avg_distance_to_unvisited = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0

        smoothness_factor = 1.0 - (distance_to_destination / (avg_distance_to_unvisited + 1e-6))
        weight_factor = (remaining_nodes / total_nodes) ** 0.5

        score = (1 - weight_factor) * distance_to_current + weight_factor * (distance_to_destination - smoothness_factor * avg_distance_to_unvisited)

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
