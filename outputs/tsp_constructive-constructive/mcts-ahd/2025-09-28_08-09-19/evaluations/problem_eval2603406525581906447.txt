def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('-inf')
    total_nodes = len(unvisited_nodes) + 1
    progress = (total_nodes - len(unvisited_nodes)) / total_nodes

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        centrality = sum(distance_matrix[node][n] for n in unvisited_nodes) / len(unvisited_nodes) if unvisited_nodes else 0
        exploration_factor = (1 - progress) * centrality

        immediate_weight = 0.6
        future_weight = 0.3
        proximity_weight = 0.1

        score = (immediate_weight * (1 / (1 + distance_to_current)) +
                 future_weight * exploration_factor +
                 proximity_weight * (1 / (1 + distance_to_destination)))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
