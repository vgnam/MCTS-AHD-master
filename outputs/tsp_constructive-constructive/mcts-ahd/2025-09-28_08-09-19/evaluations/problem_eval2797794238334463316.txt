def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    remaining = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_current = distance_matrix[current_node][node]

        if remaining == 1:
            avg_distance = 0
        else:
            local_distances = [distance_matrix[node][n] for n in unvisited_nodes if n != node]
            avg_distance = sum(local_distances) / (remaining - 1)

        dynamic_weight = 1 - math.exp(-remaining / 10)
        penalty = max(0, distance_to_current - 1.5 * avg_distance)

        score = (1 - dynamic_weight) * distance_to_current + dynamic_weight * avg_distance + penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
