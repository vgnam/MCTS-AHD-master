def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]

        best_lookahead_distance = float('inf')
        for next_node in unvisited_nodes:
            if next_node != node:
                lookahead_distance = distance_matrix[node][next_node]
                if lookahead_distance < best_lookahead_distance:
                    best_lookahead_distance = lookahead_distance

        if len(unvisited_nodes) > 1:
            score = 0.5 * immediate_distance + 0.5 * best_lookahead_distance
        else:
            score = immediate_distance

        if score < best_score:
            best_score = score
            best_node = node

    return next_node
