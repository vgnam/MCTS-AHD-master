import random
import numpy as np

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    total_nodes = len(distance_matrix)
    progress = 1.0 - remaining_nodes / total_nodes

    lookahead_weight = 0.3 + 0.6 * progress
    immediate_weight = 1.0 - lookahead_weight

    scores = []
    for node in unvisited_nodes:
        immediate_cost = distance_matrix[current_node][node]
        lookahead_cost = 0.0

        if remaining_nodes > 1:
            remaining = [n for n in unvisited_nodes if n != node]
            for next_node in remaining:
                lookahead_cost += distance_matrix[node][next_node]
            lookahead_cost /= len(remaining)

        combined_score = immediate_weight * immediate_cost + lookahead_weight * lookahead_cost
        scores.append(combined_score)

    if random.random() < 0.1 * (1.0 - progress):
        selected_index = random.randint(0, len(unvisited_nodes) - 1)
    else:
        selected_index = scores.index(min(scores))

    next_node = list(unvisited_nodes)[selected_index]
    return next_node
