def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining_nodes = [n for n in unvisited_nodes if n != node]
            weighted_avg_dist = sum(min(distance_matrix[node][n] for n in remaining_nodes if n != k) for k in remaining_nodes) / len(remaining_nodes)
            weight = 0.7 if len(unvisited_nodes) > len(distance_matrix) // 2 else 0.3
            score = current_to_node + weight * weighted_avg_dist
        else:
            score = current_to_node

        if score < best_score:
            best_score = score
            best_node = node

    return next_node
