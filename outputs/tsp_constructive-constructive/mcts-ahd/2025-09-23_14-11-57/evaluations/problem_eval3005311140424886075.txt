def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes) + 1
    immediate_weight = max(0.4, 0.6 * (len(unvisited_nodes) / total_nodes))
    future_weight = 1 - immediate_weight
    penalty_factor = 0.25

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_potential = distance_matrix[node][destination_node]
        revisit_penalty = penalty_factor * immediate_distance if node in unvisited_nodes else 0
        score = immediate_weight * immediate_distance + future_weight * future_potential + revisit_penalty
        scores.append(score)

    min_score = min(scores)
    selected_index = scores.index(min_score)
    next_node = list(unvisited_nodes)[selected_index]

    return next_node
