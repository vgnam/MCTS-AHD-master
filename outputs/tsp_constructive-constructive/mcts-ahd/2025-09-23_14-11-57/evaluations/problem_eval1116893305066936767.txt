def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    max_unvisited = num_unvisited + 1  # To avoid division by zero
    weight_immediate = 0.4 + 0.4 * (max_unvisited - num_unvisited) / max_unvisited
    weight_future = 1.0 - weight_immediate

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_potential = distance_matrix[node][destination_node]
        score = weight_immediate * immediate_distance + weight_future * future_potential
        scores.append(score)

    min_score = min(scores)
    selected_index = scores.index(min_score)
    next_node = list(unvisited_nodes)[selected_index]

    return next_node
