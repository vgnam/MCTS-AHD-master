def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    temperature = 0.7

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_potential = distance_matrix[node][destination_node]

        centrality = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes)

        combined_score = (0.6 * immediate_distance +
                          0.2 * future_potential +
                          0.2 * centrality)

        adjusted_score = combined_score * temperature
        scores.append(adjusted_score)

    max_score = max(scores)
    min_score = min(scores)
    normalized_scores = [(s - min_score) / (max_score - min_score) for s in scores]

    selected_index = normalized_scores.index(max(normalized_scores))
    next_node = list(unvisited_nodes)[selected_node]

    return next_node
