def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining_nodes = [n for n in unvisited_nodes if n != node]
            future_potential = min(distance_matrix[node][n] for n in remaining_nodes)
        else:
            future_potential = 0

        penalty = 0.2 * (1.0 / (immediate_distance + 1e-6)) if immediate_distance < 0.3 else 0
        combined_score = 0.6 * immediate_distance + 0.4 * future_potential - penalty

        if combined_score < best_score:
            best_score = combined_score
            best_node = node

    return next_node
