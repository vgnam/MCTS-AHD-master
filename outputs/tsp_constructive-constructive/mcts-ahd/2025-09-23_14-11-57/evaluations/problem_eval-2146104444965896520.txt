def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        weight = 1.0 if len(unvisited_nodes) > 2 else 0.7
        total_score = immediate_distance + weight * lookahead_distance
        scores.append(total_score)

    min_score = min(scores)
    max_score = max(scores)
    normalized_scores = [(max_score - score + 1e-10) / (max_score - min_score + 1e-10) for score in scores]

    selected_index = random.choices(range(len(unvisited_nodes)), weights=normalized_scores, k=1)[0]
    next_node = unvisited_nodes[selected_index]

    return next_node
