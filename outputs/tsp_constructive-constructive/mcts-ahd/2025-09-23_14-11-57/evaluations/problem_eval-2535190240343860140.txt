def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    max_reduction = -float('inf')

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        direct_current_to_dest = distance_matrix[current_node][destination_node]
        potential_reduction = direct_current_to_dest - (current_to_node + node_to_dest)

        if potential_reduction > max_reduction:
            max_reduction = potential_reduction
            best_node = node

    return next_node
