def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    best_score = float('inf')
    remaining_count = len(unvisited_nodes)

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        if remaining_count > 1:
            remaining_nodes = [n for n in unvisited_nodes if n != node]
            min_remaining_dist = min(distance_matrix[node][n] for n in remaining_nodes)
        else:
            min_remaining_dist = 0

        weight = 1.0 / remaining_count if remaining_count > 1 else 0.0
        score = current_to_node + weight * min_remaining_dist

        if score < best_score:
            best_score = score
            best_node = node

    return next_node
