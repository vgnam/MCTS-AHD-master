def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    min_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1.0 / (1.0 + remaining_nodes)  # Adaptive weight based on remaining nodes

    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        score = (current_to_node + weight_factor * node_to_dest)  # Weighted sum with adaptive weight

        if score < min_score:
            min_score = score
            best_node = node

    return next_node
