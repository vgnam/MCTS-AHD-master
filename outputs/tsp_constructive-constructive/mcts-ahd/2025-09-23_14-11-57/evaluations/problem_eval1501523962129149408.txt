def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    immediate_weight = 0.6 if remaining_nodes > 2 else 0.9
    future_weight = 0.4 if remaining_nodes > 2 else 0.1

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_potential = distance_matrix[node][destination_node]
        combined_score = immediate_weight * immediate_distance + future_weight * future_potential

        # Penalize nodes that are too close to the destination early in the tour
        if remaining_nodes > 3:
            combined_score += 0.1 * distance_matrix[node][destination_node]

        scores.append(combined_score)

    min_score = min(scores)
    selected_index = scores.index(min_score)
    next_node = list(unvisited_nodes)[selected_index]

    return next_node
