def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    exploration_rate = max(0.5, 0.8 * (remaining_nodes / len(distance_matrix)))
    exploitation_rate = 1.0 - exploration_rate

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_potential = distance_matrix[node][destination_node]

        learning_rate = 0.5

        combined_score = (exploration_rate * immediate_distance +
                         exploitation_rate * future_potential) * learning_rate

        scores.append(combined_score)

    min_score = min(scores)
    selected_index = scores.index(min_score)
    next_node = list(unvisited_nodes)[selected_index]

    return next_node
