def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(unvisited_nodes) + 1
    remaining_nodes = len(unvisited_nodes)
    weight_immediate = 0.8 - 0.4 * (remaining_nodes / total_nodes)
    weight_future = 1.0 - weight_immediate

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_potential = distance_matrix[node][destination_node]
        penalty = 0.2 * sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / len(unvisited_nodes)
        score = weight_immediate * immediate_distance + weight_future * future_potential + penalty
        scores.append(score)

    min_score = min(scores)
    selected_index = scores.index(min_score)
    next_node = list(unvisited_nodes)[selected_index]

    return next_node
