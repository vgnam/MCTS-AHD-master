def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes_count = len(unvisited_nodes)
    max_nodes = remaining_nodes_count + 1
    immediate_weight = 1.0 - 0.5 * (max_nodes - remaining_nodes_count) / max_nodes
    lookahead_weight = 0.5 + 0.5 * (max_nodes - remaining_nodes_count) / max_nodes

    best_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        total_score = immediate_weight * immediate_distance + lookahead_weight * lookahead_distance

        if total_score < best_score:
            best_score = total_score
            best_node = node

    return next_node
