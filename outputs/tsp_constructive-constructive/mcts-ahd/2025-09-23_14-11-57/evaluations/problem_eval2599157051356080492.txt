def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]

        lookahead_distances = []
        for next_node in unvisited_nodes:
            if next_node != node:
                lookahead_distances.append(distance_matrix[node][next_node])

        if lookahead_distances:
            second_best_lookahead = sorted(lookahead_distances)[1] if len(lookahead_distances) > 1 else min(lookahead_distances)
        else:
            second_best_lookahead = 0

        score = 0.7 * immediate_distance + 0.3 * second_best_lookahead

        if score < best_score:
            best_score = score
            best_node = node

    return next_node
