import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        total_nodes = len(distance_matrix)
        remaining_nodes = len(unvisited_nodes)
        progress_factor = 1 - math.exp(-0.5 * (total_nodes - remaining_nodes) / total_nodes)

        immediate_weight = (1 - progress_factor) ** 2
        future_weight = progress_factor ** 2

        penalty = 0.1 * (1.0 / (immediate_distance + 1e-6)) if immediate_distance < 0.5 else 0

        combined_score = immediate_weight * immediate_distance + future_weight * future_distance - penalty

        scores.append(combined_score)

    selected_index = scores.index(min(scores))
    next_node = list(unvisited_nodes)[selected_index]

    return next_node
