def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    best_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)
    penalty_factor = 0.5 * (1.0 / (1.0 + remaining_nodes))

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_potential = distance_matrix[node][destination_node]

        revisit_penalty = penalty_factor * immediate_distance * remaining_nodes

        combined_score = immediate_distance + 0.3 * future_potential + revisit_penalty

        if combined_score < best_score:
            best_score = combined_score
            best_node = node

    return next_node
