def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    immediate_weight = max(0.1, 1.0 * (remaining_nodes / (remaining_nodes + 1)))
    lookahead_weight = 1.0 - immediate_weight

    best_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        total_score = immediate_weight * immediate_distance + lookahead_weight * lookahead_distance

        if total_score < best_score:
            best_score = total_score
            best_node = node

    return next_node
