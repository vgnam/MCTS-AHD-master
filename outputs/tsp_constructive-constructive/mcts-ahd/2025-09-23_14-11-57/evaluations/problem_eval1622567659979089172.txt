import random
import numpy as np

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    total_nodes = len(distance_matrix)
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = remaining_nodes / total_nodes

    best_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        total_distance = immediate_distance + future_distance

        # Balance between greedy selection and exploration
        score = (1 - exploration_factor) * immediate_distance + exploration_factor * total_distance

        if score < best_score:
            best_score = score
            best_node = node

    return next_node
