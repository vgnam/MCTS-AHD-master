def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    weights = []
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        lookahead_distance = distance_matrix[node][destination_node]
        base_score = immediate_distance + 0.5 * lookahead_distance

        if remaining_nodes <= 3:
            weight = 1.0
        else:
            weight = 0.7

        weighted_score = base_score * weight
        scores.append(weighted_score)
        weights.append(1.0 / (weighted_score + 1e-6))

    total_weight = sum(weights)
    normalized_weights = [w / total_weight for w in weights]

    selected_index = random.choices(range(len(unvisited_nodes)), weights=normalized_weights, k=1)[0]
    next_node = unvisited_nodes[selected_index]

    return next_node
