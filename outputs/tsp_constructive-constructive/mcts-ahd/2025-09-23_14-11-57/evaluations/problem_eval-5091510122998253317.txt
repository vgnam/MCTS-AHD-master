import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    scores = []
    for node in unvisited_nodes:
        current_to_node = distance_matrix[current_node][node]
        node_to_dest = distance_matrix[node][destination_node]
        total_increase = current_to_node + node_to_dest
        score = 1 / (total_increase + 1e-10)  # Avoid division by zero
        scores.append(score)

    total_score = sum(scores)
    normalized_scores = [s / total_score for s in scores]

    selected_index = random.choices(range(len(unvisited_nodes)), weights=normalized_scores, k=1)[0]
    next_node = unvisited_nodes[selected_index]

    return next_node
