def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes:
        return destination_node

    total_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes)
    if total_distance == 0:
        return destination_node

    def heuristic(node):
        to_current = distance_matrix[current_node][node]
        to_destination = distance_matrix[node][destination_node]
        remaining_progress = to_destination / total_distance if total_distance != 0 else 0
        weight = 1.0 - remaining_progress
        return (1 - weight) * to_current + weight * (to_destination ** 0.5)

    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
