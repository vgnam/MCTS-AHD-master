def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, exploration_rate=0.3):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes:
        return destination_node

    def heuristic(node):
        to_current = distance_matrix[current_node][node]
        to_destination = distance_matrix[node][destination_node]
        exploration_factor = exploration_rate * (1 - (len(unvisited_nodes) / len(distance_matrix)))
        return to_current + (1 - exploration_factor) * to_destination

    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
