def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix, temperature=1.0):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes:
        current_to_dest = distance_matrix[current_node][destination_node]
        total_remaining = sum(distance_matrix[n][destination_node] for n in unvisited_nodes)
        progress_factor = 0.5 if current_to_dest == 0 else min(1.0, 0.5 * (current_to_dest / total_remaining))
        prob = 0.5 + 0.5 * (1 - 1 / (1 + math.exp(-temperature * progress_factor)))
        return destination_node if random.random() < prob else min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node] * (1 + progress_factor))
    next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    return next_node
