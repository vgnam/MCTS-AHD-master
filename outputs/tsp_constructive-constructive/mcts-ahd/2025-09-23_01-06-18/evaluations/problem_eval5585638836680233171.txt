def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    remaining_nodes_ratio = len(unvisited_nodes) / len(distance_matrix)
    if destination_node in unvisited_nodes and remaining_nodes_ratio < 0.3:
        return destination_node
    def heuristic(node):
        to_current = distance_matrix[current_node][node]
        to_destination = distance_matrix[node][destination_node]
        if remaining_nodes_ratio > 0.5:
            return to_current
        elif remaining_nodes_ratio <= 0.3:
            return to_destination
        else:
            return to_current * 0.6 + to_destination * 0.4
    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
