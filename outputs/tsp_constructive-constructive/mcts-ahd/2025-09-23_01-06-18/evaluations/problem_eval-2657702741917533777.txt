def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes:
        current_to_dest = distance_matrix[current_node][destination_node]
        avg_dist = sum(distance_matrix[current_node][n] for n in unvisited_nodes) / len(unvisited_nodes)
        progress_factor = 0.5 if current_to_dest == 0 else min(1.0, 0.5 + (current_to_dest / avg_dist) * 0.5)
        temperature = 1.0 / (1.0 + len(unvisited_nodes) * 0.1)
        prob = 0.5 + 0.5 * (1 - 1 / (1 + math.exp(-temperature * progress_factor)))
        return destination_node if random.random() < prob else min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    return next_node
