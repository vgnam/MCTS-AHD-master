def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes:
        return destination_node
    def heuristic(node):
        to_current = distance_matrix[current_node][node]
        to_destination = distance_matrix[node][destination_node]
        revisit_penalty = 0.1 if node in unvisited_nodes and node != destination_node else 0
        return 0.6 * to_current + 0.4 * to_destination + revisit_penalty
    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
