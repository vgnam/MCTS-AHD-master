def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    if destination_node in unvisited_nodes:
        return destination_node

    num_unvisited = len(unvisited_nodes)
    progress_factor = 0.5 + (0.5 * (num_unvisited / (num_unvisited + 1)))

    def heuristic(node):
        to_current = distance_matrix[current_node][node]
        to_destination = distance_matrix[node][destination_node]
        return (to_current + to_destination) * (1 - progress_factor)

    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
