import random
import math

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    temperature = 1.0 / remaining_nodes if remaining_nodes > 0 else 1.0

    if destination_node in unvisited_nodes:
        if remaining_nodes == 1:
            return destination_node

        prob = 0.5 * (1 - 1 / (1 + math.exp(-temperature * (remaining_nodes - 1))))
        novelty_factor = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
        adjusted_prob = prob + 0.5 * (novelty_factor / max(distance_matrix[current_node].values()))

        return destination_node if random.random() < adjusted_prob else min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])

    next_node = min(unvisited_nodes, key=lambda node: distance_matrix[current_node][node])
    return next_node
