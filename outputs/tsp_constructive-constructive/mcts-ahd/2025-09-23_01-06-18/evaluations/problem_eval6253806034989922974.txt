def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    total_nodes = len(distance_matrix)
    remaining_nodes_ratio = len(unvisited_nodes) / total_nodes
    if destination_node in unvisited_nodes and remaining_nodes_ratio < 0.2:
        return destination_node
    def heuristic(node):
        to_current = distance_matrix[current_node][node]
        to_destination = distance_matrix[node][destination_node]
        if remaining_nodes_ratio < 0.3:
            weight_global = 1.0 - (remaining_nodes_ratio / 0.3) * 0.7
        else:
            weight_global = 0.3
        return to_current * (1.0 - weight_global) + to_destination * weight_global
    next_node = min(unvisited_nodes, key=heuristic)
    return next_node
