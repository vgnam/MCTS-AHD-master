def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    remaining_nodes_count = len(unvisited_nodes)
    weight = 1.0 - (remaining_nodes_count / (remaining_nodes_count + len(unvisited_nodes)))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        remaining_nodes_after_visit = unvisited_nodes - {node}

        if not remaining_nodes_after_visit:
            total_remaining_distance = 0
            avg_remaining_distance = 0
        else:
            total_remaining_distance = sum(distance_matrix[node][n] for n in remaining_nodes_after_visit)
            avg_remaining_distance = total_remaining_distance / len(remaining_nodes_after_visit)

        penalty_term = (distance_to_node ** 2) * weight
        score = (avg_remaining_distance - distance_to_node) - penalty_term

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
