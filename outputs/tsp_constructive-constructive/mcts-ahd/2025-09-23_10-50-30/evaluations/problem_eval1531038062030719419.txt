def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight = 1 - (remaining_nodes / (remaining_nodes + 1)) ** 2  # Non-linear dynamic weight

    # Calculate average distance to unvisited nodes
    avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / remaining_nodes

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        normalized_distance = distance_to_node / avg_distance if avg_distance > 0 else 1

        score = (1 - weight) * (1 / (distance_to_destination + 1e-6)) - weight * normalized_distance

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
