def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_score = float('inf')
    total_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node][other] for other in unvisited_nodes) / total_unvisited
        penalty = 1 + (distance_to_destination / (distance_matrix[current_node][destination_node] + 1e-6))
        score = distance_to_node * distance_to_destination * (1 + 1 / (centrality + 1)) * penalty

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
