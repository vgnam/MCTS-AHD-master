def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    remaining_nodes_count = len(unvisited_nodes)
    weight = 0.5 * (remaining_nodes_count / (remaining_nodes_count + 1)) + 0.5

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        remaining_nodes = unvisited_nodes - {node}

        if remaining_nodes:
            centrality = sum(distance_matrix[node][other] for other in remaining_nodes) / len(remaining_nodes)
            score = (1 - weight) * distance_to_node + weight * (0.3 * distance_to_destination + 0.7 * centrality)
        else:
            score = distance_to_node + distance_to_destination

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
