def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    min_distance = float('inf')
    destination_bias = 0.3 + (0.7 * (1 - len(unvisited_nodes) / (len(unvisited_nodes) + 1)))  # Dynamic bias

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    if destination_node in unvisited_nodes:
        distance_to_destination = distance_matrix[current_node][destination_node]
        if distance_to_destination < min_distance * (1 - destination_bias):
            next_node = destination_node

    return next_node
