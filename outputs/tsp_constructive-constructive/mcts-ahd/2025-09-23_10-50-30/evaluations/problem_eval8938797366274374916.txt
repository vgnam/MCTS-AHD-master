def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')
    remaining_nodes = len(unvisited_nodes)
    weight = remaining_nodes / (remaining_nodes + 1)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        remaining_nodes_after_visit = unvisited_nodes - {node}
        total_remaining_distance = sum(distance_matrix[node][n] for n in remaining_nodes_after_visit) if remaining_nodes_after_visit else 0
        avg_remaining_distance = total_remaining_distance / len(remaining_nodes_after_visit) if remaining_nodes_after_visit else 0
        score = (1 - weight) * (avg_remaining_distance - distance_to_node) - weight * distance_to_node

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
