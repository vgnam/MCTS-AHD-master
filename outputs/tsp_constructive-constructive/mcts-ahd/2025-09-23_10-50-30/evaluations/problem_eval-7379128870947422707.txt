def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    remaining_nodes_count = len(unvisited_nodes)
    weight1 = remaining_nodes_count / (remaining_nodes_count + 2)
    weight2 = remaining_nodes_count / (remaining_nodes_count + 1)
    combined_weight = (weight1 + weight2) / 2

    total_avg_distance = sum(distance_matrix[current_node][n] for n in unvisited_nodes) / len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        remaining_nodes_after_visit = unvisited_nodes - {node}
        total_remaining_distance = sum(distance_matrix[node][n] for n in remaining_nodes_after_visit) if remaining_nodes_after_visit else 0
        avg_remaining_distance = total_remaining_distance / len(remaining_nodes_after_visit) if remaining_nodes_after_visit else 0
        score = (1 - combined_weight) * avg_remaining_distance + combined_weight * distance_to_node + 0.2 * total_avg_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
