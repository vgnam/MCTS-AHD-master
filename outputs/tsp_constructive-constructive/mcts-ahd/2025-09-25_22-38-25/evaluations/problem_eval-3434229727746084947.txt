def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node
    probabilities = []
    total_weight = 0.0
    for node in unvisited_nodes:
        if node == destination_node:
            continue
        weight = 1.0 / (distance_matrix[current_node][node] + 1e-10)
        probabilities.append((node, weight))
        total_weight += weight
    if not probabilities:
        return destination_node if destination_node in unvisited_nodes else unvisited_nodes.pop()
    selected_node = None
    rand_val = random.random() * total_weight
    cumulative_weight = 0.0
    for node, weight in probabilities:
        cumulative_weight += weight
        if rand_val <= cumulative_weight:
            selected_node = node
            break
    return next_node
