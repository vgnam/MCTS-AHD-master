import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    total_unvisited = len(unvisited_nodes)
    destination_prob = min(0.8 * (1 - total_unvisited / (total_unvisited + 1)), 1.0)

    if destination_node in unvisited_nodes and random.random() < destination_prob:
        return destination_node

    min_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node] + 0.3 * distance_matrix[node][destination_node]
        if distance < min_distance:
            min_distance = distance
            next_node = node

    if next_node is not None and random.random() < 0.2:
        nearby_nodes = [node for node in unvisited_nodes if distance_matrix[current_node][node] <= min_distance * 1.2]
        if nearby_nodes:
            return random.choice(nearby_nodes)

    return next_node
