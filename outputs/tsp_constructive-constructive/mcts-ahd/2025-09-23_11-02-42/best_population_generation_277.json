{
     "algorithm": "The algorithm selects the next node in TSP by balancing immediate distance, detour penalties (40% weight), and exploration bonuses (40% weight). It prioritizes nodes that minimize detours (by comparing direct distance to destination via the node) and reward nodes with high connectivity to unvisited nodes (exploration bonus). The score combines these factors to choose the most promising next node, with detour penalties and exploration bonuses given equal weight (0.4 each).",
     "thought": "The new algorithm combines the detour penalty from No.1 (0.4 weight) with the exploration bonus from No.2 (0.4 weight), while using a more balanced exploration bonus calculation based on remaining nodes and direct distances. It selects the next node by minimizing immediate distance, penalizing detours, and rewarding nodes that connect to many unvisited nodes.",
     "code": "def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):\n    next_node = None\n    best_score = float('inf')\n    total_nodes = len(distance_matrix)\n    remaining_nodes = len(unvisited_nodes)\n\n    for node in unvisited_nodes:\n        distance_to_node = distance_matrix[current_node][node]\n        distance_to_destination = distance_matrix[node][destination_node]\n\n        if remaining_nodes == 1:\n            score = distance_to_node + distance_to_destination\n        else:\n            direct_distance = distance_matrix[current_node][destination_node]\n            detour_penalty = (direct_distance / distance_to_destination - 1) * distance_to_destination\n\n            exploration_bonus = 0.0\n            for other_node in unvisited_nodes:\n                if other_node != node:\n                    exploration_bonus += distance_matrix[node][other_node]\n            if remaining_nodes > 1:\n                exploration_bonus /= (remaining_nodes - 1)\n\n            score = distance_to_node + 0.4 * detour_penalty - 0.4 * exploration_bonus\n\n        if score < best_score:\n            best_score = score\n            next_node = node\n\n    return next_node",
     "objective": 6.28936,
     "other_inf": null
}