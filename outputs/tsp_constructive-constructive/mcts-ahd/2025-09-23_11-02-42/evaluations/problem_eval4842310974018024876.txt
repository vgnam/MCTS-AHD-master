def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    min_score = float('inf')
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_dest = distance_matrix[node][destination_node]

        # Dynamic weight for destination distance
        weight = 0.3 + 0.7 * (num_unvisited / len(distance_matrix)) if num_unvisited > 0 else 0.3
        score = distance_to_node + weight * distance_to_dest

        # Penalize revisiting nodes (though none are unvisited)
        if node in unvisited_nodes:
            score += 0.1 * distance_to_node

        if score < min_score:
            min_score = score
            next_node = node

    return next_node
