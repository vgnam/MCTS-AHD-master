def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = -distance_to_node
        else:
            direct_distance = distance_matrix[current_node][destination_node]
            avg_distance = sum(distance_matrix[node]) / len(distance_matrix[node])
            node_significance = avg_distance / distance_to_destination if distance_to_destination != 0 else 0

            exploration_weight = 1.0 - (remaining_nodes / (remaining_nodes + 10))
            exploitation_weight = 1.0 - exploration_weight

            exploration_bonus = exploration_weight * (1.0 / (1.0 + distance_to_node))
            exploitation_factor = exploitation_weight * (distance_to_destination - direct_distance) / direct_distance

            score = -distance_to_node + 1.5 * exploitation_factor + exploration_bonus + 0.5 * node_significance

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
