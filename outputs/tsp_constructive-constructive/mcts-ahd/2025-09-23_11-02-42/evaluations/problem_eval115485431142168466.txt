def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        direct_distance = distance_matrix[current_node][destination_node]

        if remaining_nodes == 1:
            score = distance_to_node + distance_to_destination
        else:
            detour_factor = (distance_to_node + distance_to_destination - direct_distance) / (1.0 + direct_distance)
            weight = 0.4 if remaining_nodes > 3 else 0.6
            lookahead_factor = sum(distance_matrix[node][n] for n in unvisited_nodes if n != node) / (len(unvisited_nodes) - 1) if remaining_nodes > 1 else 0
            score = (1 - weight) * distance_to_node + weight * (0.7 * detour_factor + 0.3 * lookahead_factor)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
