def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    next_node = None
    best_score = float('-inf')
    total_nodes = len(distance_matrix)
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = 1.0 / (1.0 + distance_to_node)
        else:
            direct_distance = distance_matrix[current_node][destination_node]
            exploration_factor = (remaining_nodes / total_nodes) * (1.0 / (1.0 + distance_to_node))

            connectivity_score = sum(1.0 / (1.0 + d) for d in distance_matrix[node] if d > 0)
            novelty_factor = (connectivity_score / total_nodes) ** 0.5

            tour_potential = (direct_distance / distance_to_destination) * (1.0 + 0.3 * novelty_factor)

            score = (0.6 * (1.0 / (1.0 + distance_to_node)) +
                    0.3 * exploration_factor +
                    0.1 * tour_potential)

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
