def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        estimated_total_distance = distance_to_node + distance_matrix[node][destination_node]

        # Dynamic weighting based on remaining nodes
        weight_immediate = 0.5 + 0.2 * (remaining_nodes / len(distance_matrix))
        weight_total = 1.0 - weight_immediate

        score = weight_immediate * distance_to_node + weight_total * estimated_total_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
