def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_value = float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        # Dynamic weight based on the inverse of remaining unvisited nodes
        weight = 1 / (len(unvisited_nodes) + 1)
        value = weight * distance_to_node + (1 - weight) * distance_to_destination

        if value < best_value:
            best_value = value
            next_node = node

    return next_node
