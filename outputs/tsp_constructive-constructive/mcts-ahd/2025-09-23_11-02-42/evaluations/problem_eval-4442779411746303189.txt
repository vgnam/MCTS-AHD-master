def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    next_node = None
    best_score = float('inf')
    direct_distance = distance_matrix[current_node][destination_node]
    remaining_nodes = len(unvisited_nodes)
    exploration_factor = min(0.9, 0.3 + (0.6 * remaining_nodes / (remaining_nodes + 1)))

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = distance_to_node
        else:
            detour_penalty = (distance_to_node + distance_to_destination - direct_distance) ** 2
            score = distance_to_node + detour_penalty * (1 - exploration_factor)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
