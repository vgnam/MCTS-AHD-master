def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')

    remaining_nodes = len(unvisited_nodes)
    if remaining_nodes == 0:
        return destination_node

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = 1.0 / (1.0 + distance_to_node)
        else:
            direct_distance = distance_matrix[current_node][destination_node]
            detour_ratio = distance_to_destination / direct_distance
            exploration_weight = 0.3 + 0.7 * (remaining_nodes / (remaining_nodes + 1))
            exploitation_weight = 1.0 - exploration_weight
            score = (exploration_weight * (1.0 / (1.0 + distance_to_node))) + (exploitation_weight * (1.0 - detour_ratio))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
