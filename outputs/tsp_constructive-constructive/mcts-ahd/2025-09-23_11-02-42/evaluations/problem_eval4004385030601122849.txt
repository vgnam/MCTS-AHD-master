def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    # Adjust weights dynamically based on remaining nodes
    if remaining_nodes <= 2:
        local_weight = 0.9
        global_weight = 0.1
    else:
        local_weight = 0.7
        global_weight = 0.3

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        estimated_total_distance = distance_to_node + distance_matrix[node][destination_node]
        score = local_weight * distance_to_node + global_weight * estimated_total_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
