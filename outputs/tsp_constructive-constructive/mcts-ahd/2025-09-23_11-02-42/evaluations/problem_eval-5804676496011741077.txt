def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        estimated_total_distance = distance_to_node + distance_matrix[node][destination_node]

        # Dynamic adjustment factor: prioritize immediate distance more when close to destination
        adjustment_factor = 0.5 + 0.5 * (distance_matrix[current_node][destination_node] / (distance_matrix[current_node][node] + 1e-6))
        score = adjustment_factor * distance_to_node + (1 - adjustment_factor) * estimated_total_distance

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
