def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = distance_to_node
        else:
            direct_distance = distance_matrix[current_node][destination_node]
            detour_penalty = (distance_to_node + distance_to_destination - direct_distance) / (1.0 + direct_distance)
            exploration_bonus = 1.0 / (1.0 + remaining_nodes)
            score = distance_to_node + 0.5 * detour_penalty - exploration_bonus

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
