def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = -distance_to_node
        else:
            dynamic_weight = 1 + (distance_matrix[current_node][destination_node] / (distance_to_destination + 1e-6))
            proximity_bonus = distance_to_node / (distance_to_destination + 1e-6)
            angle_penalty = abs(distance_matrix[current_node][destination_node] - (distance_to_node + distance_to_destination))
            score = (proximity_bonus * dynamic_weight) - angle_penalty

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
