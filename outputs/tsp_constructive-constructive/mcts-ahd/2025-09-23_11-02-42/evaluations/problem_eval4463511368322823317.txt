def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(distance_matrix)
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = distance_to_node
        else:
            direct_distance = distance_matrix[current_node][destination_node]
            distance_weight = 0.5
            exploration_weight = 0.3 * (remaining_nodes / total_nodes) ** 2
            detour_penalty = (direct_distance / distance_to_destination - 1) * distance_to_destination
            score = (distance_weight * distance_to_node) + (0.5 * distance_weight * distance_to_destination) + (0.4 * detour_penalty) - (exploration_weight * direct_distance)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
