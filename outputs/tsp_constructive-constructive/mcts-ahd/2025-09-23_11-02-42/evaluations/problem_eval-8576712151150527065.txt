def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        direct_distance = distance_matrix[current_node][destination_node]

        if remaining_nodes == 1:
            score = distance_to_node + distance_to_destination
        else:
            weight = 0.5 if remaining_nodes > 3 else 0.7
            normalization_factor = direct_distance / (distance_to_destination + 1e-10)
            detour_penalty = distance_to_node + 0.5 * (normalization_factor - 1) * distance_to_destination
            score = (1 - weight) * detour_penalty + weight * distance_to_destination

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
