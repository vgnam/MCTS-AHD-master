def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            ratio = distance_to_node
        else:
            ratio = distance_to_node / distance_to_destination

        direct_distance = distance_matrix[current_node][destination_node]
        detour_penalty = (distance_to_node + distance_to_destination - direct_distance) ** 2 / (1.0 + direct_distance)

        progress_factor = 1.0 - (len(unvisited_nodes) / (len(unvisited_nodes) + 1))
        score = (1.0 - progress_factor) * ratio + progress_factor * detour_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
