def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = distance_to_node
        else:
            connectivity = sum(1 for d in distance_matrix[node] if d < distance_to_node)
            avg_neighbor_distance = sum(d for d in distance_matrix[node] if d != 0) / (len(distance_matrix[node]) - 1)
            penalty = (connectivity / avg_neighbor_distance) * (remaining_nodes ** 2)
            score = distance_to_node * (1 + penalty ** 2)

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
