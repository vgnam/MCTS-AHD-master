def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_destination == 0:
            score = distance_to_node
        else:
            dynamic_weight = 0.5 + (distance_to_destination / (distance_matrix[current_node][destination_node] + 1e-6))
            straight_line_distance = distance_matrix[current_node][destination_node]
            deviation_penalty = (distance_to_node + distance_to_destination - straight_line_distance) ** 2
            score = (0.6 * distance_to_node + 0.4 * distance_to_destination) * dynamic_weight + deviation_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
