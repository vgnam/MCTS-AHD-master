def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_value = float('inf')
    remaining_nodes = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        estimated_cost = distance_matrix[node][destination_node]

        # Dynamic weight adjustment
        if remaining_nodes > 1:
            weight = 0.7 * (remaining_nodes / (remaining_nodes + 1)) + 0.3
        else:
            weight = 1.0

        total_cost = (1 - weight) * distance_to_node + weight * (distance_to_node + estimated_cost)

        if total_cost < best_value:
            best_value = total_cost
            next_node = node

    return next_node
