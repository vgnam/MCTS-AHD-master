def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    alpha = 0.8  # Higher weight for immediate distance
    beta = 0.2   # Lower weight for estimated distance
    penalty = 1.5 # Stronger penalty for revisits

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        estimated_total_distance = distance_to_node + distance_matrix[node][destination_node]
        score = alpha * distance_to_node + beta * estimated_total_distance

        # Apply stronger penalty for revisits
        if node in unvisited_nodes:  # Simplified condition
            score *= penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
