def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('inf')
    total_nodes = len(distance_matrix)

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node]) / total_nodes

        direct_distance = distance_matrix[current_node][destination_node]
        detour_penalty = (distance_to_node + distance_to_destination - direct_distance) / (1.0 + direct_distance)

        score = distance_to_node + 0.3 * distance_to_destination + 0.4 * centrality + 0.3 * detour_penalty

        if score < best_score:
            best_score = score
            next_node = node

    return next_node
