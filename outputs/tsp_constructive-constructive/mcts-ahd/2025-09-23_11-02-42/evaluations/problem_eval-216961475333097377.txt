def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    next_node = None
    best_score = float('-inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        weight = len(unvisited_nodes) / (len(unvisited_nodes) + 1)
        if distance_to_destination == 0:
            score = -distance_to_node
        else:
            direct_distance = distance_matrix[current_node][destination_node]
            exploration_bonus = 2.0 * (1.0 / (1.0 + distance_to_node))
            exploitation_factor = (distance_to_destination - direct_distance) / direct_distance
            score = weight * (-distance_to_node + 1.5 * exploitation_factor) + (1 - weight) * exploration_bonus

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
