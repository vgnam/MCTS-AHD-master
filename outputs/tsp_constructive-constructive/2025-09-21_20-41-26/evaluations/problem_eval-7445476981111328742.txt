def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes and len(unvisited_nodes) > 1:
        return destination_node

    min_weighted_distance = float('inf')
    next_node = None
    alpha = 0.7  # Weight factor for distance to current node
    beta = 0.3   # Weight factor for distance to destination

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        distance_to_current = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]
        weighted_distance = (alpha * distance_to_current) + (beta * distance_to_destination)

        if weighted_distance < min_weighted_distance:
            min_weighted_distance = weighted_distance
            next_node = node

    return next_node
