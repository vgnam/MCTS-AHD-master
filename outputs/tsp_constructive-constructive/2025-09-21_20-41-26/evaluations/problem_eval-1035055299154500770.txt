def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if len(unvisited_nodes) == 1:
        return unvisited_nodes.pop()

    alpha = 0.7  # weight for immediate distance
    beta = 0.3   # weight for estimated path cost

    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        if node == destination_node:
            continue

        immediate_distance = distance_matrix[current_node][node]
        estimated_path_cost = distance_matrix[node][destination_node]
        score = alpha * immediate_distance + beta * estimated_path_cost

        if score < min_score:
            min_score = score
            next_node = node

    if next_node is None:
        next_node = destination_node

    return next_node
