def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None
    if destination_node in unvisited_nodes and len(unvisited_nodes) > 1:
        if len(unvisited_nodes) <= 3:
            return destination_node
        threshold = sum(distance_matrix[current_node][node] for node in unvisited_nodes) / len(unvisited_nodes)
        if distance_matrix[current_node][destination_node] < threshold:
            return destination_node
    min_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if distance < min_distance:
            min_distance = distance
            next_node = node
    if next_node != destination_node and len(unvisited_nodes) > 2:
        if random.random() < 0.3:
            candidates = [node for node in unvisited_nodes if distance_matrix[current_node][node] <= min_distance * 1.2]
            if candidates:
                next_node = random.choice(candidates)
    return next_node
