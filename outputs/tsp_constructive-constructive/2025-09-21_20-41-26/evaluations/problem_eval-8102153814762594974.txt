def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    remaining_nodes = len(unvisited_nodes)
    destination_bias = 1 - (remaining_nodes / (remaining_nodes + 1))  # Bias increases as nodes decrease

    if destination_node in unvisited_nodes and remaining_nodes > 1:
        if random.random() < destination_bias:
            return destination_node

    min_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            distance *= (1 + destination_bias)  # Increase penalty for destination if not selected
        if distance < min_distance:
            min_distance = distance
            next_node = node

    return next_node
