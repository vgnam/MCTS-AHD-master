def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        if len(unvisited_nodes) == 1:
            return destination_node
        else:
            remaining_nodes = unvisited_nodes - {destination_node}
            avg_distance = sum(distance_matrix[current_node][node] for node in remaining_nodes) / len(remaining_nodes)
            if distance_matrix[current_node][destination_node] < avg_distance:
                return destination_node

    min_distance = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        if node == destination_node:
            distance *= 0.7  # Slightly favor destination if not prioritized
        if distance < min_distance:
            min_distance = distance
            next_node = node
    return next_node
