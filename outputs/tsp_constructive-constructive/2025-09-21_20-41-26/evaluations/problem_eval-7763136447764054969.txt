import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes and len(unvisited_nodes) > 1:
        if random.random() < 0.7:  # Higher probability to select destination
            return destination_node
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        random_factor = random.uniform(0.5, 1.5)  # Random weight between 0.5 and 1.5
        score = distance * random_factor
        if node == destination_node and len(unvisited_nodes) > 1:
            score *= 0.3  # Slightly favor destination if not last node
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
