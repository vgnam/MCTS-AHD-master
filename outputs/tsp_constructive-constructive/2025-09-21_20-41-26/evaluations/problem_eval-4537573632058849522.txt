import random

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes and len(unvisited_nodes) == 1:
        return destination_node

    candidates = []
    weights = []

    for node in unvisited_nodes:
        if node == destination_node:
            weight = 0.7  # Higher weight for destination when not last
        else:
            weight = 1.0 / (distance_matrix[current_node][node] + 1e-6)  # Avoid division by zero
        candidates.append(node)
        weights.append(weight)

    # Normalize weights
    total_weight = sum(weights)
    normalized_weights = [w / total_weight for w in weights]

    # Select node based on weighted random choice
    next_node = random.choices(candidates, weights=normalized_weights, k=1)[0]
    return next_node
