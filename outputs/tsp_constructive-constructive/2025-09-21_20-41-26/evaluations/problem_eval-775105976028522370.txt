def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return None

    unvisited_copy = unvisited_nodes.copy()
    if destination_node in unvisited_copy and len(unvisited_copy) > 1:
        avg_distance = sum(distance_matrix[current_node][node] for node in unvisited_copy) / len(unvisited_copy)
        if distance_matrix[current_node][destination_node] <= 1.5 * avg_distance:
            return destination_node

    min_weighted_cost = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_copy)

    for node in unvisited_copy:
        distance = distance_matrix[current_node][node]
        weighted_cost = (distance / remaining_nodes) + (0.5 * distance) if node != destination_node else distance
        if weighted_cost < min_weighted_cost:
            min_weighted_cost = weighted_cost
            next_node = node

    return next_node
