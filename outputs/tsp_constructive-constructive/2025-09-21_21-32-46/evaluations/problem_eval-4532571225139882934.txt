def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    best_node = None
    best_score = float('inf')
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        future_savings = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if unvisited_nodes else 0
        score = immediate_distance + 0.5 * future_savings
        if score < best_score:
            best_score = score
            best_node = node
    return next_node
