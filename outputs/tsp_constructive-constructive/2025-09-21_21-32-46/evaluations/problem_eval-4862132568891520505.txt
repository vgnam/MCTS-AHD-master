def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    n = len(distance_matrix)
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        centrality = sum(distance_matrix[node]) / (n - 1)
        weight_current = 0.4
        weight_future = 0.4
        weight_centrality = 0.2
        total_score = (weight_current * current_distance) + (weight_future * future_distance) + (weight_centrality * centrality)
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
