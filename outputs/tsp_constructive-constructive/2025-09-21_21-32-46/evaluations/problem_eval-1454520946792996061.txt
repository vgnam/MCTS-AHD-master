def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    weight_factor = 1.0 / (len(unvisited_nodes) + 1)
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) == 1:
            future_average = distance_matrix[node][destination_node]
        else:
            future_sum = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
            future_average = future_sum / (len(unvisited_nodes) - 1)
        penalty = 0.1 * (len(unvisited_nodes) / (len(unvisited_nodes) + 1))
        total_score = (1 - weight_factor) * current_distance + weight_factor * future_average + penalty
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
