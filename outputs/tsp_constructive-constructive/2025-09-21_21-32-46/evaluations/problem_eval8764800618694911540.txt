def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining = len(unvisited_nodes)
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        if remaining == 1:
            future_average = 0
            variability = 0
        else:
            distances = [distance_matrix[node][other] for other in unvisited_nodes if other != node]
            future_average = sum(distances) / (remaining - 1)
            variability = sum((d - future_average) ** 2 for d in distances) / (remaining - 1)
        weight_current = 0.5 if remaining > 3 else 0.7
        weight_future = 0.3 if remaining > 3 else 0.2
        weight_avg = 0.2 if remaining > 3 else 0.1
        total_score = (weight_current * current_distance +
                      weight_future * future_distance +
                      weight_avg * future_average +
                      0.1 * variability)
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
