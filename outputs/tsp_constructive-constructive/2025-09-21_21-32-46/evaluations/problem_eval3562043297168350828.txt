def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) == 1:
            future_std = 0.0
        else:
            future_distances = [distance_matrix[node][other] for other in unvisited_nodes if other != node]
            future_mean = sum(future_distances) / len(future_distances)
            future_std = (sum((d - future_mean) ** 2 for d in future_distances) / len(future_distances)) ** 0.5
        penalty = 0.1 if distance_matrix[node][destination_node] < 0.5 * sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) else 0.0
        total_score = current_distance * (1 + future_std) + penalty
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
