def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    min_score = float('inf')
    next_node = None

    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]

        # Dynamic weighting factor based on remaining nodes
        weight = 1.0 - (0.5 * (remaining_nodes / (remaining_nodes + 1)))
        total_score = (current_distance * weight) + (future_distance * (1 - weight))

        if total_score < min_score:
            min_score = total_score
            next_node = node

    return next_node
