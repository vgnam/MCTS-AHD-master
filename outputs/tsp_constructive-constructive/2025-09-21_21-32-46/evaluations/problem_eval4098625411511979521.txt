def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    lookahead_factor = 0.3  # Weight for future impact
    for node in unvisited_nodes:
        immediate_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) > 1:
            remaining_nodes = [n for n in unvisited_nodes if n != node]
            future_distances = [distance_matrix[node][n] for n in remaining_nodes]
            future_impact = sum(future_distances) / len(future_distances) if future_distances else 0
            score = immediate_distance + lookahead_factor * future_impact
        else:
            score = immediate_distance
        if score < min_score:
            min_score = score
            next_node = node
    return next_node
