def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    best_node = None
    best_score = float('-inf')
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        savings = distance_matrix[current_node][destination_node] - distance_matrix[node][destination_node]
        score = -distance + 0.5 * savings
        if score > best_score:
            best_score = score
            best_node = node
    return next_node
