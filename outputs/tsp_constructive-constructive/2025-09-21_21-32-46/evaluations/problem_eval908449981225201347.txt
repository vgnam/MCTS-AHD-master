def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        future_distance = distance_matrix[node][destination_node]
        if remaining_nodes == 1:
            future_average = 0
        else:
            future_sum = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
            future_average = future_sum / (remaining_nodes - 1)
        weight_factor = 1.0 / (1.0 + future_average) if future_average > 0 else 1.0
        dynamic_weight = 0.5 + 0.5 * (remaining_nodes / (remaining_nodes + 1))
        total_score = (dynamic_weight * current_distance) + ((1 - dynamic_weight) * future_distance) + (weight_factor * future_average)
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
