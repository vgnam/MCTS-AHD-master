def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        if len(unvisited_nodes) == 1:
            future_score = distance_matrix[node][destination_node]
        else:
            future_weights = [1 / distance_matrix[node][other] if distance_matrix[node][other] != 0 else 1e6 for other in unvisited_nodes if other != node]
            future_distances = [distance_matrix[node][other] for other in unvisited_nodes if other != node]
            weighted_sum = sum(w * d for w, d in zip(future_weights, future_distances)) / sum(future_weights)
            future_score = weighted_sum
        total_score = current_distance + 0.5 * future_score
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
