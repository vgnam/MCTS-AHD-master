def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if not unvisited_nodes:
        return destination_node
    min_score = float('inf')
    next_node = None
    remaining = len(unvisited_nodes)
    for node in unvisited_nodes:
        current_distance = distance_matrix[current_node][node]
        if remaining == 1:
            future_potential = distance_matrix[node][destination_node]
        else:
            future_sum = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node)
            future_potential = future_sum / (remaining - 1)
        weight = 1.0 - (remaining / (remaining + 1))  # Adjust weight based on remaining nodes
        total_score = current_distance + weight * future_potential
        if total_score < min_score:
            min_score = total_score
            next_node = node
    return next_node
