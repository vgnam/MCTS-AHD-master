"def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):\n    if destination_node in unvisited_nodes:\n        return destination_node\n\n    max_score = -float('inf')\n    next_node = None\n\n    # Calculate average distance of unvisited nodes to the destination\n    total_destination_distance = 0\n    count = 0\n    for node in unvisited_nodes:\n        if node != destination_node:\n            total_destination_distance += distance_matrix[node][destination_node]\n            count += 1\n    avg_destination_distance = total_destination_distance / count if count > 0 else 0\n\n    for node in unvisited_nodes:\n        distance = distance_matrix[current_node][node]\n        destination_distance = distance_matrix[node][destination_node]\n        if distance == 0:\n            continue\n\n        # Weighted score combining the original ratio and average distance heuristic\n        ratio = destination_distance / distance\n        distance_weight = 1 - (destination_distance / (avg_destination_distance + 1e-10))\n        score = ratio * 0.7 + distance_weight * 0.3\n\n        if score > max_score:\n            max_score = score\n            next_node = node\n\n    return next_node"