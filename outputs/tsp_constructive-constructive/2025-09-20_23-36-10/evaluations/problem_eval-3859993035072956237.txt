def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    visit_frequency = {node: 1 for node in unvisited_nodes}
    total_visits = sum(visit_frequency.values())

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        proximity_weight = destination_distance / distance
        exploration_weight = (1 / visit_frequency[node]) / total_visits
        score = 0.7 * proximity_weight + 0.3 * exploration_weight

        if score > max_score:
            max_score = score
            next_node = node

    if next_node is not None:
        visit_frequency[next_node] += 1

    return next_node
