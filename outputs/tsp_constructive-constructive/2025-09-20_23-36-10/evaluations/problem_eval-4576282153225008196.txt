def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Dynamic bias towards nodes closer to destination, penalize revisits
        bias = 1.0 / (destination_distance + 1e-6)
        detour_penalty = 1.0 / (distance + 1e-6)
        score = bias * detour_penalty

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
