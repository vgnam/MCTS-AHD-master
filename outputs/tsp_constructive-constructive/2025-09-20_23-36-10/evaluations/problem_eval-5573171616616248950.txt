def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    next_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_node == 0:
            continue

        # Weighted ratio with a penalty for nodes too far from the destination
        score = (distance_to_destination / distance_to_node) * (1 - 0.1 * (distance_to_destination / max(distance_matrix[node])))

        if score > best_score:
            best_score = score
            next_node = node

    return next_node
