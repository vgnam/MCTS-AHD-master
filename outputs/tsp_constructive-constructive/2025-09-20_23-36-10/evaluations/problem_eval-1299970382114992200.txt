def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    total_unvisited = len(unvisited_nodes)
    weight = 1.0 / (1.0 + total_unvisited)  # Dynamic weight based on remaining nodes

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue
        score = (destination_distance ** weight) / (distance ** (1 - weight))
        if score > max_score:
            max_score = score
            next_node = node
    return next_node
