def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == current_node:
            continue

        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        if distance == 0:
            continue

        centrality = sum(distance_matrix[node]) / len(distance_matrix[node]) if len(distance_matrix[node]) > 0 else 0
        penalty = 1.0 / (1.0 + len(unvisited_nodes)) if node in unvisited_nodes else 0

        score = (destination_distance / distance) * (1.0 + centrality) * (1.0 - penalty)

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
