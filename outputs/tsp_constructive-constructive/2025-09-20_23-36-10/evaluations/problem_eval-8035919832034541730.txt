def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    decay_factor = 0.7
    threshold = 0.5
    max_score = -float('inf')
    next_node = None

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        ratio = destination_distance / distance
        detour_penalty = distance / sum(distance_matrix[node][n] for n in unvisited_nodes if n != node)
        score = (ratio ** decay_factor) * (1 - detour_penalty)

        if score > threshold and score > max_score:
            max_score = score
            next_node = node

    return next_node
