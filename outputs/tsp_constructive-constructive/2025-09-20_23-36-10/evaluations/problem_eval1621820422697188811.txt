def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Dynamic weighting mechanism
        if len(unvisited_nodes) > 2:
            weight = 0.7 * (destination_distance / distance) + 0.3 * (distance / sum(distance_matrix[node]))
        else:
            weight = destination_distance / distance

        if weight > max_score:
            max_score = weight
            next_node = node
    return next_node
