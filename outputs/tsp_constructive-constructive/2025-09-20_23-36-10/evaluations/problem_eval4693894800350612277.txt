def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        ratio = destination_distance / distance
        inverse_distance = 1 / distance
        adaptive_weight = 1 / (remaining_nodes + 1) if remaining_nodes > 0 else 1

        score = (ratio + inverse_distance) * adaptive_weight
        if score > max_score:
            max_score = score
            next_node = node

    return next_node
