def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    weighted_scores = []
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue
        ratio = destination_distance / distance
        random_factor = random.uniform(0.5, 1.5)
        weighted_score = 0.7 * ratio + 0.3 * random_factor
        weighted_scores.append((node, weighted_score))

    if not weighted_scores:
        return None

    weighted_scores.sort(key=lambda x: x[1], reverse=True)
    return next_node
