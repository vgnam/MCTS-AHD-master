def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    best_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        if distance == 0:
            continue

        ratio = destination_distance / distance
        detour_penalty = distance / max(distance_matrix[current_node][n] for n in unvisited_nodes if n != node)
        score = ratio - 0.5 * detour_penalty

        if score > best_score:
            best_score = score
            best_node = node

    return next_node
