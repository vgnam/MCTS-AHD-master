def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    remaining_nodes = len(unvisited_nodes)
    weight_factor = 1 / (1 + remaining_nodes)  # Higher weight when fewer nodes remain

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue
        score = (destination_distance ** 2) / (distance * (1 + weight_factor * distance))
        if score > max_score:
            max_score = score
            next_node = node
    return next_node
