def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    best_node = None
    best_score = -float('inf')

    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_to_destination = distance_matrix[node][destination_node]

        if distance_to_node == 0:
            continue

        ratio = distance_to_destination / distance_to_node
        cumulative_weight = (ratio * 0.7) + (1 / (distance_to_node + 1e-6) * 0.3)

        if cumulative_weight > best_score:
            best_score = cumulative_weight
            best_node = node

    return next_node
