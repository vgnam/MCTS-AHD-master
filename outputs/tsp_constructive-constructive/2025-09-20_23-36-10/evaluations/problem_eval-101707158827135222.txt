def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None

    current_destination_distance = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        if distance == 0:
            continue

        direct_ratio = destination_distance / distance
        detour_penalty = (destination_distance - current_destination_distance) / current_destination_distance
        proximity_bonus = 1 / (1 + distance)

        score = (direct_ratio * 0.6) - (detour_penalty * 0.3) + (proximity_bonus * 0.1)

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
