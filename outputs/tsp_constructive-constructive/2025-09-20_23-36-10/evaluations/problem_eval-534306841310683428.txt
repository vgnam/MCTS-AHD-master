def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Original ratio component
        ratio = destination_distance / distance

        # Novel progress score: balance between ratio and remaining distance
        progress_score = ratio * (1 + (1 / (1 + distance_matrix[node][destination_node])))

        # Penalty to avoid revisiting nodes (simplified)
        if node == current_node:
            progress_score *= 0.5

        if progress_score > max_score:
            max_score = progress_score
            next_node = node

    return next_node
