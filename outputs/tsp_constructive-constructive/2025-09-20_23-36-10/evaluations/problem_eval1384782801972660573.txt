def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Weighted score combining destination distance and current distance, with a penalty for revisiting nodes
        score = (0.6 * destination_distance - 0.4 * distance) - (0.1 * (len(unvisited_nodes) / len(distance_matrix)))

        if score > max_score:
            max_score = score
            next_node = node
    return next_node
