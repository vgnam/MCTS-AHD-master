def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    current_distance_to_dest = distance_matrix[current_node][destination_node]

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Dynamic weight factor based on destination proximity
        weight = 1.0 + (current_distance_to_dest / (current_distance_to_dest + destination_distance + 1e-6))

        # Score combines ratio and weighted destination distance
        score = (destination_distance / distance) * weight

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
