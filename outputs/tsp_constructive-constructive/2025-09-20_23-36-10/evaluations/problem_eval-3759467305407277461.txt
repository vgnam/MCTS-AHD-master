def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    num_unvisited = len(unvisited_nodes)

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue
        ratio = destination_distance / distance
        penalty = (num_unvisited - 1) / num_unvisited  # Penalize larger detours as more nodes remain
        score = ratio * (1 - penalty)
        if score > max_score:
            max_score = score
            next_node = node
    return next_node
