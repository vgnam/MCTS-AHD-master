def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Calculate the ratio of destination distance to current distance
        ratio = destination_distance / distance

        # Calculate the average distance to other unvisited nodes
        avg_distance = sum(distance_matrix[node][other] for other in unvisited_nodes if other != node) / len(unvisited_nodes) if len(unvisited_nodes) > 1 else 1

        # Combine ratio and average distance to form a score
        score = ratio * (1 / avg_distance) if avg_distance != 0 else ratio

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
