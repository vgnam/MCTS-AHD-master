def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes) - 1  # Exclude destination if already considered

    for node in unvisited_nodes:
        if node == destination_node:
            continue
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        if distance == 0:
            continue

        # Dynamic weight based on remaining nodes and current distances
        weight = (1.0 / (remaining_nodes + 1)) * (destination_distance / distance)
        score = weight * (destination_distance / (distance + 0.1 * distance_matrix[current_node][destination_node]))

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
