def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        ratio = destination_distance / distance
        penalty = 1.0 / (1.0 + len(unvisited_nodes))  # Penalty for revisiting nodes
        bonus = 1.0 - (destination_distance / sum(distance_matrix[node]))  # Bonus for nodes closer to destination
        score = ratio * (1 - penalty) + bonus

        if score > max_score:
            max_score = score
            next_node = node
    return next_node
