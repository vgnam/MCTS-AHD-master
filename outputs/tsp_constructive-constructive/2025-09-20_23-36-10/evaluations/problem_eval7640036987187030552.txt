def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    total_unvisited = len(unvisited_nodes)
    progress_weight = 1.0 / (total_unvisited + 1)  # Weight decreases as progress increases

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue
        ratio = destination_distance / distance
        closeness = 1.0 / destination_distance if destination_distance != 0 else float('inf')
        score = (1 - progress_weight) * ratio + progress_weight * closeness
        if score > max_score:
            max_score = score
            next_node = node
    return next_node
