def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    next_node = None
    max_score = -float('inf')

    for node in unvisited_nodes:
        if node == current_node:
            continue

        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]

        if distance == 0:
            continue

        # Dynamic weighting based on remaining unvisited nodes
        weight = 1.0 / len(unvisited_nodes) if len(unvisited_nodes) > 1 else 1.0
        score = (destination_distance ** weight) / (distance ** (1 - weight))

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
