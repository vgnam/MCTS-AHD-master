def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        if node == current_node:
            continue
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue
        normalized_distance = distance / max(distance_matrix[current_node][n] for n in unvisited_nodes if n != current_node)
        weight = 0.7 * (destination_distance / distance) + 0.3 * normalized_distance
        if weight > max_score:
            max_score = weight
            next_node = node
    return next_node
