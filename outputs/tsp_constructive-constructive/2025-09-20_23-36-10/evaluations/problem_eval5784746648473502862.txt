def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue
        ratio = destination_distance / distance

        remaining_nodes = unvisited_nodes - {node}
        if remaining_nodes:
            avg_distance = sum(distance_matrix[node][n] for n in remaining_nodes) / len(remaining_nodes)
            detour_factor = avg_distance / distance
        else:
            detour_factor = 1.0

        score = 0.6 * ratio + 0.4 * detour_factor

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
