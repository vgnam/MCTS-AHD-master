def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None

    # Calculate average distance of unvisited nodes to the destination
    total_destination_distance = 0
    count = 0
    for node in unvisited_nodes:
        if node != destination_node:
            total_destination_distance += distance_matrix[node][destination_node]
            count += 1
    avg_destination_distance = total_destination_distance / count if count > 0 else 0

    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Weighted score combining the original ratio and average distance heuristic
        ratio = destination_distance / distance
        distance_weight = 1 - (destination_distance / (avg_destination_distance + 1e-10))
        score = ratio * 0.7 + distance_weight * 0.3

        if score > max_score:
            max_score = score
            next_node = node

    return next_node
