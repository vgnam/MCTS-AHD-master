def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    remaining_nodes = len(unvisited_nodes)
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        base_ratio = destination_distance / distance
        dynamic_weight = (remaining_nodes - 1) / remaining_nodes if remaining_nodes > 1 else 1.0
        heuristic = distance_matrix[current_node][destination_node] / (distance + destination_distance)
        score = (base_ratio * dynamic_weight) + (heuristic * (1 - dynamic_weight))

        if score > max_score:
            max_score = score
            next_node = node
    return next_node
