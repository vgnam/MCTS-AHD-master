def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        return destination_node

    max_score = -float('inf')
    next_node = None
    for node in unvisited_nodes:
        distance = distance_matrix[current_node][node]
        destination_distance = distance_matrix[node][destination_node]
        if distance == 0:
            continue

        # Dynamic weight factor: penalizes nodes too far from current node
        weight = 1.0 / (1.0 + (distance / max(distance_matrix[current_node][n] for n in unvisited_nodes if n != node)))
        score = (destination_distance * weight) / distance

        if score > max_score:
            max_score = score
            next_node = node
    return next_node
