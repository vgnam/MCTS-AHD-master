def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        next_node = destination_node
    else:
        def weighted_cost(node):
            immediate_cost = distance_matrix[current_node][node]
            future_cost = distance_matrix[node][destination_node]
            return 0.6 * immediate_cost + 0.4 * future_cost
        next_node = min(unvisited_nodes, key=weighted_cost)
    return next_node
