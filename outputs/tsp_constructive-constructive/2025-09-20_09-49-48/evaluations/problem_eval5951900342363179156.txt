def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        next_node = destination_node
    else:
        remaining_nodes = len(unvisited_nodes)
        if remaining_nodes == 1:
            next_node = unvisited_nodes.pop()
        else:
            weight_current = remaining_nodes / (remaining_nodes + 1)
            weight_destination = 1 / (remaining_nodes + 1)
            next_node = min(unvisited_nodes, key=lambda node: weight_current * distance_matrix[current_node][node] + weight_destination * distance_matrix[node][destination_node])
    return next_node
