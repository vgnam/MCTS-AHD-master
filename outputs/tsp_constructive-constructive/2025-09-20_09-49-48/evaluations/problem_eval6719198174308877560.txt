importance to prioritizing progress.}

def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    if destination_node in unvisited_nodes:
        next_node = destination_node
    else:
        total_nodes = len(distance_matrix)
        progress = (total_nodes - len(unvisited_nodes)) / total_nodes
        weight = 0.5 + 0.5 * progress
        next_node = min(unvisited_nodes, key=lambda node: weight * distance_matrix[current_node][node] + (1 - weight) * distance_matrix[node][destination_node])
    return next_node
